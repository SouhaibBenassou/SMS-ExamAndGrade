// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastracture.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.AllResults", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ExamResultId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TestResultsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ExamResultId");

                    b.HasIndex("TestResultsId");

                    b.ToTable("AllResults");
                });

            modelBuilder.Entity("Domain.Entities.Exam", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Duration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExamDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ExamType")
                        .HasColumnType("int");

                    b.Property<Guid?>("FiliereId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UnitOfFormationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("YearId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("YearType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FiliereId");

                    b.HasIndex("UnitOfFormationId");

                    b.ToTable("Exams");
                });

            modelBuilder.Entity("Domain.Entities.ExamAttendance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("Attendance")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ExamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("StagiaireId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ExamId");

                    b.ToTable("ExamAttendances");
                });

            modelBuilder.Entity("Domain.Entities.ExamSession", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ExamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("SupervisorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ExamId")
                        .IsUnique();

                    b.HasIndex("RoomId");

                    b.HasIndex("SupervisorId");

                    b.ToTable("ExamSessions");
                });

            modelBuilder.Entity("Domain.Entities.IndividualWork", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StagiaireId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("IndividualWorks");
                });

            modelBuilder.Entity("Domain.Entities.IndividualWorkUOF", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Confusion")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IndividualWorkId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Note")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IndividualWorkId");

                    b.ToTable("IndividualWorkUOFs");
                });

            modelBuilder.Entity("Domain.Entities.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoomType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("Domain.Entities.Supervisor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Supervisors");
                });

            modelBuilder.Entity("Domain.Entities.TestResult", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("DateValidation")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsValid")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Note")
                        .HasColumnType("float");

                    b.Property<Guid?>("StagiaireId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TestId");

                    b.ToTable("TestResults");
                });

            modelBuilder.Entity("Domain.Entities.VariantsExams", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExamCorrection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ExamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ExamStatement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsValid")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NoteMax")
                        .HasColumnType("int");

                    b.Property<Guid?>("TrainerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UnitOfFormationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("VariantName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VariantType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExamId");

                    b.HasIndex("UnitOfFormationId");

                    b.ToTable("VariantsExams");
                });

            modelBuilder.Entity("Domain.EntitiesFromOtherServices.FiliereService.Filiere", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Capacite")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duree")
                        .HasColumnType("int");

                    b.Property<decimal>("FraisInscription")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("GroupCapacity")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MontantAnnuel")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontantMensuel")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontantTrimestre")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Niveau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomFiliere")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Filieres");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c4677026-cb1e-4741-9685-0f56b9758e65"),
                            Capacite = 50,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(196),
                            Description = "Description for Computer Science",
                            Duree = 2,
                            FraisInscription = 3000m,
                            GroupCapacity = 10,
                            IsDeleted = false,
                            MontantAnnuel = 12000m,
                            MontantMensuel = 1000m,
                            MontantTrimestre = 3000m,
                            Niveau = "Master",
                            NomFiliere = "Computer Science"
                        },
                        new
                        {
                            Id = new Guid("21aef537-d19e-48bf-a523-23db8e193522"),
                            Capacite = 55,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(348),
                            Description = "Description for Electrical Engineering",
                            Duree = 3,
                            FraisInscription = 3200m,
                            GroupCapacity = 12,
                            IsDeleted = false,
                            MontantAnnuel = 13000m,
                            MontantMensuel = 1100m,
                            MontantTrimestre = 3250m,
                            Niveau = "Bachelor",
                            NomFiliere = "Electrical Engineering"
                        },
                        new
                        {
                            Id = new Guid("ed9a86d0-0ff8-4585-b8a9-2852465959c2"),
                            Capacite = 60,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(430),
                            Description = "Description for Mechanical Engineering",
                            Duree = 4,
                            FraisInscription = 3400m,
                            GroupCapacity = 14,
                            IsDeleted = false,
                            MontantAnnuel = 14000m,
                            MontantMensuel = 1200m,
                            MontantTrimestre = 3500m,
                            Niveau = "Master",
                            NomFiliere = "Mechanical Engineering"
                        },
                        new
                        {
                            Id = new Guid("fc17e25e-7453-4924-a4ca-2c036306622b"),
                            Capacite = 65,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(509),
                            Description = "Description for Civil Engineering",
                            Duree = 5,
                            FraisInscription = 3600m,
                            GroupCapacity = 16,
                            IsDeleted = false,
                            MontantAnnuel = 15000m,
                            MontantMensuel = 1300m,
                            MontantTrimestre = 3750m,
                            Niveau = "Bachelor",
                            NomFiliere = "Civil Engineering"
                        },
                        new
                        {
                            Id = new Guid("a82c929f-5567-4248-b31b-3dac539c18c6"),
                            Capacite = 70,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(664),
                            Description = "Description for Chemical Engineering",
                            Duree = 2,
                            FraisInscription = 3800m,
                            GroupCapacity = 18,
                            IsDeleted = false,
                            MontantAnnuel = 16000m,
                            MontantMensuel = 1400m,
                            MontantTrimestre = 4000m,
                            Niveau = "Master",
                            NomFiliere = "Chemical Engineering"
                        },
                        new
                        {
                            Id = new Guid("bce4bd92-9359-4303-b629-513e17ccf10f"),
                            Capacite = 75,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(735),
                            Description = "Description for Biotechnology",
                            Duree = 3,
                            FraisInscription = 4000m,
                            GroupCapacity = 20,
                            IsDeleted = false,
                            MontantAnnuel = 17000m,
                            MontantMensuel = 1500m,
                            MontantTrimestre = 4250m,
                            Niveau = "Bachelor",
                            NomFiliere = "Biotechnology"
                        },
                        new
                        {
                            Id = new Guid("c42fa17d-e149-46a6-b2ae-53e972da0585"),
                            Capacite = 80,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(801),
                            Description = "Description for Mathematics",
                            Duree = 4,
                            FraisInscription = 4200m,
                            GroupCapacity = 22,
                            IsDeleted = false,
                            MontantAnnuel = 18000m,
                            MontantMensuel = 1600m,
                            MontantTrimestre = 4500m,
                            Niveau = "Master",
                            NomFiliere = "Mathematics"
                        },
                        new
                        {
                            Id = new Guid("310b5fae-6446-4590-b08f-55047f4a78e9"),
                            Capacite = 85,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(889),
                            Description = "Description for Physics",
                            Duree = 5,
                            FraisInscription = 4400m,
                            GroupCapacity = 24,
                            IsDeleted = false,
                            MontantAnnuel = 19000m,
                            MontantMensuel = 1700m,
                            MontantTrimestre = 4750m,
                            Niveau = "Bachelor",
                            NomFiliere = "Physics"
                        },
                        new
                        {
                            Id = new Guid("1c75a28a-7091-42d4-8a13-5b37515d7a4a"),
                            Capacite = 90,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(970),
                            Description = "Description for Chemistry",
                            Duree = 2,
                            FraisInscription = 4600m,
                            GroupCapacity = 26,
                            IsDeleted = false,
                            MontantAnnuel = 20000m,
                            MontantMensuel = 1800m,
                            MontantTrimestre = 5000m,
                            Niveau = "Master",
                            NomFiliere = "Chemistry"
                        },
                        new
                        {
                            Id = new Guid("48bc9d15-e2bc-4741-97af-621693a1ebb5"),
                            Capacite = 95,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(1061),
                            Description = "Description for Biology",
                            Duree = 3,
                            FraisInscription = 4800m,
                            GroupCapacity = 28,
                            IsDeleted = false,
                            MontantAnnuel = 21000m,
                            MontantMensuel = 1900m,
                            MontantTrimestre = 5250m,
                            Niveau = "Bachelor",
                            NomFiliere = "Biology"
                        },
                        new
                        {
                            Id = new Guid("e817e565-faad-42b8-9dca-70e03d67bdfd"),
                            Capacite = 100,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(1160),
                            Description = "Description for Environmental Science",
                            Duree = 4,
                            FraisInscription = 5000m,
                            GroupCapacity = 30,
                            IsDeleted = false,
                            MontantAnnuel = 22000m,
                            MontantMensuel = 2000m,
                            MontantTrimestre = 5500m,
                            Niveau = "Master",
                            NomFiliere = "Environmental Science"
                        },
                        new
                        {
                            Id = new Guid("c1c6fbc9-2fde-4c9e-b6cf-78a06f299de7"),
                            Capacite = 105,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(1223),
                            Description = "Description for Economics",
                            Duree = 5,
                            FraisInscription = 5200m,
                            GroupCapacity = 32,
                            IsDeleted = false,
                            MontantAnnuel = 23000m,
                            MontantMensuel = 2100m,
                            MontantTrimestre = 5750m,
                            Niveau = "Bachelor",
                            NomFiliere = "Economics"
                        },
                        new
                        {
                            Id = new Guid("08ce7b0a-5642-4337-80ce-aef919a0b2d9"),
                            Capacite = 110,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(1303),
                            Description = "Description for Psychology",
                            Duree = 2,
                            FraisInscription = 5400m,
                            GroupCapacity = 34,
                            IsDeleted = false,
                            MontantAnnuel = 24000m,
                            MontantMensuel = 2200m,
                            MontantTrimestre = 6000m,
                            Niveau = "Master",
                            NomFiliere = "Psychology"
                        },
                        new
                        {
                            Id = new Guid("16822560-9848-4a88-80f2-bb716ce8c18d"),
                            Capacite = 115,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(1400),
                            Description = "Description for Sociology",
                            Duree = 3,
                            FraisInscription = 5600m,
                            GroupCapacity = 36,
                            IsDeleted = false,
                            MontantAnnuel = 25000m,
                            MontantMensuel = 2300m,
                            MontantTrimestre = 6250m,
                            Niveau = "Bachelor",
                            NomFiliere = "Sociology"
                        },
                        new
                        {
                            Id = new Guid("c094c44b-cac4-4fb9-88e0-c29a43bb7edb"),
                            Capacite = 120,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(1481),
                            Description = "Description for History",
                            Duree = 4,
                            FraisInscription = 5800m,
                            GroupCapacity = 38,
                            IsDeleted = false,
                            MontantAnnuel = 26000m,
                            MontantMensuel = 2400m,
                            MontantTrimestre = 6500m,
                            Niveau = "Master",
                            NomFiliere = "History"
                        },
                        new
                        {
                            Id = new Guid("109d52af-6448-4280-bcb8-c9ed03570c8c"),
                            Capacite = 125,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(1549),
                            Description = "Description for Philosophy",
                            Duree = 5,
                            FraisInscription = 6000m,
                            GroupCapacity = 40,
                            IsDeleted = false,
                            MontantAnnuel = 27000m,
                            MontantMensuel = 2500m,
                            MontantTrimestre = 6750m,
                            Niveau = "Bachelor",
                            NomFiliere = "Philosophy"
                        },
                        new
                        {
                            Id = new Guid("27039911-d1ef-4662-ad01-f5b0260bfa96"),
                            Capacite = 130,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(1652),
                            Description = "Description for Political Science",
                            Duree = 2,
                            FraisInscription = 6200m,
                            GroupCapacity = 42,
                            IsDeleted = false,
                            MontantAnnuel = 28000m,
                            MontantMensuel = 2600m,
                            MontantTrimestre = 7000m,
                            Niveau = "Master",
                            NomFiliere = "Political Science"
                        },
                        new
                        {
                            Id = new Guid("06f1a5e9-8864-40e3-b6d6-f8945f97e205"),
                            Capacite = 135,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(1728),
                            Description = "Description for International Relations",
                            Duree = 3,
                            FraisInscription = 6400m,
                            GroupCapacity = 44,
                            IsDeleted = false,
                            MontantAnnuel = 29000m,
                            MontantMensuel = 2700m,
                            MontantTrimestre = 7250m,
                            Niveau = "Bachelor",
                            NomFiliere = "International Relations"
                        });
                });

            modelBuilder.Entity("Domain.EntitiesFromOtherServices.FiliereService.FiliereUnitOfFormation", b =>
                {
                    b.Property<Guid>("FiliereId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UnitOfFormationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("FiliereId", "UnitOfFormationId");

                    b.HasIndex("UnitOfFormationId");

                    b.ToTable("FiliereUnitOfFormations");

                    b.HasData(
                        new
                        {
                            FiliereId = new Guid("c4677026-cb1e-4741-9685-0f56b9758e65"),
                            UnitOfFormationId = new Guid("22105920-ef53-452d-b5f5-ae48495f4abb")
                        },
                        new
                        {
                            FiliereId = new Guid("c4677026-cb1e-4741-9685-0f56b9758e65"),
                            UnitOfFormationId = new Guid("cbf22d7b-01a9-4d8e-b0fc-ebda0e18a6f8")
                        },
                        new
                        {
                            FiliereId = new Guid("c4677026-cb1e-4741-9685-0f56b9758e65"),
                            UnitOfFormationId = new Guid("aff588b9-d077-4f68-899b-2a6b24feea10")
                        },
                        new
                        {
                            FiliereId = new Guid("c4677026-cb1e-4741-9685-0f56b9758e65"),
                            UnitOfFormationId = new Guid("b56c7ac9-bc20-426e-9ab9-92e1c3c26991")
                        },
                        new
                        {
                            FiliereId = new Guid("c4677026-cb1e-4741-9685-0f56b9758e65"),
                            UnitOfFormationId = new Guid("4433a66f-3c0f-421e-94ab-5bcbbd6bb259")
                        },
                        new
                        {
                            FiliereId = new Guid("21aef537-d19e-48bf-a523-23db8e193522"),
                            UnitOfFormationId = new Guid("39f69cb4-fa6a-4413-8991-072f39ac2587")
                        },
                        new
                        {
                            FiliereId = new Guid("21aef537-d19e-48bf-a523-23db8e193522"),
                            UnitOfFormationId = new Guid("22105920-ef53-452d-b5f5-ae48495f4abb")
                        },
                        new
                        {
                            FiliereId = new Guid("21aef537-d19e-48bf-a523-23db8e193522"),
                            UnitOfFormationId = new Guid("c92538d1-ee3e-4e6a-94c8-bfe81bc3127d")
                        },
                        new
                        {
                            FiliereId = new Guid("21aef537-d19e-48bf-a523-23db8e193522"),
                            UnitOfFormationId = new Guid("cbf22d7b-01a9-4d8e-b0fc-ebda0e18a6f8")
                        },
                        new
                        {
                            FiliereId = new Guid("21aef537-d19e-48bf-a523-23db8e193522"),
                            UnitOfFormationId = new Guid("7bb97700-c70f-4c29-86dc-285c3c08c98f")
                        },
                        new
                        {
                            FiliereId = new Guid("ed9a86d0-0ff8-4585-b8a9-2852465959c2"),
                            UnitOfFormationId = new Guid("c040c2e2-7bcf-438d-9a57-4a8c4db32710")
                        },
                        new
                        {
                            FiliereId = new Guid("ed9a86d0-0ff8-4585-b8a9-2852465959c2"),
                            UnitOfFormationId = new Guid("80f385d8-78a7-452b-86e0-90b51c048df4")
                        },
                        new
                        {
                            FiliereId = new Guid("ed9a86d0-0ff8-4585-b8a9-2852465959c2"),
                            UnitOfFormationId = new Guid("ddbe9864-01a6-495c-8f23-5ba0ebd84f68")
                        },
                        new
                        {
                            FiliereId = new Guid("ed9a86d0-0ff8-4585-b8a9-2852465959c2"),
                            UnitOfFormationId = new Guid("b8d0b66c-d031-48a7-ae86-aa90bb9109b6")
                        },
                        new
                        {
                            FiliereId = new Guid("ed9a86d0-0ff8-4585-b8a9-2852465959c2"),
                            UnitOfFormationId = new Guid("1d35297d-32ee-42e9-92f1-2b7abb779109")
                        },
                        new
                        {
                            FiliereId = new Guid("fc17e25e-7453-4924-a4ca-2c036306622b"),
                            UnitOfFormationId = new Guid("70ca9d34-ce0c-4855-a654-2eed5d25921a")
                        },
                        new
                        {
                            FiliereId = new Guid("fc17e25e-7453-4924-a4ca-2c036306622b"),
                            UnitOfFormationId = new Guid("b8d0b66c-d031-48a7-ae86-aa90bb9109b6")
                        },
                        new
                        {
                            FiliereId = new Guid("fc17e25e-7453-4924-a4ca-2c036306622b"),
                            UnitOfFormationId = new Guid("f06e9631-fff9-43db-b218-eca32d5e4270")
                        },
                        new
                        {
                            FiliereId = new Guid("fc17e25e-7453-4924-a4ca-2c036306622b"),
                            UnitOfFormationId = new Guid("f0578c80-dbfb-44df-9f63-d15c06a3ead6")
                        },
                        new
                        {
                            FiliereId = new Guid("fc17e25e-7453-4924-a4ca-2c036306622b"),
                            UnitOfFormationId = new Guid("c92538d1-ee3e-4e6a-94c8-bfe81bc3127d")
                        },
                        new
                        {
                            FiliereId = new Guid("a82c929f-5567-4248-b31b-3dac539c18c6"),
                            UnitOfFormationId = new Guid("5b63d6a5-1953-4749-90f4-b28a39312b13")
                        },
                        new
                        {
                            FiliereId = new Guid("a82c929f-5567-4248-b31b-3dac539c18c6"),
                            UnitOfFormationId = new Guid("fc78bd31-fa21-45fb-ab89-ab928f155041")
                        },
                        new
                        {
                            FiliereId = new Guid("a82c929f-5567-4248-b31b-3dac539c18c6"),
                            UnitOfFormationId = new Guid("1c0bd733-0447-4351-b42a-6a595a73a87d")
                        },
                        new
                        {
                            FiliereId = new Guid("a82c929f-5567-4248-b31b-3dac539c18c6"),
                            UnitOfFormationId = new Guid("d4bf9b84-4a3f-45eb-bf9d-00c5b69f48bb")
                        },
                        new
                        {
                            FiliereId = new Guid("a82c929f-5567-4248-b31b-3dac539c18c6"),
                            UnitOfFormationId = new Guid("3358e7b2-03de-4973-a035-cf063663043a")
                        },
                        new
                        {
                            FiliereId = new Guid("bce4bd92-9359-4303-b629-513e17ccf10f"),
                            UnitOfFormationId = new Guid("70ca9d34-ce0c-4855-a654-2eed5d25921a")
                        },
                        new
                        {
                            FiliereId = new Guid("bce4bd92-9359-4303-b629-513e17ccf10f"),
                            UnitOfFormationId = new Guid("02e39b46-c4a7-4d42-a9d6-1e3fd226c9cc")
                        },
                        new
                        {
                            FiliereId = new Guid("bce4bd92-9359-4303-b629-513e17ccf10f"),
                            UnitOfFormationId = new Guid("4996ea2f-2108-4867-a0e2-3e80d4e4243a")
                        },
                        new
                        {
                            FiliereId = new Guid("bce4bd92-9359-4303-b629-513e17ccf10f"),
                            UnitOfFormationId = new Guid("12729145-e357-4c4a-95be-fc5fd7cc1ff0")
                        },
                        new
                        {
                            FiliereId = new Guid("bce4bd92-9359-4303-b629-513e17ccf10f"),
                            UnitOfFormationId = new Guid("22105920-ef53-452d-b5f5-ae48495f4abb")
                        },
                        new
                        {
                            FiliereId = new Guid("c42fa17d-e149-46a6-b2ae-53e972da0585"),
                            UnitOfFormationId = new Guid("59f005c6-c7d4-485f-8562-83bbcf410f1b")
                        },
                        new
                        {
                            FiliereId = new Guid("c42fa17d-e149-46a6-b2ae-53e972da0585"),
                            UnitOfFormationId = new Guid("f0578c80-dbfb-44df-9f63-d15c06a3ead6")
                        },
                        new
                        {
                            FiliereId = new Guid("c42fa17d-e149-46a6-b2ae-53e972da0585"),
                            UnitOfFormationId = new Guid("c92538d1-ee3e-4e6a-94c8-bfe81bc3127d")
                        },
                        new
                        {
                            FiliereId = new Guid("c42fa17d-e149-46a6-b2ae-53e972da0585"),
                            UnitOfFormationId = new Guid("86579e8d-e0bd-4452-a317-07185a7e3bbf")
                        },
                        new
                        {
                            FiliereId = new Guid("c42fa17d-e149-46a6-b2ae-53e972da0585"),
                            UnitOfFormationId = new Guid("54c683d7-24a7-470b-94ba-1cf6566665a3")
                        },
                        new
                        {
                            FiliereId = new Guid("310b5fae-6446-4590-b08f-55047f4a78e9"),
                            UnitOfFormationId = new Guid("2df477a2-3532-4e56-82d9-4f81eb8b2e7f")
                        },
                        new
                        {
                            FiliereId = new Guid("310b5fae-6446-4590-b08f-55047f4a78e9"),
                            UnitOfFormationId = new Guid("7d8faff0-e229-4de9-90b8-edef5949f00a")
                        },
                        new
                        {
                            FiliereId = new Guid("310b5fae-6446-4590-b08f-55047f4a78e9"),
                            UnitOfFormationId = new Guid("3358e7b2-03de-4973-a035-cf063663043a")
                        },
                        new
                        {
                            FiliereId = new Guid("310b5fae-6446-4590-b08f-55047f4a78e9"),
                            UnitOfFormationId = new Guid("c00be947-6491-4240-acd2-24aa86c806ef")
                        },
                        new
                        {
                            FiliereId = new Guid("310b5fae-6446-4590-b08f-55047f4a78e9"),
                            UnitOfFormationId = new Guid("b2ab7da5-c4fc-404d-990c-d057a75b88d8")
                        },
                        new
                        {
                            FiliereId = new Guid("1c75a28a-7091-42d4-8a13-5b37515d7a4a"),
                            UnitOfFormationId = new Guid("c040c2e2-7bcf-438d-9a57-4a8c4db32710")
                        },
                        new
                        {
                            FiliereId = new Guid("1c75a28a-7091-42d4-8a13-5b37515d7a4a"),
                            UnitOfFormationId = new Guid("4996ea2f-2108-4867-a0e2-3e80d4e4243a")
                        },
                        new
                        {
                            FiliereId = new Guid("1c75a28a-7091-42d4-8a13-5b37515d7a4a"),
                            UnitOfFormationId = new Guid("fc78bd31-fa21-45fb-ab89-ab928f155041")
                        },
                        new
                        {
                            FiliereId = new Guid("1c75a28a-7091-42d4-8a13-5b37515d7a4a"),
                            UnitOfFormationId = new Guid("b2ab7da5-c4fc-404d-990c-d057a75b88d8")
                        },
                        new
                        {
                            FiliereId = new Guid("1c75a28a-7091-42d4-8a13-5b37515d7a4a"),
                            UnitOfFormationId = new Guid("5d6432aa-bf15-4075-a6f5-878111716d31")
                        },
                        new
                        {
                            FiliereId = new Guid("48bc9d15-e2bc-4741-97af-621693a1ebb5"),
                            UnitOfFormationId = new Guid("b2ab7da5-c4fc-404d-990c-d057a75b88d8")
                        },
                        new
                        {
                            FiliereId = new Guid("48bc9d15-e2bc-4741-97af-621693a1ebb5"),
                            UnitOfFormationId = new Guid("59f005c6-c7d4-485f-8562-83bbcf410f1b")
                        },
                        new
                        {
                            FiliereId = new Guid("48bc9d15-e2bc-4741-97af-621693a1ebb5"),
                            UnitOfFormationId = new Guid("70ca9d34-ce0c-4855-a654-2eed5d25921a")
                        },
                        new
                        {
                            FiliereId = new Guid("48bc9d15-e2bc-4741-97af-621693a1ebb5"),
                            UnitOfFormationId = new Guid("7831768e-3318-4d88-80db-e5958e1e208c")
                        },
                        new
                        {
                            FiliereId = new Guid("48bc9d15-e2bc-4741-97af-621693a1ebb5"),
                            UnitOfFormationId = new Guid("3358e7b2-03de-4973-a035-cf063663043a")
                        },
                        new
                        {
                            FiliereId = new Guid("e817e565-faad-42b8-9dca-70e03d67bdfd"),
                            UnitOfFormationId = new Guid("5d6432aa-bf15-4075-a6f5-878111716d31")
                        },
                        new
                        {
                            FiliereId = new Guid("e817e565-faad-42b8-9dca-70e03d67bdfd"),
                            UnitOfFormationId = new Guid("8006677a-5c4e-43fc-8821-7f96bc1bf5cf")
                        },
                        new
                        {
                            FiliereId = new Guid("e817e565-faad-42b8-9dca-70e03d67bdfd"),
                            UnitOfFormationId = new Guid("e8649f72-24b7-48da-b631-84f8f5abada6")
                        },
                        new
                        {
                            FiliereId = new Guid("e817e565-faad-42b8-9dca-70e03d67bdfd"),
                            UnitOfFormationId = new Guid("12729145-e357-4c4a-95be-fc5fd7cc1ff0")
                        },
                        new
                        {
                            FiliereId = new Guid("e817e565-faad-42b8-9dca-70e03d67bdfd"),
                            UnitOfFormationId = new Guid("74f4b891-170f-47ca-87b4-aca8c97a860d")
                        },
                        new
                        {
                            FiliereId = new Guid("c1c6fbc9-2fde-4c9e-b6cf-78a06f299de7"),
                            UnitOfFormationId = new Guid("542786a4-aa6a-4f6e-846e-c4905b2f831d")
                        },
                        new
                        {
                            FiliereId = new Guid("c1c6fbc9-2fde-4c9e-b6cf-78a06f299de7"),
                            UnitOfFormationId = new Guid("b56c7ac9-bc20-426e-9ab9-92e1c3c26991")
                        },
                        new
                        {
                            FiliereId = new Guid("c1c6fbc9-2fde-4c9e-b6cf-78a06f299de7"),
                            UnitOfFormationId = new Guid("b8d0b66c-d031-48a7-ae86-aa90bb9109b6")
                        },
                        new
                        {
                            FiliereId = new Guid("c1c6fbc9-2fde-4c9e-b6cf-78a06f299de7"),
                            UnitOfFormationId = new Guid("e8649f72-24b7-48da-b631-84f8f5abada6")
                        },
                        new
                        {
                            FiliereId = new Guid("c1c6fbc9-2fde-4c9e-b6cf-78a06f299de7"),
                            UnitOfFormationId = new Guid("31abd8c8-dafb-4608-9f5b-8dd53941bd6b")
                        },
                        new
                        {
                            FiliereId = new Guid("08ce7b0a-5642-4337-80ce-aef919a0b2d9"),
                            UnitOfFormationId = new Guid("b56c7ac9-bc20-426e-9ab9-92e1c3c26991")
                        },
                        new
                        {
                            FiliereId = new Guid("08ce7b0a-5642-4337-80ce-aef919a0b2d9"),
                            UnitOfFormationId = new Guid("f4ca0c58-93ac-4e6f-8c3b-e732394d908d")
                        },
                        new
                        {
                            FiliereId = new Guid("08ce7b0a-5642-4337-80ce-aef919a0b2d9"),
                            UnitOfFormationId = new Guid("2df477a2-3532-4e56-82d9-4f81eb8b2e7f")
                        },
                        new
                        {
                            FiliereId = new Guid("08ce7b0a-5642-4337-80ce-aef919a0b2d9"),
                            UnitOfFormationId = new Guid("45878b1e-7de5-4186-a4e7-d70f862f40ce")
                        },
                        new
                        {
                            FiliereId = new Guid("08ce7b0a-5642-4337-80ce-aef919a0b2d9"),
                            UnitOfFormationId = new Guid("70ca9d34-ce0c-4855-a654-2eed5d25921a")
                        },
                        new
                        {
                            FiliereId = new Guid("16822560-9848-4a88-80f2-bb716ce8c18d"),
                            UnitOfFormationId = new Guid("1fb74f8f-ca61-40d0-84d6-c339ff274343")
                        },
                        new
                        {
                            FiliereId = new Guid("16822560-9848-4a88-80f2-bb716ce8c18d"),
                            UnitOfFormationId = new Guid("542786a4-aa6a-4f6e-846e-c4905b2f831d")
                        },
                        new
                        {
                            FiliereId = new Guid("16822560-9848-4a88-80f2-bb716ce8c18d"),
                            UnitOfFormationId = new Guid("59f005c6-c7d4-485f-8562-83bbcf410f1b")
                        },
                        new
                        {
                            FiliereId = new Guid("16822560-9848-4a88-80f2-bb716ce8c18d"),
                            UnitOfFormationId = new Guid("cbf22d7b-01a9-4d8e-b0fc-ebda0e18a6f8")
                        },
                        new
                        {
                            FiliereId = new Guid("16822560-9848-4a88-80f2-bb716ce8c18d"),
                            UnitOfFormationId = new Guid("f4ca0c58-93ac-4e6f-8c3b-e732394d908d")
                        },
                        new
                        {
                            FiliereId = new Guid("c094c44b-cac4-4fb9-88e0-c29a43bb7edb"),
                            UnitOfFormationId = new Guid("59f005c6-c7d4-485f-8562-83bbcf410f1b")
                        },
                        new
                        {
                            FiliereId = new Guid("c094c44b-cac4-4fb9-88e0-c29a43bb7edb"),
                            UnitOfFormationId = new Guid("4433a66f-3c0f-421e-94ab-5bcbbd6bb259")
                        },
                        new
                        {
                            FiliereId = new Guid("c094c44b-cac4-4fb9-88e0-c29a43bb7edb"),
                            UnitOfFormationId = new Guid("f0578c80-dbfb-44df-9f63-d15c06a3ead6")
                        },
                        new
                        {
                            FiliereId = new Guid("c094c44b-cac4-4fb9-88e0-c29a43bb7edb"),
                            UnitOfFormationId = new Guid("f4ca0c58-93ac-4e6f-8c3b-e732394d908d")
                        },
                        new
                        {
                            FiliereId = new Guid("c094c44b-cac4-4fb9-88e0-c29a43bb7edb"),
                            UnitOfFormationId = new Guid("aff588b9-d077-4f68-899b-2a6b24feea10")
                        },
                        new
                        {
                            FiliereId = new Guid("109d52af-6448-4280-bcb8-c9ed03570c8c"),
                            UnitOfFormationId = new Guid("2df477a2-3532-4e56-82d9-4f81eb8b2e7f")
                        },
                        new
                        {
                            FiliereId = new Guid("109d52af-6448-4280-bcb8-c9ed03570c8c"),
                            UnitOfFormationId = new Guid("4433a66f-3c0f-421e-94ab-5bcbbd6bb259")
                        },
                        new
                        {
                            FiliereId = new Guid("109d52af-6448-4280-bcb8-c9ed03570c8c"),
                            UnitOfFormationId = new Guid("ae939676-456a-4190-8223-3ea7d3563922")
                        },
                        new
                        {
                            FiliereId = new Guid("109d52af-6448-4280-bcb8-c9ed03570c8c"),
                            UnitOfFormationId = new Guid("02e39b46-c4a7-4d42-a9d6-1e3fd226c9cc")
                        },
                        new
                        {
                            FiliereId = new Guid("109d52af-6448-4280-bcb8-c9ed03570c8c"),
                            UnitOfFormationId = new Guid("8006677a-5c4e-43fc-8821-7f96bc1bf5cf")
                        },
                        new
                        {
                            FiliereId = new Guid("27039911-d1ef-4662-ad01-f5b0260bfa96"),
                            UnitOfFormationId = new Guid("f4ca0c58-93ac-4e6f-8c3b-e732394d908d")
                        },
                        new
                        {
                            FiliereId = new Guid("27039911-d1ef-4662-ad01-f5b0260bfa96"),
                            UnitOfFormationId = new Guid("1d35297d-32ee-42e9-92f1-2b7abb779109")
                        },
                        new
                        {
                            FiliereId = new Guid("27039911-d1ef-4662-ad01-f5b0260bfa96"),
                            UnitOfFormationId = new Guid("fd8c3808-1799-49c4-be17-eacf53773a16")
                        },
                        new
                        {
                            FiliereId = new Guid("27039911-d1ef-4662-ad01-f5b0260bfa96"),
                            UnitOfFormationId = new Guid("fc78bd31-fa21-45fb-ab89-ab928f155041")
                        },
                        new
                        {
                            FiliereId = new Guid("27039911-d1ef-4662-ad01-f5b0260bfa96"),
                            UnitOfFormationId = new Guid("b2ab7da5-c4fc-404d-990c-d057a75b88d8")
                        },
                        new
                        {
                            FiliereId = new Guid("06f1a5e9-8864-40e3-b6d6-f8945f97e205"),
                            UnitOfFormationId = new Guid("59f005c6-c7d4-485f-8562-83bbcf410f1b")
                        },
                        new
                        {
                            FiliereId = new Guid("06f1a5e9-8864-40e3-b6d6-f8945f97e205"),
                            UnitOfFormationId = new Guid("39f69cb4-fa6a-4413-8991-072f39ac2587")
                        },
                        new
                        {
                            FiliereId = new Guid("06f1a5e9-8864-40e3-b6d6-f8945f97e205"),
                            UnitOfFormationId = new Guid("1c0bd733-0447-4351-b42a-6a595a73a87d")
                        },
                        new
                        {
                            FiliereId = new Guid("06f1a5e9-8864-40e3-b6d6-f8945f97e205"),
                            UnitOfFormationId = new Guid("ab5be28a-c494-4def-b58e-151dc8ff1767")
                        },
                        new
                        {
                            FiliereId = new Guid("06f1a5e9-8864-40e3-b6d6-f8945f97e205"),
                            UnitOfFormationId = new Guid("b56c7ac9-bc20-426e-9ab9-92e1c3c26991")
                        });
                });

            modelBuilder.Entity("Domain.EntitiesFromOtherServices.FiliereService.UnitOfFormation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Coefficient")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Semestre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("UnitOfFormations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("02e39b46-c4a7-4d42-a9d6-1e3fd226c9cc"),
                            Coefficient = 2,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 326, DateTimeKind.Utc).AddTicks(9978),
                            Duration = 45,
                            IsDeleted = false,
                            Name = "Français",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("74f4b891-170f-47ca-87b4-aca8c97a860d"),
                            Coefficient = 3,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 326, DateTimeKind.Utc).AddTicks(9985),
                            Duration = 46,
                            IsDeleted = false,
                            Name = "English",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("f0578c80-dbfb-44df-9f63-d15c06a3ead6"),
                            Coefficient = 4,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 326, DateTimeKind.Utc).AddTicks(9987),
                            Duration = 47,
                            IsDeleted = false,
                            Name = "Math",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("86579e8d-e0bd-4452-a317-07185a7e3bbf"),
                            Coefficient = 5,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(4),
                            Duration = 48,
                            IsDeleted = false,
                            Name = "History",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("5816ef91-c7a5-471e-8691-350dfd91d36e"),
                            Coefficient = 6,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(6),
                            Duration = 49,
                            IsDeleted = false,
                            Name = "Geography",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("7831768e-3318-4d88-80db-e5958e1e208c"),
                            Coefficient = 2,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(9),
                            Duration = 50,
                            IsDeleted = false,
                            Name = "Biology",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("d9d63f44-055b-449e-b532-93b7a30873d6"),
                            Coefficient = 3,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(10),
                            Duration = 51,
                            IsDeleted = false,
                            Name = "Chemistry",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("ab5be28a-c494-4def-b58e-151dc8ff1767"),
                            Coefficient = 4,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(46),
                            Duration = 52,
                            IsDeleted = false,
                            Name = "Physics",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("31abd8c8-dafb-4608-9f5b-8dd53941bd6b"),
                            Coefficient = 5,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(47),
                            Duration = 53,
                            IsDeleted = false,
                            Name = "Computer Science",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("c00be947-6491-4240-acd2-24aa86c806ef"),
                            Coefficient = 6,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(50),
                            Duration = 54,
                            IsDeleted = false,
                            Name = "Art",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("1fb74f8f-ca61-40d0-84d6-c339ff274343"),
                            Coefficient = 2,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(51),
                            Duration = 45,
                            IsDeleted = false,
                            Name = "Music",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("b8d0b66c-d031-48a7-ae86-aa90bb9109b6"),
                            Coefficient = 3,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(54),
                            Duration = 46,
                            IsDeleted = false,
                            Name = "Physical Education",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("b56c7ac9-bc20-426e-9ab9-92e1c3c26991"),
                            Coefficient = 4,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(56),
                            Duration = 47,
                            IsDeleted = false,
                            Name = "Economics",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("3358e7b2-03de-4973-a035-cf063663043a"),
                            Coefficient = 5,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(57),
                            Duration = 48,
                            IsDeleted = false,
                            Name = "Psychology",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("54c683d7-24a7-470b-94ba-1cf6566665a3"),
                            Coefficient = 6,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(58),
                            Duration = 49,
                            IsDeleted = false,
                            Name = "Philosophy",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("f06e9631-fff9-43db-b218-eca32d5e4270"),
                            Coefficient = 2,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(62),
                            Duration = 50,
                            IsDeleted = false,
                            Name = "Sociology",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("80f385d8-78a7-452b-86e0-90b51c048df4"),
                            Coefficient = 3,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(63),
                            Duration = 51,
                            IsDeleted = false,
                            Name = "Political Science",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("d4bf9b84-4a3f-45eb-bf9d-00c5b69f48bb"),
                            Coefficient = 4,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(65),
                            Duration = 52,
                            IsDeleted = false,
                            Name = "Statistics",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("59f005c6-c7d4-485f-8562-83bbcf410f1b"),
                            Coefficient = 5,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(67),
                            Duration = 53,
                            IsDeleted = false,
                            Name = "Engineering",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("869901df-1465-4ee1-a456-dc781223b89b"),
                            Coefficient = 6,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(70),
                            Duration = 54,
                            IsDeleted = false,
                            Name = "Literature",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("22105920-ef53-452d-b5f5-ae48495f4abb"),
                            Coefficient = 2,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(71),
                            Duration = 45,
                            IsDeleted = false,
                            Name = "Spanish",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("fc78bd31-fa21-45fb-ab89-ab928f155041"),
                            Coefficient = 3,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(73),
                            Duration = 46,
                            IsDeleted = false,
                            Name = "German",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("e8649f72-24b7-48da-b631-84f8f5abada6"),
                            Coefficient = 4,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(74),
                            Duration = 47,
                            IsDeleted = false,
                            Name = "Italian",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("ae939676-456a-4190-8223-3ea7d3563922"),
                            Coefficient = 5,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(77),
                            Duration = 48,
                            IsDeleted = false,
                            Name = "Chinese",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("5d6432aa-bf15-4075-a6f5-878111716d31"),
                            Coefficient = 6,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(79),
                            Duration = 49,
                            IsDeleted = false,
                            Name = "Japanese",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("b3b5a92b-d6e9-4e79-aa78-1e1854173bf3"),
                            Coefficient = 2,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(80),
                            Duration = 50,
                            IsDeleted = false,
                            Name = "Arabic",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("4433a66f-3c0f-421e-94ab-5bcbbd6bb259"),
                            Coefficient = 3,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(82),
                            Duration = 51,
                            IsDeleted = false,
                            Name = "Latin",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("4996ea2f-2108-4867-a0e2-3e80d4e4243a"),
                            Coefficient = 4,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(85),
                            Duration = 52,
                            IsDeleted = false,
                            Name = "Greek",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("aff588b9-d077-4f68-899b-2a6b24feea10"),
                            Coefficient = 5,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(86),
                            Duration = 53,
                            IsDeleted = false,
                            Name = "Religion",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("f4ca0c58-93ac-4e6f-8c3b-e732394d908d"),
                            Coefficient = 6,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(87),
                            Duration = 54,
                            IsDeleted = false,
                            Name = "Astronomy",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("b92a1ca6-e08c-4d72-b218-87e4601915d8"),
                            Coefficient = 2,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(89),
                            Duration = 45,
                            IsDeleted = false,
                            Name = "Environmental Science",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("fd8c3808-1799-49c4-be17-eacf53773a16"),
                            Coefficient = 3,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(92),
                            Duration = 46,
                            IsDeleted = false,
                            Name = "Health Education",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("ddbe9864-01a6-495c-8f23-5ba0ebd84f68"),
                            Coefficient = 4,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(93),
                            Duration = 47,
                            IsDeleted = false,
                            Name = "Business Studies",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("c92538d1-ee3e-4e6a-94c8-bfe81bc3127d"),
                            Coefficient = 5,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(96),
                            Duration = 48,
                            IsDeleted = false,
                            Name = "Law",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("9276ebf7-81bb-49d6-a77f-bed83fb72c2a"),
                            Coefficient = 6,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(97),
                            Duration = 49,
                            IsDeleted = false,
                            Name = "Engineering Design",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("45878b1e-7de5-4186-a4e7-d70f862f40ce"),
                            Coefficient = 2,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(100),
                            Duration = 50,
                            IsDeleted = false,
                            Name = "Information Technology",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("474aebdb-309d-4ab8-8009-d7905b897a6c"),
                            Coefficient = 3,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(102),
                            Duration = 51,
                            IsDeleted = false,
                            Name = "Theater",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("2df477a2-3532-4e56-82d9-4f81eb8b2e7f"),
                            Coefficient = 4,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(103),
                            Duration = 52,
                            IsDeleted = false,
                            Name = "Dance",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("8006677a-5c4e-43fc-8821-7f96bc1bf5cf"),
                            Coefficient = 5,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(105),
                            Duration = 53,
                            IsDeleted = false,
                            Name = "Media Studies",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("d50fe33b-a67d-467c-9a0f-cd3ddd718e71"),
                            Coefficient = 6,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(108),
                            Duration = 54,
                            IsDeleted = false,
                            Name = "Anthropology",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("1d35297d-32ee-42e9-92f1-2b7abb779109"),
                            Coefficient = 2,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(109),
                            Duration = 45,
                            IsDeleted = false,
                            Name = "Ethics",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("542786a4-aa6a-4f6e-846e-c4905b2f831d"),
                            Coefficient = 3,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(110),
                            Duration = 46,
                            IsDeleted = false,
                            Name = "Mathematics",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("39f69cb4-fa6a-4413-8991-072f39ac2587"),
                            Coefficient = 4,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(112),
                            Duration = 47,
                            IsDeleted = false,
                            Name = "Statistics",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("67481c6d-a50a-47a0-8ff1-79e1660ea2eb"),
                            Coefficient = 5,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(115),
                            Duration = 48,
                            IsDeleted = false,
                            Name = "Cryptography",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("c040c2e2-7bcf-438d-9a57-4a8c4db32710"),
                            Coefficient = 6,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(116),
                            Duration = 49,
                            IsDeleted = false,
                            Name = "Pharmacology",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("12729145-e357-4c4a-95be-fc5fd7cc1ff0"),
                            Coefficient = 2,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(118),
                            Duration = 50,
                            IsDeleted = false,
                            Name = "Astrophysics",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("7bb97700-c70f-4c29-86dc-285c3c08c98f"),
                            Coefficient = 3,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(119),
                            Duration = 51,
                            IsDeleted = false,
                            Name = "Geology",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("7d8faff0-e229-4de9-90b8-edef5949f00a"),
                            Coefficient = 4,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(122),
                            Duration = 52,
                            IsDeleted = false,
                            Name = "Oceanography",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("b2ab7da5-c4fc-404d-990c-d057a75b88d8"),
                            Coefficient = 5,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(123),
                            Duration = 53,
                            IsDeleted = false,
                            Name = "Meteorology",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("5b63d6a5-1953-4749-90f4-b28a39312b13"),
                            Coefficient = 6,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(125),
                            Duration = 54,
                            IsDeleted = false,
                            Name = "Robotics",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("cbf22d7b-01a9-4d8e-b0fc-ebda0e18a6f8"),
                            Coefficient = 2,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(126),
                            Duration = 45,
                            IsDeleted = false,
                            Name = "Machine Learning",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("1c0bd733-0447-4351-b42a-6a595a73a87d"),
                            Coefficient = 3,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(129),
                            Duration = 46,
                            IsDeleted = false,
                            Name = "Data Science",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("70ca9d34-ce0c-4855-a654-2eed5d25921a"),
                            Coefficient = 4,
                            CreatedAt = new DateTime(2024, 8, 17, 15, 53, 18, 327, DateTimeKind.Utc).AddTicks(131),
                            Duration = 47,
                            IsDeleted = false,
                            Name = "Artificial Intelligence",
                            Semestre = "Semester 2"
                        });
                });

            modelBuilder.Entity("Domain.ExamResult", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("DateValidation")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ExamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsValid")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("PracticalNote")
                        .HasColumnType("float");

                    b.Property<Guid?>("StagiaireId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("TheoreticalNote")
                        .HasColumnType("float");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ExamId");

                    b.ToTable("ExamResults");
                });

            modelBuilder.Entity("Domain.Test", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Note")
                        .HasColumnType("float");

                    b.Property<string>("TestCorrection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TestStatement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TrainerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UnitOfFormationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("UnitOfFormationId");

                    b.ToTable("Tests");
                });

            modelBuilder.Entity("Domain.AllResults", b =>
                {
                    b.HasOne("Domain.ExamResult", "ExamResult")
                        .WithMany()
                        .HasForeignKey("ExamResultId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.TestResult", "TestResults")
                        .WithMany()
                        .HasForeignKey("TestResultsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExamResult");

                    b.Navigation("TestResults");
                });

            modelBuilder.Entity("Domain.Entities.Exam", b =>
                {
                    b.HasOne("Domain.EntitiesFromOtherServices.FiliereService.Filiere", "Filiere")
                        .WithMany("Exams")
                        .HasForeignKey("FiliereId");

                    b.HasOne("Domain.EntitiesFromOtherServices.FiliereService.UnitOfFormation", "UnitOfFormation")
                        .WithMany("Exams")
                        .HasForeignKey("UnitOfFormationId");

                    b.Navigation("Filiere");

                    b.Navigation("UnitOfFormation");
                });

            modelBuilder.Entity("Domain.Entities.ExamAttendance", b =>
                {
                    b.HasOne("Domain.Entities.Exam", "Exam")
                        .WithMany("ExamAttendances")
                        .HasForeignKey("ExamId");

                    b.Navigation("Exam");
                });

            modelBuilder.Entity("Domain.Entities.ExamSession", b =>
                {
                    b.HasOne("Domain.Entities.Exam", "Exam")
                        .WithOne("ExamSession")
                        .HasForeignKey("Domain.Entities.ExamSession", "ExamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Room", "Room")
                        .WithMany("ExamSessions")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Supervisor", "Supervisor")
                        .WithMany("ExamSessions")
                        .HasForeignKey("SupervisorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exam");

                    b.Navigation("Room");

                    b.Navigation("Supervisor");
                });

            modelBuilder.Entity("Domain.Entities.IndividualWorkUOF", b =>
                {
                    b.HasOne("Domain.Entities.IndividualWork", "IndividualWork")
                        .WithMany("individualWorkUOFs")
                        .HasForeignKey("IndividualWorkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IndividualWork");
                });

            modelBuilder.Entity("Domain.Entities.TestResult", b =>
                {
                    b.HasOne("Domain.Test", "Test")
                        .WithMany("TestResults")
                        .HasForeignKey("TestId");

                    b.Navigation("Test");
                });

            modelBuilder.Entity("Domain.Entities.VariantsExams", b =>
                {
                    b.HasOne("Domain.Entities.Exam", "Exam")
                        .WithMany("VariantsExams")
                        .HasForeignKey("ExamId");

                    b.HasOne("Domain.EntitiesFromOtherServices.FiliereService.UnitOfFormation", "UnitOfFormation")
                        .WithMany("VariantsExams")
                        .HasForeignKey("UnitOfFormationId");

                    b.Navigation("Exam");

                    b.Navigation("UnitOfFormation");
                });

            modelBuilder.Entity("Domain.EntitiesFromOtherServices.FiliereService.FiliereUnitOfFormation", b =>
                {
                    b.HasOne("Domain.EntitiesFromOtherServices.FiliereService.Filiere", "Filiere")
                        .WithMany("FiliereUnitOfFormations")
                        .HasForeignKey("FiliereId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.EntitiesFromOtherServices.FiliereService.UnitOfFormation", "UnitOfFormation")
                        .WithMany("FiliereUnitOfFormations")
                        .HasForeignKey("UnitOfFormationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Filiere");

                    b.Navigation("UnitOfFormation");
                });

            modelBuilder.Entity("Domain.ExamResult", b =>
                {
                    b.HasOne("Domain.Entities.Exam", "Exam")
                        .WithMany("ExamResults")
                        .HasForeignKey("ExamId");

                    b.Navigation("Exam");
                });

            modelBuilder.Entity("Domain.Test", b =>
                {
                    b.HasOne("Domain.EntitiesFromOtherServices.FiliereService.UnitOfFormation", "UnitOfFormation")
                        .WithMany("Tests")
                        .HasForeignKey("UnitOfFormationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UnitOfFormation");
                });

            modelBuilder.Entity("Domain.Entities.Exam", b =>
                {
                    b.Navigation("ExamAttendances");

                    b.Navigation("ExamResults");

                    b.Navigation("ExamSession")
                        .IsRequired();

                    b.Navigation("VariantsExams");
                });

            modelBuilder.Entity("Domain.Entities.IndividualWork", b =>
                {
                    b.Navigation("individualWorkUOFs");
                });

            modelBuilder.Entity("Domain.Entities.Room", b =>
                {
                    b.Navigation("ExamSessions");
                });

            modelBuilder.Entity("Domain.Entities.Supervisor", b =>
                {
                    b.Navigation("ExamSessions");
                });

            modelBuilder.Entity("Domain.EntitiesFromOtherServices.FiliereService.Filiere", b =>
                {
                    b.Navigation("Exams");

                    b.Navigation("FiliereUnitOfFormations");
                });

            modelBuilder.Entity("Domain.EntitiesFromOtherServices.FiliereService.UnitOfFormation", b =>
                {
                    b.Navigation("Exams");

                    b.Navigation("FiliereUnitOfFormations");

                    b.Navigation("Tests");

                    b.Navigation("VariantsExams");
                });

            modelBuilder.Entity("Domain.Test", b =>
                {
                    b.Navigation("TestResults");
                });
#pragma warning restore 612, 618
        }
    }
}
