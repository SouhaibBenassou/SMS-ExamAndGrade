// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastracture.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.AllResults", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ExamResultId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TestResultsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ExamResultId");

                    b.HasIndex("TestResultsId");

                    b.ToTable("AllResults");
                });

            modelBuilder.Entity("Domain.Entities.Exam", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Duration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExamDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ExamType")
                        .HasColumnType("int");

                    b.Property<Guid?>("FiliereId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UnitOfFormationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("YearId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("YearType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FiliereId");

                    b.HasIndex("UnitOfFormationId");

                    b.ToTable("Exams");
                });

            modelBuilder.Entity("Domain.Entities.ExamAttendance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("Attendance")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ExamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("StagiaireId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ExamId");

                    b.ToTable("ExamAttendances");
                });

            modelBuilder.Entity("Domain.Entities.ExamSession", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ExamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("SupervisorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ExamId")
                        .IsUnique();

                    b.HasIndex("RoomId");

                    b.HasIndex("SupervisorId");

                    b.ToTable("ExamSessions");
                });

            modelBuilder.Entity("Domain.Entities.IndividualWork", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IndividualWorkUOFId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Note")
                        .HasColumnType("int");

                    b.Property<Guid>("StagiaireId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IndividualWorkUOFId");

                    b.ToTable("IndividualWorks");
                });

            modelBuilder.Entity("Domain.Entities.IndividualWorkUOF", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Confusion")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("IndividualWorkUOFs");
                });

            modelBuilder.Entity("Domain.Entities.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoomType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("Domain.Entities.Supervisor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Supervisors");
                });

            modelBuilder.Entity("Domain.Entities.TestResult", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("DateValidation")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsValid")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Note")
                        .HasColumnType("float");

                    b.Property<Guid?>("StagiaireId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TestId");

                    b.ToTable("TestResults");
                });

            modelBuilder.Entity("Domain.Entities.VariantsExams", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExamCorrection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ExamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ExamStatement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsValid")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NoteMax")
                        .HasColumnType("int");

                    b.Property<Guid?>("TrainerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UnitOfFormationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("VariantName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VariantType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExamId");

                    b.HasIndex("UnitOfFormationId");

                    b.ToTable("VariantsExams");
                });

            modelBuilder.Entity("Domain.EntitiesFromOtherServices.FiliereService.Filiere", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Capacite")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duree")
                        .HasColumnType("int");

                    b.Property<decimal>("FraisInscription")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("GroupCapacity")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MontantAnnuel")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontantMensuel")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontantTrimestre")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Niveau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomFiliere")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Filieres");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c4677026-cb1e-4741-9685-0f56b9758e65"),
                            Capacite = 50,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(1895),
                            Description = "Description for Computer Science",
                            Duree = 2,
                            FraisInscription = 3000m,
                            GroupCapacity = 10,
                            IsDeleted = false,
                            MontantAnnuel = 12000m,
                            MontantMensuel = 1000m,
                            MontantTrimestre = 3000m,
                            Niveau = "Master",
                            NomFiliere = "Computer Science"
                        },
                        new
                        {
                            Id = new Guid("21aef537-d19e-48bf-a523-23db8e193522"),
                            Capacite = 55,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(2209),
                            Description = "Description for Electrical Engineering",
                            Duree = 3,
                            FraisInscription = 3200m,
                            GroupCapacity = 12,
                            IsDeleted = false,
                            MontantAnnuel = 13000m,
                            MontantMensuel = 1100m,
                            MontantTrimestre = 3250m,
                            Niveau = "Bachelor",
                            NomFiliere = "Electrical Engineering"
                        },
                        new
                        {
                            Id = new Guid("ed9a86d0-0ff8-4585-b8a9-2852465959c2"),
                            Capacite = 60,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(2376),
                            Description = "Description for Mechanical Engineering",
                            Duree = 4,
                            FraisInscription = 3400m,
                            GroupCapacity = 14,
                            IsDeleted = false,
                            MontantAnnuel = 14000m,
                            MontantMensuel = 1200m,
                            MontantTrimestre = 3500m,
                            Niveau = "Master",
                            NomFiliere = "Mechanical Engineering"
                        },
                        new
                        {
                            Id = new Guid("fc17e25e-7453-4924-a4ca-2c036306622b"),
                            Capacite = 65,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(2507),
                            Description = "Description for Civil Engineering",
                            Duree = 5,
                            FraisInscription = 3600m,
                            GroupCapacity = 16,
                            IsDeleted = false,
                            MontantAnnuel = 15000m,
                            MontantMensuel = 1300m,
                            MontantTrimestre = 3750m,
                            Niveau = "Bachelor",
                            NomFiliere = "Civil Engineering"
                        },
                        new
                        {
                            Id = new Guid("a82c929f-5567-4248-b31b-3dac539c18c6"),
                            Capacite = 70,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(2682),
                            Description = "Description for Chemical Engineering",
                            Duree = 2,
                            FraisInscription = 3800m,
                            GroupCapacity = 18,
                            IsDeleted = false,
                            MontantAnnuel = 16000m,
                            MontantMensuel = 1400m,
                            MontantTrimestre = 4000m,
                            Niveau = "Master",
                            NomFiliere = "Chemical Engineering"
                        },
                        new
                        {
                            Id = new Guid("bce4bd92-9359-4303-b629-513e17ccf10f"),
                            Capacite = 75,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(2799),
                            Description = "Description for Biotechnology",
                            Duree = 3,
                            FraisInscription = 4000m,
                            GroupCapacity = 20,
                            IsDeleted = false,
                            MontantAnnuel = 17000m,
                            MontantMensuel = 1500m,
                            MontantTrimestre = 4250m,
                            Niveau = "Bachelor",
                            NomFiliere = "Biotechnology"
                        },
                        new
                        {
                            Id = new Guid("c42fa17d-e149-46a6-b2ae-53e972da0585"),
                            Capacite = 80,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(2946),
                            Description = "Description for Mathematics",
                            Duree = 4,
                            FraisInscription = 4200m,
                            GroupCapacity = 22,
                            IsDeleted = false,
                            MontantAnnuel = 18000m,
                            MontantMensuel = 1600m,
                            MontantTrimestre = 4500m,
                            Niveau = "Master",
                            NomFiliere = "Mathematics"
                        },
                        new
                        {
                            Id = new Guid("310b5fae-6446-4590-b08f-55047f4a78e9"),
                            Capacite = 85,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(3129),
                            Description = "Description for Physics",
                            Duree = 5,
                            FraisInscription = 4400m,
                            GroupCapacity = 24,
                            IsDeleted = false,
                            MontantAnnuel = 19000m,
                            MontantMensuel = 1700m,
                            MontantTrimestre = 4750m,
                            Niveau = "Bachelor",
                            NomFiliere = "Physics"
                        },
                        new
                        {
                            Id = new Guid("1c75a28a-7091-42d4-8a13-5b37515d7a4a"),
                            Capacite = 90,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(3247),
                            Description = "Description for Chemistry",
                            Duree = 2,
                            FraisInscription = 4600m,
                            GroupCapacity = 26,
                            IsDeleted = false,
                            MontantAnnuel = 20000m,
                            MontantMensuel = 1800m,
                            MontantTrimestre = 5000m,
                            Niveau = "Master",
                            NomFiliere = "Chemistry"
                        },
                        new
                        {
                            Id = new Guid("48bc9d15-e2bc-4741-97af-621693a1ebb5"),
                            Capacite = 95,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(3379),
                            Description = "Description for Biology",
                            Duree = 3,
                            FraisInscription = 4800m,
                            GroupCapacity = 28,
                            IsDeleted = false,
                            MontantAnnuel = 21000m,
                            MontantMensuel = 1900m,
                            MontantTrimestre = 5250m,
                            Niveau = "Bachelor",
                            NomFiliere = "Biology"
                        },
                        new
                        {
                            Id = new Guid("e817e565-faad-42b8-9dca-70e03d67bdfd"),
                            Capacite = 100,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(3513),
                            Description = "Description for Environmental Science",
                            Duree = 4,
                            FraisInscription = 5000m,
                            GroupCapacity = 30,
                            IsDeleted = false,
                            MontantAnnuel = 22000m,
                            MontantMensuel = 2000m,
                            MontantTrimestre = 5500m,
                            Niveau = "Master",
                            NomFiliere = "Environmental Science"
                        },
                        new
                        {
                            Id = new Guid("c1c6fbc9-2fde-4c9e-b6cf-78a06f299de7"),
                            Capacite = 105,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(3708),
                            Description = "Description for Economics",
                            Duree = 5,
                            FraisInscription = 5200m,
                            GroupCapacity = 32,
                            IsDeleted = false,
                            MontantAnnuel = 23000m,
                            MontantMensuel = 2100m,
                            MontantTrimestre = 5750m,
                            Niveau = "Bachelor",
                            NomFiliere = "Economics"
                        },
                        new
                        {
                            Id = new Guid("08ce7b0a-5642-4337-80ce-aef919a0b2d9"),
                            Capacite = 110,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(3836),
                            Description = "Description for Psychology",
                            Duree = 2,
                            FraisInscription = 5400m,
                            GroupCapacity = 34,
                            IsDeleted = false,
                            MontantAnnuel = 24000m,
                            MontantMensuel = 2200m,
                            MontantTrimestre = 6000m,
                            Niveau = "Master",
                            NomFiliere = "Psychology"
                        },
                        new
                        {
                            Id = new Guid("16822560-9848-4a88-80f2-bb716ce8c18d"),
                            Capacite = 115,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(3972),
                            Description = "Description for Sociology",
                            Duree = 3,
                            FraisInscription = 5600m,
                            GroupCapacity = 36,
                            IsDeleted = false,
                            MontantAnnuel = 25000m,
                            MontantMensuel = 2300m,
                            MontantTrimestre = 6250m,
                            Niveau = "Bachelor",
                            NomFiliere = "Sociology"
                        },
                        new
                        {
                            Id = new Guid("c094c44b-cac4-4fb9-88e0-c29a43bb7edb"),
                            Capacite = 120,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(4285),
                            Description = "Description for History",
                            Duree = 4,
                            FraisInscription = 5800m,
                            GroupCapacity = 38,
                            IsDeleted = false,
                            MontantAnnuel = 26000m,
                            MontantMensuel = 2400m,
                            MontantTrimestre = 6500m,
                            Niveau = "Master",
                            NomFiliere = "History"
                        },
                        new
                        {
                            Id = new Guid("109d52af-6448-4280-bcb8-c9ed03570c8c"),
                            Capacite = 125,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(4405),
                            Description = "Description for Philosophy",
                            Duree = 5,
                            FraisInscription = 6000m,
                            GroupCapacity = 40,
                            IsDeleted = false,
                            MontantAnnuel = 27000m,
                            MontantMensuel = 2500m,
                            MontantTrimestre = 6750m,
                            Niveau = "Bachelor",
                            NomFiliere = "Philosophy"
                        },
                        new
                        {
                            Id = new Guid("27039911-d1ef-4662-ad01-f5b0260bfa96"),
                            Capacite = 130,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(4548),
                            Description = "Description for Political Science",
                            Duree = 2,
                            FraisInscription = 6200m,
                            GroupCapacity = 42,
                            IsDeleted = false,
                            MontantAnnuel = 28000m,
                            MontantMensuel = 2600m,
                            MontantTrimestre = 7000m,
                            Niveau = "Master",
                            NomFiliere = "Political Science"
                        },
                        new
                        {
                            Id = new Guid("06f1a5e9-8864-40e3-b6d6-f8945f97e205"),
                            Capacite = 135,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(4697),
                            Description = "Description for International Relations",
                            Duree = 3,
                            FraisInscription = 6400m,
                            GroupCapacity = 44,
                            IsDeleted = false,
                            MontantAnnuel = 29000m,
                            MontantMensuel = 2700m,
                            MontantTrimestre = 7250m,
                            Niveau = "Bachelor",
                            NomFiliere = "International Relations"
                        });
                });

            modelBuilder.Entity("Domain.EntitiesFromOtherServices.FiliereService.FiliereUnitOfFormation", b =>
                {
                    b.Property<Guid>("FiliereId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UnitOfFormationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("FiliereId", "UnitOfFormationId");

                    b.HasIndex("UnitOfFormationId");

                    b.ToTable("FiliereUnitOfFormations");

                    b.HasData(
                        new
                        {
                            FiliereId = new Guid("c4677026-cb1e-4741-9685-0f56b9758e65"),
                            UnitOfFormationId = new Guid("08c7d265-8605-44f3-aa5e-0e8d67e47ac2")
                        },
                        new
                        {
                            FiliereId = new Guid("c4677026-cb1e-4741-9685-0f56b9758e65"),
                            UnitOfFormationId = new Guid("dd7beea7-cf54-4f77-8c41-43a2ec8d87ba")
                        },
                        new
                        {
                            FiliereId = new Guid("c4677026-cb1e-4741-9685-0f56b9758e65"),
                            UnitOfFormationId = new Guid("518056b9-e28c-427d-a02c-9241ad3442d4")
                        },
                        new
                        {
                            FiliereId = new Guid("c4677026-cb1e-4741-9685-0f56b9758e65"),
                            UnitOfFormationId = new Guid("b0c0524e-9ab5-489f-9cde-c8df84d37443")
                        },
                        new
                        {
                            FiliereId = new Guid("c4677026-cb1e-4741-9685-0f56b9758e65"),
                            UnitOfFormationId = new Guid("a47f14d2-d321-4cf4-96e2-30193053069e")
                        },
                        new
                        {
                            FiliereId = new Guid("21aef537-d19e-48bf-a523-23db8e193522"),
                            UnitOfFormationId = new Guid("9aa85501-1ca3-44b1-804d-a362c03c8f41")
                        },
                        new
                        {
                            FiliereId = new Guid("21aef537-d19e-48bf-a523-23db8e193522"),
                            UnitOfFormationId = new Guid("c05ccfef-0963-446a-8896-e52812f93c70")
                        },
                        new
                        {
                            FiliereId = new Guid("21aef537-d19e-48bf-a523-23db8e193522"),
                            UnitOfFormationId = new Guid("a60afdf6-2972-4204-b3e8-bc6301770b7b")
                        },
                        new
                        {
                            FiliereId = new Guid("21aef537-d19e-48bf-a523-23db8e193522"),
                            UnitOfFormationId = new Guid("1239cc38-04cf-4430-9b92-aeb1e8dae76e")
                        },
                        new
                        {
                            FiliereId = new Guid("21aef537-d19e-48bf-a523-23db8e193522"),
                            UnitOfFormationId = new Guid("76845ab0-6aac-4873-9563-a5d723b47c90")
                        },
                        new
                        {
                            FiliereId = new Guid("ed9a86d0-0ff8-4585-b8a9-2852465959c2"),
                            UnitOfFormationId = new Guid("ef617c46-ab87-4954-8d4e-934d9b257818")
                        },
                        new
                        {
                            FiliereId = new Guid("ed9a86d0-0ff8-4585-b8a9-2852465959c2"),
                            UnitOfFormationId = new Guid("812b28ae-aad1-4788-9f87-fc648cfacde0")
                        },
                        new
                        {
                            FiliereId = new Guid("ed9a86d0-0ff8-4585-b8a9-2852465959c2"),
                            UnitOfFormationId = new Guid("03ce2b05-1bee-4823-8f09-ee8a54baff53")
                        },
                        new
                        {
                            FiliereId = new Guid("ed9a86d0-0ff8-4585-b8a9-2852465959c2"),
                            UnitOfFormationId = new Guid("a4e49c71-b1c3-4d35-b9df-2c5077bbaa5f")
                        },
                        new
                        {
                            FiliereId = new Guid("ed9a86d0-0ff8-4585-b8a9-2852465959c2"),
                            UnitOfFormationId = new Guid("69210365-a437-4666-91c3-9fbf33e52904")
                        },
                        new
                        {
                            FiliereId = new Guid("fc17e25e-7453-4924-a4ca-2c036306622b"),
                            UnitOfFormationId = new Guid("518056b9-e28c-427d-a02c-9241ad3442d4")
                        },
                        new
                        {
                            FiliereId = new Guid("fc17e25e-7453-4924-a4ca-2c036306622b"),
                            UnitOfFormationId = new Guid("a4e49c71-b1c3-4d35-b9df-2c5077bbaa5f")
                        },
                        new
                        {
                            FiliereId = new Guid("fc17e25e-7453-4924-a4ca-2c036306622b"),
                            UnitOfFormationId = new Guid("dd7beea7-cf54-4f77-8c41-43a2ec8d87ba")
                        },
                        new
                        {
                            FiliereId = new Guid("fc17e25e-7453-4924-a4ca-2c036306622b"),
                            UnitOfFormationId = new Guid("4b6e905c-2bd7-44d7-8391-32e75fd550de")
                        },
                        new
                        {
                            FiliereId = new Guid("fc17e25e-7453-4924-a4ca-2c036306622b"),
                            UnitOfFormationId = new Guid("68c73084-72d8-47f7-8551-60bc6c563e32")
                        },
                        new
                        {
                            FiliereId = new Guid("a82c929f-5567-4248-b31b-3dac539c18c6"),
                            UnitOfFormationId = new Guid("24e0b880-406e-4c87-a7ad-0ef89cd9a0bb")
                        },
                        new
                        {
                            FiliereId = new Guid("a82c929f-5567-4248-b31b-3dac539c18c6"),
                            UnitOfFormationId = new Guid("76845ab0-6aac-4873-9563-a5d723b47c90")
                        },
                        new
                        {
                            FiliereId = new Guid("a82c929f-5567-4248-b31b-3dac539c18c6"),
                            UnitOfFormationId = new Guid("ded55607-3c83-40fb-923b-57cac2fa443e")
                        },
                        new
                        {
                            FiliereId = new Guid("a82c929f-5567-4248-b31b-3dac539c18c6"),
                            UnitOfFormationId = new Guid("dd7beea7-cf54-4f77-8c41-43a2ec8d87ba")
                        },
                        new
                        {
                            FiliereId = new Guid("a82c929f-5567-4248-b31b-3dac539c18c6"),
                            UnitOfFormationId = new Guid("d7cb4e59-ffe1-4d88-b025-936dfc26cb46")
                        },
                        new
                        {
                            FiliereId = new Guid("bce4bd92-9359-4303-b629-513e17ccf10f"),
                            UnitOfFormationId = new Guid("e3626f57-16f9-4e6d-85fc-6048035334d5")
                        },
                        new
                        {
                            FiliereId = new Guid("bce4bd92-9359-4303-b629-513e17ccf10f"),
                            UnitOfFormationId = new Guid("597422d1-9775-4777-a79c-b99bd43012e0")
                        },
                        new
                        {
                            FiliereId = new Guid("bce4bd92-9359-4303-b629-513e17ccf10f"),
                            UnitOfFormationId = new Guid("9aa85501-1ca3-44b1-804d-a362c03c8f41")
                        },
                        new
                        {
                            FiliereId = new Guid("bce4bd92-9359-4303-b629-513e17ccf10f"),
                            UnitOfFormationId = new Guid("b0c0524e-9ab5-489f-9cde-c8df84d37443")
                        },
                        new
                        {
                            FiliereId = new Guid("bce4bd92-9359-4303-b629-513e17ccf10f"),
                            UnitOfFormationId = new Guid("ded55607-3c83-40fb-923b-57cac2fa443e")
                        },
                        new
                        {
                            FiliereId = new Guid("c42fa17d-e149-46a6-b2ae-53e972da0585"),
                            UnitOfFormationId = new Guid("9aa85501-1ca3-44b1-804d-a362c03c8f41")
                        },
                        new
                        {
                            FiliereId = new Guid("c42fa17d-e149-46a6-b2ae-53e972da0585"),
                            UnitOfFormationId = new Guid("b0c0524e-9ab5-489f-9cde-c8df84d37443")
                        },
                        new
                        {
                            FiliereId = new Guid("c42fa17d-e149-46a6-b2ae-53e972da0585"),
                            UnitOfFormationId = new Guid("21ca9b68-f335-4533-a02f-b8583f0503f6")
                        },
                        new
                        {
                            FiliereId = new Guid("c42fa17d-e149-46a6-b2ae-53e972da0585"),
                            UnitOfFormationId = new Guid("597422d1-9775-4777-a79c-b99bd43012e0")
                        },
                        new
                        {
                            FiliereId = new Guid("c42fa17d-e149-46a6-b2ae-53e972da0585"),
                            UnitOfFormationId = new Guid("24e0b880-406e-4c87-a7ad-0ef89cd9a0bb")
                        },
                        new
                        {
                            FiliereId = new Guid("310b5fae-6446-4590-b08f-55047f4a78e9"),
                            UnitOfFormationId = new Guid("69210365-a437-4666-91c3-9fbf33e52904")
                        },
                        new
                        {
                            FiliereId = new Guid("310b5fae-6446-4590-b08f-55047f4a78e9"),
                            UnitOfFormationId = new Guid("d7cb4e59-ffe1-4d88-b025-936dfc26cb46")
                        },
                        new
                        {
                            FiliereId = new Guid("310b5fae-6446-4590-b08f-55047f4a78e9"),
                            UnitOfFormationId = new Guid("21ca9b68-f335-4533-a02f-b8583f0503f6")
                        },
                        new
                        {
                            FiliereId = new Guid("310b5fae-6446-4590-b08f-55047f4a78e9"),
                            UnitOfFormationId = new Guid("207dcd58-8e1d-4139-9d34-e12cad4d43b3")
                        },
                        new
                        {
                            FiliereId = new Guid("310b5fae-6446-4590-b08f-55047f4a78e9"),
                            UnitOfFormationId = new Guid("9aa85501-1ca3-44b1-804d-a362c03c8f41")
                        },
                        new
                        {
                            FiliereId = new Guid("1c75a28a-7091-42d4-8a13-5b37515d7a4a"),
                            UnitOfFormationId = new Guid("73a70be3-32b5-4caf-9a0a-156ee1416793")
                        },
                        new
                        {
                            FiliereId = new Guid("1c75a28a-7091-42d4-8a13-5b37515d7a4a"),
                            UnitOfFormationId = new Guid("a272f4fa-fd4d-4963-9133-fb66d11a248f")
                        },
                        new
                        {
                            FiliereId = new Guid("1c75a28a-7091-42d4-8a13-5b37515d7a4a"),
                            UnitOfFormationId = new Guid("dd7beea7-cf54-4f77-8c41-43a2ec8d87ba")
                        },
                        new
                        {
                            FiliereId = new Guid("1c75a28a-7091-42d4-8a13-5b37515d7a4a"),
                            UnitOfFormationId = new Guid("03ce2b05-1bee-4823-8f09-ee8a54baff53")
                        },
                        new
                        {
                            FiliereId = new Guid("1c75a28a-7091-42d4-8a13-5b37515d7a4a"),
                            UnitOfFormationId = new Guid("e318506c-22fb-4de5-9056-ee1f8b1e9a79")
                        },
                        new
                        {
                            FiliereId = new Guid("48bc9d15-e2bc-4741-97af-621693a1ebb5"),
                            UnitOfFormationId = new Guid("a60afdf6-2972-4204-b3e8-bc6301770b7b")
                        },
                        new
                        {
                            FiliereId = new Guid("48bc9d15-e2bc-4741-97af-621693a1ebb5"),
                            UnitOfFormationId = new Guid("a8d9ca92-a72c-4d82-a2dc-9f9109436fb6")
                        },
                        new
                        {
                            FiliereId = new Guid("48bc9d15-e2bc-4741-97af-621693a1ebb5"),
                            UnitOfFormationId = new Guid("ef617c46-ab87-4954-8d4e-934d9b257818")
                        },
                        new
                        {
                            FiliereId = new Guid("48bc9d15-e2bc-4741-97af-621693a1ebb5"),
                            UnitOfFormationId = new Guid("a84528ba-767f-44eb-b42f-52ab30d6f46e")
                        },
                        new
                        {
                            FiliereId = new Guid("48bc9d15-e2bc-4741-97af-621693a1ebb5"),
                            UnitOfFormationId = new Guid("c7268c2a-47b9-4084-b76a-581b47de73f0")
                        },
                        new
                        {
                            FiliereId = new Guid("e817e565-faad-42b8-9dca-70e03d67bdfd"),
                            UnitOfFormationId = new Guid("dd7beea7-cf54-4f77-8c41-43a2ec8d87ba")
                        },
                        new
                        {
                            FiliereId = new Guid("e817e565-faad-42b8-9dca-70e03d67bdfd"),
                            UnitOfFormationId = new Guid("f07a95f9-d2c0-4f31-b8f8-21e994263b5f")
                        },
                        new
                        {
                            FiliereId = new Guid("e817e565-faad-42b8-9dca-70e03d67bdfd"),
                            UnitOfFormationId = new Guid("f20ca1a9-ed53-4963-815f-1cb43b6fda94")
                        },
                        new
                        {
                            FiliereId = new Guid("e817e565-faad-42b8-9dca-70e03d67bdfd"),
                            UnitOfFormationId = new Guid("5e2afd75-7cc1-40ea-a292-61d0aad3b977")
                        },
                        new
                        {
                            FiliereId = new Guid("e817e565-faad-42b8-9dca-70e03d67bdfd"),
                            UnitOfFormationId = new Guid("207dcd58-8e1d-4139-9d34-e12cad4d43b3")
                        },
                        new
                        {
                            FiliereId = new Guid("c1c6fbc9-2fde-4c9e-b6cf-78a06f299de7"),
                            UnitOfFormationId = new Guid("7d12a3a0-38b9-4dbb-848b-161d3a973df9")
                        },
                        new
                        {
                            FiliereId = new Guid("c1c6fbc9-2fde-4c9e-b6cf-78a06f299de7"),
                            UnitOfFormationId = new Guid("c7268c2a-47b9-4084-b76a-581b47de73f0")
                        },
                        new
                        {
                            FiliereId = new Guid("c1c6fbc9-2fde-4c9e-b6cf-78a06f299de7"),
                            UnitOfFormationId = new Guid("08c7d265-8605-44f3-aa5e-0e8d67e47ac2")
                        },
                        new
                        {
                            FiliereId = new Guid("c1c6fbc9-2fde-4c9e-b6cf-78a06f299de7"),
                            UnitOfFormationId = new Guid("f07a95f9-d2c0-4f31-b8f8-21e994263b5f")
                        },
                        new
                        {
                            FiliereId = new Guid("c1c6fbc9-2fde-4c9e-b6cf-78a06f299de7"),
                            UnitOfFormationId = new Guid("f20ca1a9-ed53-4963-815f-1cb43b6fda94")
                        },
                        new
                        {
                            FiliereId = new Guid("08ce7b0a-5642-4337-80ce-aef919a0b2d9"),
                            UnitOfFormationId = new Guid("21ca9b68-f335-4533-a02f-b8583f0503f6")
                        },
                        new
                        {
                            FiliereId = new Guid("08ce7b0a-5642-4337-80ce-aef919a0b2d9"),
                            UnitOfFormationId = new Guid("03ce2b05-1bee-4823-8f09-ee8a54baff53")
                        },
                        new
                        {
                            FiliereId = new Guid("08ce7b0a-5642-4337-80ce-aef919a0b2d9"),
                            UnitOfFormationId = new Guid("cee2f638-2b57-4853-9ce4-d13ac61c664d")
                        },
                        new
                        {
                            FiliereId = new Guid("08ce7b0a-5642-4337-80ce-aef919a0b2d9"),
                            UnitOfFormationId = new Guid("c7268c2a-47b9-4084-b76a-581b47de73f0")
                        },
                        new
                        {
                            FiliereId = new Guid("08ce7b0a-5642-4337-80ce-aef919a0b2d9"),
                            UnitOfFormationId = new Guid("f07a95f9-d2c0-4f31-b8f8-21e994263b5f")
                        },
                        new
                        {
                            FiliereId = new Guid("16822560-9848-4a88-80f2-bb716ce8c18d"),
                            UnitOfFormationId = new Guid("51370ef7-f646-4445-9c8d-c00ba25abca3")
                        },
                        new
                        {
                            FiliereId = new Guid("16822560-9848-4a88-80f2-bb716ce8c18d"),
                            UnitOfFormationId = new Guid("518056b9-e28c-427d-a02c-9241ad3442d4")
                        },
                        new
                        {
                            FiliereId = new Guid("16822560-9848-4a88-80f2-bb716ce8c18d"),
                            UnitOfFormationId = new Guid("a47f14d2-d321-4cf4-96e2-30193053069e")
                        },
                        new
                        {
                            FiliereId = new Guid("16822560-9848-4a88-80f2-bb716ce8c18d"),
                            UnitOfFormationId = new Guid("68b0cb87-46b1-4129-91f2-8f50ff2de83c")
                        },
                        new
                        {
                            FiliereId = new Guid("16822560-9848-4a88-80f2-bb716ce8c18d"),
                            UnitOfFormationId = new Guid("9aa85501-1ca3-44b1-804d-a362c03c8f41")
                        },
                        new
                        {
                            FiliereId = new Guid("c094c44b-cac4-4fb9-88e0-c29a43bb7edb"),
                            UnitOfFormationId = new Guid("dd7beea7-cf54-4f77-8c41-43a2ec8d87ba")
                        },
                        new
                        {
                            FiliereId = new Guid("c094c44b-cac4-4fb9-88e0-c29a43bb7edb"),
                            UnitOfFormationId = new Guid("51370ef7-f646-4445-9c8d-c00ba25abca3")
                        },
                        new
                        {
                            FiliereId = new Guid("c094c44b-cac4-4fb9-88e0-c29a43bb7edb"),
                            UnitOfFormationId = new Guid("ded55607-3c83-40fb-923b-57cac2fa443e")
                        },
                        new
                        {
                            FiliereId = new Guid("c094c44b-cac4-4fb9-88e0-c29a43bb7edb"),
                            UnitOfFormationId = new Guid("08c7d265-8605-44f3-aa5e-0e8d67e47ac2")
                        },
                        new
                        {
                            FiliereId = new Guid("c094c44b-cac4-4fb9-88e0-c29a43bb7edb"),
                            UnitOfFormationId = new Guid("bef62363-9dd1-4193-bace-bc52eec10c90")
                        },
                        new
                        {
                            FiliereId = new Guid("109d52af-6448-4280-bcb8-c9ed03570c8c"),
                            UnitOfFormationId = new Guid("a4e49c71-b1c3-4d35-b9df-2c5077bbaa5f")
                        },
                        new
                        {
                            FiliereId = new Guid("109d52af-6448-4280-bcb8-c9ed03570c8c"),
                            UnitOfFormationId = new Guid("f20ca1a9-ed53-4963-815f-1cb43b6fda94")
                        },
                        new
                        {
                            FiliereId = new Guid("109d52af-6448-4280-bcb8-c9ed03570c8c"),
                            UnitOfFormationId = new Guid("d7cb4e59-ffe1-4d88-b025-936dfc26cb46")
                        },
                        new
                        {
                            FiliereId = new Guid("109d52af-6448-4280-bcb8-c9ed03570c8c"),
                            UnitOfFormationId = new Guid("73a70be3-32b5-4caf-9a0a-156ee1416793")
                        },
                        new
                        {
                            FiliereId = new Guid("109d52af-6448-4280-bcb8-c9ed03570c8c"),
                            UnitOfFormationId = new Guid("fb338b27-aa60-4908-a350-28a39f1b7365")
                        },
                        new
                        {
                            FiliereId = new Guid("27039911-d1ef-4662-ad01-f5b0260bfa96"),
                            UnitOfFormationId = new Guid("f20ca1a9-ed53-4963-815f-1cb43b6fda94")
                        },
                        new
                        {
                            FiliereId = new Guid("27039911-d1ef-4662-ad01-f5b0260bfa96"),
                            UnitOfFormationId = new Guid("a60afdf6-2972-4204-b3e8-bc6301770b7b")
                        },
                        new
                        {
                            FiliereId = new Guid("27039911-d1ef-4662-ad01-f5b0260bfa96"),
                            UnitOfFormationId = new Guid("812b28ae-aad1-4788-9f87-fc648cfacde0")
                        },
                        new
                        {
                            FiliereId = new Guid("27039911-d1ef-4662-ad01-f5b0260bfa96"),
                            UnitOfFormationId = new Guid("a4e49c71-b1c3-4d35-b9df-2c5077bbaa5f")
                        },
                        new
                        {
                            FiliereId = new Guid("27039911-d1ef-4662-ad01-f5b0260bfa96"),
                            UnitOfFormationId = new Guid("08c7d265-8605-44f3-aa5e-0e8d67e47ac2")
                        },
                        new
                        {
                            FiliereId = new Guid("06f1a5e9-8864-40e3-b6d6-f8945f97e205"),
                            UnitOfFormationId = new Guid("96028752-f817-47e3-b24a-9d673dffc367")
                        },
                        new
                        {
                            FiliereId = new Guid("06f1a5e9-8864-40e3-b6d6-f8945f97e205"),
                            UnitOfFormationId = new Guid("f07a95f9-d2c0-4f31-b8f8-21e994263b5f")
                        },
                        new
                        {
                            FiliereId = new Guid("06f1a5e9-8864-40e3-b6d6-f8945f97e205"),
                            UnitOfFormationId = new Guid("5e2afd75-7cc1-40ea-a292-61d0aad3b977")
                        },
                        new
                        {
                            FiliereId = new Guid("06f1a5e9-8864-40e3-b6d6-f8945f97e205"),
                            UnitOfFormationId = new Guid("0bbc12bb-8163-457a-a852-ed28f0d6ea86")
                        },
                        new
                        {
                            FiliereId = new Guid("06f1a5e9-8864-40e3-b6d6-f8945f97e205"),
                            UnitOfFormationId = new Guid("518056b9-e28c-427d-a02c-9241ad3442d4")
                        });
                });

            modelBuilder.Entity("Domain.EntitiesFromOtherServices.FiliereService.Formateur", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specialisation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Statut")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Formateurs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a1b2c3d4-e5f6-7a8b-9c0d-ef1234567890"),
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(1536),
                            Email = "mehdi.bennani@example.com",
                            IsDeleted = false,
                            Nom = "Bennani",
                            Prenom = "Mehdi",
                            Specialisation = "Intelligence Artificielle",
                            Statut = "Actif",
                            Telephone = "0600123456",
                            Type = "Permanent"
                        },
                        new
                        {
                            Id = new Guid("b1c2d3e4-f5a6-7b8c-9d0e-ef0987654321"),
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(1556),
                            Email = "yassine.elamrani@example.com",
                            IsDeleted = false,
                            Nom = "El Amrani",
                            Prenom = "Yassine",
                            Specialisation = "Développement Web",
                            Statut = "Actif",
                            Telephone = "0600654321",
                            Type = "Contractuel"
                        },
                        new
                        {
                            Id = new Guid("c1d2e3f4-a5b6-7c8d-9e0f-ef1234987654"),
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(1561),
                            Email = "nadia.kabbaj@example.com",
                            IsDeleted = false,
                            Nom = "Kabbaj",
                            Prenom = "Nadia",
                            Specialisation = "Big Data",
                            Statut = "Actif",
                            Telephone = "0700123456",
                            Type = "Permanent"
                        },
                        new
                        {
                            Id = new Guid("d1e2f3a4-b5c6-7d8e-9f0a-ef6543210987"),
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(1564),
                            Email = "karim.alami@example.com",
                            IsDeleted = false,
                            Nom = "Alami",
                            Prenom = "Karim",
                            Specialisation = "Sécurité Informatique",
                            Statut = "Inactif",
                            Telephone = "0700654321",
                            Type = "Vacataire"
                        },
                        new
                        {
                            Id = new Guid("e1f2a3b4-c5d6-7e8f-9a0b-ef5678901234"),
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(1568),
                            Email = "amina.fassi@example.com",
                            IsDeleted = false,
                            Nom = "Fassi",
                            Prenom = "Amina",
                            Specialisation = "Gestion de Projet",
                            Statut = "Actif",
                            Telephone = "0800123456",
                            Type = "Permanent"
                        });
                });

            modelBuilder.Entity("Domain.EntitiesFromOtherServices.FiliereService.UnitOfFormation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Coefficient")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Semestre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("UnitOfFormations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("207dcd58-8e1d-4139-9d34-e12cad4d43b3"),
                            Coefficient = 2,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(1575),
                            Duration = 45,
                            IsDeleted = false,
                            Name = "Français",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("a65b1600-b5b1-4bf0-a48c-ba975a5e9f89"),
                            Coefficient = 3,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(1583),
                            Duration = 46,
                            IsDeleted = false,
                            Name = "English",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("bd7f31c7-e9f5-49f9-b5b5-530b34463faa"),
                            Coefficient = 4,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(1589),
                            Duration = 47,
                            IsDeleted = false,
                            Name = "Math",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("dd7beea7-cf54-4f77-8c41-43a2ec8d87ba"),
                            Coefficient = 5,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(1591),
                            Duration = 48,
                            IsDeleted = false,
                            Name = "History",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("a84528ba-767f-44eb-b42f-52ab30d6f46e"),
                            Coefficient = 6,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(1594),
                            Duration = 49,
                            IsDeleted = false,
                            Name = "Geography",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("7d12a3a0-38b9-4dbb-848b-161d3a973df9"),
                            Coefficient = 2,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(1597),
                            Duration = 50,
                            IsDeleted = false,
                            Name = "Biology",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("a60afdf6-2972-4204-b3e8-bc6301770b7b"),
                            Coefficient = 3,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(1602),
                            Duration = 51,
                            IsDeleted = false,
                            Name = "Chemistry",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("76845ab0-6aac-4873-9563-a5d723b47c90"),
                            Coefficient = 4,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(1604),
                            Duration = 52,
                            IsDeleted = false,
                            Name = "Physics",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("4b6e905c-2bd7-44d7-8391-32e75fd550de"),
                            Coefficient = 5,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(1607),
                            Duration = 53,
                            IsDeleted = false,
                            Name = "Computer Science",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("f20ca1a9-ed53-4963-815f-1cb43b6fda94"),
                            Coefficient = 6,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(1610),
                            Duration = 54,
                            IsDeleted = false,
                            Name = "Art",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("bf53b3c5-33e1-4ce6-a5ea-28edc87af26a"),
                            Coefficient = 2,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(1615),
                            Duration = 45,
                            IsDeleted = false,
                            Name = "Music",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("d7cb4e59-ffe1-4d88-b025-936dfc26cb46"),
                            Coefficient = 3,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(1618),
                            Duration = 46,
                            IsDeleted = false,
                            Name = "Physical Education",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("08c7d265-8605-44f3-aa5e-0e8d67e47ac2"),
                            Coefficient = 4,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(1620),
                            Duration = 47,
                            IsDeleted = false,
                            Name = "Economics",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("b0c0524e-9ab5-489f-9cde-c8df84d37443"),
                            Coefficient = 5,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(1622),
                            Duration = 48,
                            IsDeleted = false,
                            Name = "Psychology",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("c7268c2a-47b9-4084-b76a-581b47de73f0"),
                            Coefficient = 6,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(1627),
                            Duration = 49,
                            IsDeleted = false,
                            Name = "Philosophy",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("0bbc12bb-8163-457a-a852-ed28f0d6ea86"),
                            Coefficient = 2,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(1779),
                            Duration = 50,
                            IsDeleted = false,
                            Name = "Sociology",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("5e2afd75-7cc1-40ea-a292-61d0aad3b977"),
                            Coefficient = 3,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(1782),
                            Duration = 51,
                            IsDeleted = false,
                            Name = "Political Science",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("597422d1-9775-4777-a79c-b99bd43012e0"),
                            Coefficient = 4,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(1786),
                            Duration = 52,
                            IsDeleted = false,
                            Name = "Statistics",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("96028752-f817-47e3-b24a-9d673dffc367"),
                            Coefficient = 5,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(1791),
                            Duration = 53,
                            IsDeleted = false,
                            Name = "Engineering",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("e318506c-22fb-4de5-9056-ee1f8b1e9a79"),
                            Coefficient = 6,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(1793),
                            Duration = 54,
                            IsDeleted = false,
                            Name = "Literature",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("adc04f0d-b874-4a9d-852f-1356e097855b"),
                            Coefficient = 2,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(1796),
                            Duration = 45,
                            IsDeleted = false,
                            Name = "Spanish",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("79491fb6-c30b-479a-9545-4f511c3fa87f"),
                            Coefficient = 3,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(1798),
                            Duration = 46,
                            IsDeleted = false,
                            Name = "German",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("67778971-04b1-4c5d-aec5-a24fbb031c89"),
                            Coefficient = 4,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(1803),
                            Duration = 47,
                            IsDeleted = false,
                            Name = "Italian",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("518056b9-e28c-427d-a02c-9241ad3442d4"),
                            Coefficient = 5,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(1806),
                            Duration = 48,
                            IsDeleted = false,
                            Name = "Chinese",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("7c168860-1c57-4ef3-b6b2-fadb326c24dd"),
                            Coefficient = 6,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(1809),
                            Duration = 49,
                            IsDeleted = false,
                            Name = "Japanese",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("f9dba3a5-f75f-4051-83f6-29a5051c93ee"),
                            Coefficient = 2,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(1811),
                            Duration = 50,
                            IsDeleted = false,
                            Name = "Arabic",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("c05ccfef-0963-446a-8896-e52812f93c70"),
                            Coefficient = 3,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(1815),
                            Duration = 51,
                            IsDeleted = false,
                            Name = "Latin",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("a47f14d2-d321-4cf4-96e2-30193053069e"),
                            Coefficient = 4,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(1818),
                            Duration = 52,
                            IsDeleted = false,
                            Name = "Greek",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("a272f4fa-fd4d-4963-9133-fb66d11a248f"),
                            Coefficient = 5,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(1820),
                            Duration = 53,
                            IsDeleted = false,
                            Name = "Religion",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("a8d9ca92-a72c-4d82-a2dc-9f9109436fb6"),
                            Coefficient = 6,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(1822),
                            Duration = 54,
                            IsDeleted = false,
                            Name = "Astronomy",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("73a70be3-32b5-4caf-9a0a-156ee1416793"),
                            Coefficient = 2,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(1827),
                            Duration = 45,
                            IsDeleted = false,
                            Name = "Environmental Science",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("ef617c46-ab87-4954-8d4e-934d9b257818"),
                            Coefficient = 3,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(1829),
                            Duration = 46,
                            IsDeleted = false,
                            Name = "Health Education",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("69210365-a437-4666-91c3-9fbf33e52904"),
                            Coefficient = 4,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(1832),
                            Duration = 47,
                            IsDeleted = false,
                            Name = "Business Studies",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("812b28ae-aad1-4788-9f87-fc648cfacde0"),
                            Coefficient = 5,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(1835),
                            Duration = 48,
                            IsDeleted = false,
                            Name = "Law",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("f07a95f9-d2c0-4f31-b8f8-21e994263b5f"),
                            Coefficient = 6,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(1840),
                            Duration = 49,
                            IsDeleted = false,
                            Name = "Engineering Design",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("6791aad2-09e4-4cf0-86d3-d5d1339d2c6f"),
                            Coefficient = 2,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(1842),
                            Duration = 50,
                            IsDeleted = false,
                            Name = "Information Technology",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("59c6e6a0-89e4-4043-9d33-fb0725a2b4f2"),
                            Coefficient = 3,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(1844),
                            Duration = 51,
                            IsDeleted = false,
                            Name = "Theater",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("7a8364d2-087d-4184-9325-5a3fcdb8c878"),
                            Coefficient = 4,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(1847),
                            Duration = 52,
                            IsDeleted = false,
                            Name = "Dance",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("68b0cb87-46b1-4129-91f2-8f50ff2de83c"),
                            Coefficient = 5,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(1852),
                            Duration = 53,
                            IsDeleted = false,
                            Name = "Media Studies",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("03ce2b05-1bee-4823-8f09-ee8a54baff53"),
                            Coefficient = 6,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(1854),
                            Duration = 54,
                            IsDeleted = false,
                            Name = "Anthropology",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("24e0b880-406e-4c87-a7ad-0ef89cd9a0bb"),
                            Coefficient = 2,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(1856),
                            Duration = 45,
                            IsDeleted = false,
                            Name = "Ethics",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("48b88652-b6db-493f-871a-7de5adb5af05"),
                            Coefficient = 3,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(1859),
                            Duration = 46,
                            IsDeleted = false,
                            Name = "Mathematics",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("bef62363-9dd1-4193-bace-bc52eec10c90"),
                            Coefficient = 4,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(1863),
                            Duration = 47,
                            IsDeleted = false,
                            Name = "Statistics",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("fb338b27-aa60-4908-a350-28a39f1b7365"),
                            Coefficient = 5,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(1866),
                            Duration = 48,
                            IsDeleted = false,
                            Name = "Cryptography",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("51370ef7-f646-4445-9c8d-c00ba25abca3"),
                            Coefficient = 6,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(1868),
                            Duration = 49,
                            IsDeleted = false,
                            Name = "Pharmacology",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("1239cc38-04cf-4430-9b92-aeb1e8dae76e"),
                            Coefficient = 2,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(1871),
                            Duration = 50,
                            IsDeleted = false,
                            Name = "Astrophysics",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("9aa85501-1ca3-44b1-804d-a362c03c8f41"),
                            Coefficient = 3,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(1875),
                            Duration = 51,
                            IsDeleted = false,
                            Name = "Geology",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("e3626f57-16f9-4e6d-85fc-6048035334d5"),
                            Coefficient = 4,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(1877),
                            Duration = 52,
                            IsDeleted = false,
                            Name = "Oceanography",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("68c73084-72d8-47f7-8551-60bc6c563e32"),
                            Coefficient = 5,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(1880),
                            Duration = 53,
                            IsDeleted = false,
                            Name = "Meteorology",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("cee2f638-2b57-4853-9ce4-d13ac61c664d"),
                            Coefficient = 6,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(1882),
                            Duration = 54,
                            IsDeleted = false,
                            Name = "Robotics",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("a4e49c71-b1c3-4d35-b9df-2c5077bbaa5f"),
                            Coefficient = 2,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(1887),
                            Duration = 45,
                            IsDeleted = false,
                            Name = "Machine Learning",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("ded55607-3c83-40fb-923b-57cac2fa443e"),
                            Coefficient = 3,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(1889),
                            Duration = 46,
                            IsDeleted = false,
                            Name = "Data Science",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("21ca9b68-f335-4533-a02f-b8583f0503f6"),
                            Coefficient = 4,
                            CreatedAt = new DateTime(2024, 8, 19, 14, 39, 45, 52, DateTimeKind.Utc).AddTicks(1891),
                            Duration = 47,
                            IsDeleted = false,
                            Name = "Artificial Intelligence",
                            Semestre = "Semester 2"
                        });
                });

            modelBuilder.Entity("Domain.ExamResult", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("DateValidation")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ExamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsValid")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("PracticalNote")
                        .HasColumnType("float");

                    b.Property<Guid?>("StagiaireId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("TheoreticalNote")
                        .HasColumnType("float");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ExamId");

                    b.ToTable("ExamResults");
                });

            modelBuilder.Entity("Domain.Test", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("FiliereId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Note")
                        .HasColumnType("float");

                    b.Property<string>("TestCorrection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TestStatement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TrainerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UnitOfFormationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FiliereId");

                    b.HasIndex("UnitOfFormationId");

                    b.ToTable("Tests");
                });

            modelBuilder.Entity("Domain.AllResults", b =>
                {
                    b.HasOne("Domain.ExamResult", "ExamResult")
                        .WithMany()
                        .HasForeignKey("ExamResultId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.TestResult", "TestResults")
                        .WithMany()
                        .HasForeignKey("TestResultsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExamResult");

                    b.Navigation("TestResults");
                });

            modelBuilder.Entity("Domain.Entities.Exam", b =>
                {
                    b.HasOne("Domain.EntitiesFromOtherServices.FiliereService.Filiere", "Filiere")
                        .WithMany("Exams")
                        .HasForeignKey("FiliereId");

                    b.HasOne("Domain.EntitiesFromOtherServices.FiliereService.UnitOfFormation", "UnitOfFormation")
                        .WithMany("Exams")
                        .HasForeignKey("UnitOfFormationId");

                    b.Navigation("Filiere");

                    b.Navigation("UnitOfFormation");
                });

            modelBuilder.Entity("Domain.Entities.ExamAttendance", b =>
                {
                    b.HasOne("Domain.Entities.Exam", "Exam")
                        .WithMany("ExamAttendances")
                        .HasForeignKey("ExamId");

                    b.Navigation("Exam");
                });

            modelBuilder.Entity("Domain.Entities.ExamSession", b =>
                {
                    b.HasOne("Domain.Entities.Exam", "Exam")
                        .WithOne("ExamSession")
                        .HasForeignKey("Domain.Entities.ExamSession", "ExamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Room", "Room")
                        .WithMany("ExamSessions")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Supervisor", "Supervisor")
                        .WithMany("ExamSessions")
                        .HasForeignKey("SupervisorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exam");

                    b.Navigation("Room");

                    b.Navigation("Supervisor");
                });

            modelBuilder.Entity("Domain.Entities.IndividualWork", b =>
                {
                    b.HasOne("Domain.Entities.IndividualWorkUOF", "IndividualWorkUOF")
                        .WithMany("IndividualWork")
                        .HasForeignKey("IndividualWorkUOFId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IndividualWorkUOF");
                });

            modelBuilder.Entity("Domain.Entities.TestResult", b =>
                {
                    b.HasOne("Domain.Test", "Test")
                        .WithMany("TestResults")
                        .HasForeignKey("TestId");

                    b.Navigation("Test");
                });

            modelBuilder.Entity("Domain.Entities.VariantsExams", b =>
                {
                    b.HasOne("Domain.Entities.Exam", "Exam")
                        .WithMany("VariantsExams")
                        .HasForeignKey("ExamId");

                    b.HasOne("Domain.EntitiesFromOtherServices.FiliereService.UnitOfFormation", "UnitOfFormation")
                        .WithMany("VariantsExams")
                        .HasForeignKey("UnitOfFormationId");

                    b.Navigation("Exam");

                    b.Navigation("UnitOfFormation");
                });

            modelBuilder.Entity("Domain.EntitiesFromOtherServices.FiliereService.FiliereUnitOfFormation", b =>
                {
                    b.HasOne("Domain.EntitiesFromOtherServices.FiliereService.Filiere", "Filiere")
                        .WithMany("FiliereUnitOfFormations")
                        .HasForeignKey("FiliereId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.EntitiesFromOtherServices.FiliereService.UnitOfFormation", "UnitOfFormation")
                        .WithMany("FiliereUnitOfFormations")
                        .HasForeignKey("UnitOfFormationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Filiere");

                    b.Navigation("UnitOfFormation");
                });

            modelBuilder.Entity("Domain.ExamResult", b =>
                {
                    b.HasOne("Domain.Entities.Exam", "Exam")
                        .WithMany("ExamResults")
                        .HasForeignKey("ExamId");

                    b.Navigation("Exam");
                });

            modelBuilder.Entity("Domain.Test", b =>
                {
                    b.HasOne("Domain.EntitiesFromOtherServices.FiliereService.Filiere", "Filiere")
                        .WithMany("Tests")
                        .HasForeignKey("FiliereId");

                    b.HasOne("Domain.EntitiesFromOtherServices.FiliereService.UnitOfFormation", "UnitOfFormation")
                        .WithMany("Tests")
                        .HasForeignKey("UnitOfFormationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Filiere");

                    b.Navigation("UnitOfFormation");
                });

            modelBuilder.Entity("Domain.Entities.Exam", b =>
                {
                    b.Navigation("ExamAttendances");

                    b.Navigation("ExamResults");

                    b.Navigation("ExamSession")
                        .IsRequired();

                    b.Navigation("VariantsExams");
                });

            modelBuilder.Entity("Domain.Entities.IndividualWorkUOF", b =>
                {
                    b.Navigation("IndividualWork");
                });

            modelBuilder.Entity("Domain.Entities.Room", b =>
                {
                    b.Navigation("ExamSessions");
                });

            modelBuilder.Entity("Domain.Entities.Supervisor", b =>
                {
                    b.Navigation("ExamSessions");
                });

            modelBuilder.Entity("Domain.EntitiesFromOtherServices.FiliereService.Filiere", b =>
                {
                    b.Navigation("Exams");

                    b.Navigation("FiliereUnitOfFormations");

                    b.Navigation("Tests");
                });

            modelBuilder.Entity("Domain.EntitiesFromOtherServices.FiliereService.UnitOfFormation", b =>
                {
                    b.Navigation("Exams");

                    b.Navigation("FiliereUnitOfFormations");

                    b.Navigation("Tests");

                    b.Navigation("VariantsExams");
                });

            modelBuilder.Entity("Domain.Test", b =>
                {
                    b.Navigation("TestResults");
                });
#pragma warning restore 612, 618
        }
    }
}
