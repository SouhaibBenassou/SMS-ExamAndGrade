// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastracture.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Exam", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Duration")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExamDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("FiliereId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SemesterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("SupervisorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UnitOfFormationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("YearId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("YearOfStudyId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FiliereId");

                    b.HasIndex("RoomId");

                    b.HasIndex("SemesterId");

                    b.HasIndex("SupervisorId");

                    b.HasIndex("UnitOfFormationId");

                    b.HasIndex("YearId");

                    b.HasIndex("YearOfStudyId");

                    b.ToTable("Exams");

                    b.HasData(
                        new
                        {
                            Id = new Guid("376928d2-1449-4738-8e64-fdd351a8bfb3"),
                            CreatedAt = new DateTime(2024, 7, 15, 10, 7, 33, 604, DateTimeKind.Utc).AddTicks(2212),
                            Duration = new DateTime(2024, 7, 15, 11, 7, 33, 604, DateTimeKind.Local).AddTicks(2266),
                            ExamDate = new DateTime(2024, 7, 15, 11, 7, 33, 604, DateTimeKind.Local).AddTicks(2220),
                            FiliereId = new Guid("bba5cac6-1137-4de1-8730-ada291e022d7"),
                            IsDeleted = false,
                            RoomId = new Guid("7d2e9d3f-9a1a-4cae-9e5c-35599571f55d"),
                            SemesterId = new Guid("f142e3d5-5dd0-489d-8b76-1e3f8b1ffc6d"),
                            StartTime = new DateTime(2024, 7, 15, 11, 7, 33, 604, DateTimeKind.Local).AddTicks(2268),
                            SupervisorId = new Guid("a1f5b552-7716-42ad-9ed0-7ca33eaa6d5f"),
                            UnitOfFormationId = new Guid("7986fd89-577a-483a-a866-2ffa3d1a7967"),
                            YearId = new Guid("14ee2101-00e4-44dc-85f2-9f4d97842871"),
                            YearOfStudyId = new Guid("7f595bdf-45ec-4324-b15a-1b91991e5bc1")
                        },
                        new
                        {
                            Id = new Guid("dcd8fd1d-9e90-43c9-87eb-e343679099eb"),
                            CreatedAt = new DateTime(2024, 7, 15, 10, 7, 33, 604, DateTimeKind.Utc).AddTicks(2271),
                            Duration = new DateTime(2024, 7, 15, 11, 7, 33, 604, DateTimeKind.Local).AddTicks(2277),
                            ExamDate = new DateTime(2024, 7, 15, 11, 7, 33, 604, DateTimeKind.Local).AddTicks(2275),
                            FiliereId = new Guid("c4d20149-5c11-44d5-857f-e1f200ec23d4"),
                            IsDeleted = false,
                            RoomId = new Guid("632021de-0b43-4659-98ab-799008829b28"),
                            SemesterId = new Guid("5ec0b7d8-fd8a-40c6-9377-0f8aaade684d"),
                            StartTime = new DateTime(2024, 7, 15, 11, 7, 33, 604, DateTimeKind.Local).AddTicks(2279),
                            SupervisorId = new Guid("c5ab09c1-a3b8-4582-a8d6-c9ae9df2168d"),
                            UnitOfFormationId = new Guid("0e47f31c-c374-4c38-b42e-a6a5bce00b2d"),
                            YearId = new Guid("cf1b1db5-671b-4ab8-8704-795a3121f50c"),
                            YearOfStudyId = new Guid("d1dd8303-39e1-4445-80db-4a7619291c0b")
                        });
                });

            modelBuilder.Entity("Domain.Entities.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoomType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7d2e9d3f-9a1a-4cae-9e5c-35599571f55d"),
                            Capacity = 30,
                            CreatedAt = new DateTime(2024, 7, 15, 10, 7, 33, 604, DateTimeKind.Utc).AddTicks(2160),
                            IsDeleted = false,
                            RoomName = "Room A",
                            RoomType = 1
                        },
                        new
                        {
                            Id = new Guid("632021de-0b43-4659-98ab-799008829b28"),
                            Capacity = 25,
                            CreatedAt = new DateTime(2024, 7, 15, 10, 7, 33, 604, DateTimeKind.Utc).AddTicks(2163),
                            IsDeleted = false,
                            RoomName = "Room B",
                            RoomType = 0
                        });
                });

            modelBuilder.Entity("Domain.Entities.Semester", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SemesterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Semesters");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f142e3d5-5dd0-489d-8b76-1e3f8b1ffc6d"),
                            CreatedAt = new DateTime(2024, 7, 15, 10, 7, 33, 604, DateTimeKind.Utc).AddTicks(2046),
                            IsDeleted = false,
                            SemesterName = "Fall"
                        },
                        new
                        {
                            Id = new Guid("5ec0b7d8-fd8a-40c6-9377-0f8aaade684d"),
                            CreatedAt = new DateTime(2024, 7, 15, 10, 7, 33, 604, DateTimeKind.Utc).AddTicks(2048),
                            IsDeleted = false,
                            SemesterName = "Spring"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Supervisor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Supervisors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a1f5b552-7716-42ad-9ed0-7ca33eaa6d5f"),
                            CreatedAt = new DateTime(2024, 7, 15, 10, 7, 33, 604, DateTimeKind.Utc).AddTicks(2185),
                            FirstName = "John",
                            IsDeleted = false,
                            LastName = "Smith",
                            Title = "Professor"
                        },
                        new
                        {
                            Id = new Guid("c5ab09c1-a3b8-4582-a8d6-c9ae9df2168d"),
                            CreatedAt = new DateTime(2024, 7, 15, 10, 7, 33, 604, DateTimeKind.Utc).AddTicks(2190),
                            FirstName = "Emily",
                            IsDeleted = false,
                            LastName = "Johnson",
                            Title = "Associate Professor"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Year", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("YearName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Years");

                    b.HasData(
                        new
                        {
                            Id = new Guid("14ee2101-00e4-44dc-85f2-9f4d97842871"),
                            CreatedAt = new DateTime(2024, 7, 15, 10, 7, 33, 604, DateTimeKind.Utc).AddTicks(1816),
                            IsDeleted = false,
                            YearName = "2024"
                        },
                        new
                        {
                            Id = new Guid("cf1b1db5-671b-4ab8-8704-795a3121f50c"),
                            CreatedAt = new DateTime(2024, 7, 15, 10, 7, 33, 604, DateTimeKind.Utc).AddTicks(1822),
                            IsDeleted = false,
                            YearName = "2025"
                        });
                });

            modelBuilder.Entity("Domain.Entities.YearOfStudy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("YearsOfStudy");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7f595bdf-45ec-4324-b15a-1b91991e5bc1"),
                            CreatedAt = new DateTime(2024, 7, 15, 10, 7, 33, 604, DateTimeKind.Utc).AddTicks(2080),
                            IsDeleted = false,
                            Year = "First Year"
                        },
                        new
                        {
                            Id = new Guid("d1dd8303-39e1-4445-80db-4a7619291c0b"),
                            CreatedAt = new DateTime(2024, 7, 15, 10, 7, 33, 604, DateTimeKind.Utc).AddTicks(2085),
                            IsDeleted = false,
                            Year = "Second Year"
                        });
                });

            modelBuilder.Entity("Domain.Filiere", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FiliereName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Filieres");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bba5cac6-1137-4de1-8730-ada291e022d7"),
                            CreatedAt = new DateTime(2024, 7, 15, 10, 7, 33, 604, DateTimeKind.Utc).AddTicks(2108),
                            FiliereName = "Computer Science",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("c4d20149-5c11-44d5-857f-e1f200ec23d4"),
                            CreatedAt = new DateTime(2024, 7, 15, 10, 7, 33, 604, DateTimeKind.Utc).AddTicks(2110),
                            FiliereName = "Mechanical Engineering",
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("Domain.UnitOfFormation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("UnitsOfFormation");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7986fd89-577a-483a-a866-2ffa3d1a7967"),
                            CreatedAt = new DateTime(2024, 7, 15, 10, 7, 33, 604, DateTimeKind.Utc).AddTicks(2132),
                            IsDeleted = false,
                            UnitName = "Programming 101"
                        },
                        new
                        {
                            Id = new Guid("0e47f31c-c374-4c38-b42e-a6a5bce00b2d"),
                            CreatedAt = new DateTime(2024, 7, 15, 10, 7, 33, 604, DateTimeKind.Utc).AddTicks(2134),
                            IsDeleted = false,
                            UnitName = "Thermodynamics"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Exam", b =>
                {
                    b.HasOne("Domain.Filiere", "Filiere")
                        .WithMany("Exams")
                        .HasForeignKey("FiliereId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Domain.Entities.Room", "Room")
                        .WithMany("Exams")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Domain.Entities.Semester", "Semester")
                        .WithMany("Exams")
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Domain.Entities.Supervisor", "Supervisor")
                        .WithMany("Exams")
                        .HasForeignKey("SupervisorId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Domain.UnitOfFormation", "UnitOfFormation")
                        .WithMany("Exams")
                        .HasForeignKey("UnitOfFormationId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Domain.Entities.Year", "Year")
                        .WithMany("Exams")
                        .HasForeignKey("YearId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Domain.Entities.YearOfStudy", "YearOfStudy")
                        .WithMany("Exams")
                        .HasForeignKey("YearOfStudyId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Filiere");

                    b.Navigation("Room");

                    b.Navigation("Semester");

                    b.Navigation("Supervisor");

                    b.Navigation("UnitOfFormation");

                    b.Navigation("Year");

                    b.Navigation("YearOfStudy");
                });

            modelBuilder.Entity("Domain.Entities.Room", b =>
                {
                    b.Navigation("Exams");
                });

            modelBuilder.Entity("Domain.Entities.Semester", b =>
                {
                    b.Navigation("Exams");
                });

            modelBuilder.Entity("Domain.Entities.Supervisor", b =>
                {
                    b.Navigation("Exams");
                });

            modelBuilder.Entity("Domain.Entities.Year", b =>
                {
                    b.Navigation("Exams");
                });

            modelBuilder.Entity("Domain.Entities.YearOfStudy", b =>
                {
                    b.Navigation("Exams");
                });

            modelBuilder.Entity("Domain.Filiere", b =>
                {
                    b.Navigation("Exams");
                });

            modelBuilder.Entity("Domain.UnitOfFormation", b =>
                {
                    b.Navigation("Exams");
                });
#pragma warning restore 612, 618
        }
    }
}
