// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastracture.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240715100144_update")]
    partial class update
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Exam", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Duration")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExamDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("FiliereId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SemesterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("SupervisorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UnitOfFormationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("YearId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("YearOfStudyId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FiliereId");

                    b.HasIndex("RoomId");

                    b.HasIndex("SemesterId");

                    b.HasIndex("SupervisorId");

                    b.HasIndex("UnitOfFormationId");

                    b.HasIndex("YearId");

                    b.HasIndex("YearOfStudyId");

                    b.ToTable("Exams");

                    b.HasData(
                        new
                        {
                            Id = new Guid("10ad8669-9f9b-4e13-b243-1071f139a320"),
                            CreatedAt = new DateTime(2024, 7, 15, 10, 1, 43, 462, DateTimeKind.Utc).AddTicks(4400),
                            Duration = new DateTime(2024, 7, 15, 11, 1, 43, 462, DateTimeKind.Local).AddTicks(4456),
                            ExamDate = new DateTime(2024, 7, 15, 11, 1, 43, 462, DateTimeKind.Local).AddTicks(4409),
                            FiliereId = new Guid("9f25c450-8192-411a-b0ef-156697fd0613"),
                            IsDeleted = false,
                            RoomId = new Guid("0f1a754e-2eba-4caf-b859-ea05cdbe3406"),
                            SemesterId = new Guid("13b87a91-480d-4b46-8bec-196ced60d71d"),
                            StartTime = new DateTime(2024, 7, 15, 11, 1, 43, 462, DateTimeKind.Local).AddTicks(4458),
                            SupervisorId = new Guid("b3127068-9258-43e8-a314-2634ac5fe893"),
                            UnitOfFormationId = new Guid("2811585a-5a41-4f3d-b447-ab9b3355b92f"),
                            YearId = new Guid("7db11100-1e8d-4f3c-8e8b-c7f9bdbdfd98"),
                            YearOfStudyId = new Guid("3a88be03-d1e4-4e5c-9e33-273f01eed508")
                        },
                        new
                        {
                            Id = new Guid("4cf2db50-18f9-45eb-9a2a-c00b3b65dcc6"),
                            CreatedAt = new DateTime(2024, 7, 15, 10, 1, 43, 462, DateTimeKind.Utc).AddTicks(4461),
                            Duration = new DateTime(2024, 7, 15, 11, 1, 43, 462, DateTimeKind.Local).AddTicks(4467),
                            ExamDate = new DateTime(2024, 7, 15, 11, 1, 43, 462, DateTimeKind.Local).AddTicks(4465),
                            FiliereId = new Guid("bbb00a0e-fb4e-4c2c-9e37-b76c460a7ce5"),
                            IsDeleted = false,
                            RoomId = new Guid("f52dda1b-7b43-4733-b341-9cdb98a5d8e8"),
                            SemesterId = new Guid("b0a42931-39a4-4f5b-9634-adc335c1e356"),
                            StartTime = new DateTime(2024, 7, 15, 11, 1, 43, 462, DateTimeKind.Local).AddTicks(4468),
                            SupervisorId = new Guid("9faf32de-2014-436c-a8cb-61215d9a5fdd"),
                            UnitOfFormationId = new Guid("d9f02132-e313-46fe-9015-a8d14815d602"),
                            YearId = new Guid("9da79938-a79c-4735-b6a3-a2d49b31c1ff"),
                            YearOfStudyId = new Guid("aac2dcbf-776c-438c-ac97-bda862a308a6")
                        });
                });

            modelBuilder.Entity("Domain.Entities.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoomType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0f1a754e-2eba-4caf-b859-ea05cdbe3406"),
                            Capacity = 30,
                            CreatedAt = new DateTime(2024, 7, 15, 10, 1, 43, 462, DateTimeKind.Utc).AddTicks(4350),
                            IsDeleted = false,
                            RoomName = "Room A",
                            RoomType = 1
                        },
                        new
                        {
                            Id = new Guid("f52dda1b-7b43-4733-b341-9cdb98a5d8e8"),
                            Capacity = 25,
                            CreatedAt = new DateTime(2024, 7, 15, 10, 1, 43, 462, DateTimeKind.Utc).AddTicks(4353),
                            IsDeleted = false,
                            RoomName = "Room B",
                            RoomType = 0
                        });
                });

            modelBuilder.Entity("Domain.Entities.Semester", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SemesterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Semesters");

                    b.HasData(
                        new
                        {
                            Id = new Guid("13b87a91-480d-4b46-8bec-196ced60d71d"),
                            CreatedAt = new DateTime(2024, 7, 15, 10, 1, 43, 462, DateTimeKind.Utc).AddTicks(4153),
                            IsDeleted = false,
                            SemesterName = "Fall"
                        },
                        new
                        {
                            Id = new Guid("b0a42931-39a4-4f5b-9634-adc335c1e356"),
                            CreatedAt = new DateTime(2024, 7, 15, 10, 1, 43, 462, DateTimeKind.Utc).AddTicks(4241),
                            IsDeleted = false,
                            SemesterName = "Spring"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Supervisor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Supervisors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b3127068-9258-43e8-a314-2634ac5fe893"),
                            CreatedAt = new DateTime(2024, 7, 15, 10, 1, 43, 462, DateTimeKind.Utc).AddTicks(4374),
                            FirstName = "John",
                            IsDeleted = false,
                            LastName = "Smith",
                            Title = "Professor"
                        },
                        new
                        {
                            Id = new Guid("9faf32de-2014-436c-a8cb-61215d9a5fdd"),
                            CreatedAt = new DateTime(2024, 7, 15, 10, 1, 43, 462, DateTimeKind.Utc).AddTicks(4379),
                            FirstName = "Emily",
                            IsDeleted = false,
                            LastName = "Johnson",
                            Title = "Associate Professor"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Year", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("YearName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Years");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7db11100-1e8d-4f3c-8e8b-c7f9bdbdfd98"),
                            CreatedAt = new DateTime(2024, 7, 15, 10, 1, 43, 462, DateTimeKind.Utc).AddTicks(3966),
                            IsDeleted = false,
                            YearName = "2024"
                        },
                        new
                        {
                            Id = new Guid("9da79938-a79c-4735-b6a3-a2d49b31c1ff"),
                            CreatedAt = new DateTime(2024, 7, 15, 10, 1, 43, 462, DateTimeKind.Utc).AddTicks(3970),
                            IsDeleted = false,
                            YearName = "2025"
                        });
                });

            modelBuilder.Entity("Domain.Entities.YearOfStudy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("YearsOfStudy");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3a88be03-d1e4-4e5c-9e33-273f01eed508"),
                            CreatedAt = new DateTime(2024, 7, 15, 10, 1, 43, 462, DateTimeKind.Utc).AddTicks(4275),
                            IsDeleted = false,
                            Year = "First Year"
                        },
                        new
                        {
                            Id = new Guid("aac2dcbf-776c-438c-ac97-bda862a308a6"),
                            CreatedAt = new DateTime(2024, 7, 15, 10, 1, 43, 462, DateTimeKind.Utc).AddTicks(4280),
                            IsDeleted = false,
                            Year = "Second Year"
                        });
                });

            modelBuilder.Entity("Domain.Filiere", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FiliereName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Filieres");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9f25c450-8192-411a-b0ef-156697fd0613"),
                            CreatedAt = new DateTime(2024, 7, 15, 10, 1, 43, 462, DateTimeKind.Utc).AddTicks(4302),
                            FiliereName = "Computer Science",
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("bbb00a0e-fb4e-4c2c-9e37-b76c460a7ce5"),
                            CreatedAt = new DateTime(2024, 7, 15, 10, 1, 43, 462, DateTimeKind.Utc).AddTicks(4303),
                            FiliereName = "Mechanical Engineering",
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("Domain.UnitOfFormation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("UnitsOfFormation");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2811585a-5a41-4f3d-b447-ab9b3355b92f"),
                            CreatedAt = new DateTime(2024, 7, 15, 10, 1, 43, 462, DateTimeKind.Utc).AddTicks(4325),
                            IsDeleted = false,
                            UnitName = "Programming 101"
                        },
                        new
                        {
                            Id = new Guid("d9f02132-e313-46fe-9015-a8d14815d602"),
                            CreatedAt = new DateTime(2024, 7, 15, 10, 1, 43, 462, DateTimeKind.Utc).AddTicks(4327),
                            IsDeleted = false,
                            UnitName = "Thermodynamics"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Exam", b =>
                {
                    b.HasOne("Domain.Filiere", "Filiere")
                        .WithMany("Exams")
                        .HasForeignKey("FiliereId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Domain.Entities.Room", "Room")
                        .WithMany("Exams")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Domain.Entities.Semester", "Semester")
                        .WithMany("Exams")
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Domain.Entities.Supervisor", "Supervisor")
                        .WithMany("Exams")
                        .HasForeignKey("SupervisorId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Domain.UnitOfFormation", "UnitOfFormation")
                        .WithMany("Exams")
                        .HasForeignKey("UnitOfFormationId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Domain.Entities.Year", "Year")
                        .WithMany("Exams")
                        .HasForeignKey("YearId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Domain.Entities.YearOfStudy", "YearOfStudy")
                        .WithMany("Exams")
                        .HasForeignKey("YearOfStudyId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Filiere");

                    b.Navigation("Room");

                    b.Navigation("Semester");

                    b.Navigation("Supervisor");

                    b.Navigation("UnitOfFormation");

                    b.Navigation("Year");

                    b.Navigation("YearOfStudy");
                });

            modelBuilder.Entity("Domain.Entities.Room", b =>
                {
                    b.Navigation("Exams");
                });

            modelBuilder.Entity("Domain.Entities.Semester", b =>
                {
                    b.Navigation("Exams");
                });

            modelBuilder.Entity("Domain.Entities.Supervisor", b =>
                {
                    b.Navigation("Exams");
                });

            modelBuilder.Entity("Domain.Entities.Year", b =>
                {
                    b.Navigation("Exams");
                });

            modelBuilder.Entity("Domain.Entities.YearOfStudy", b =>
                {
                    b.Navigation("Exams");
                });

            modelBuilder.Entity("Domain.Filiere", b =>
                {
                    b.Navigation("Exams");
                });

            modelBuilder.Entity("Domain.UnitOfFormation", b =>
                {
                    b.Navigation("Exams");
                });
#pragma warning restore 612, 618
        }
    }
}
