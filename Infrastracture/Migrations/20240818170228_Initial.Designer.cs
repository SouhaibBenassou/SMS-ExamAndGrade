// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastracture.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240818170228_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.AllResults", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ExamResultId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TestResultsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ExamResultId");

                    b.HasIndex("TestResultsId");

                    b.ToTable("AllResults");
                });

            modelBuilder.Entity("Domain.Entities.Exam", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Duration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExamDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ExamType")
                        .HasColumnType("int");

                    b.Property<Guid?>("FiliereId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UnitOfFormationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("YearId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("YearType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FiliereId");

                    b.HasIndex("UnitOfFormationId");

                    b.ToTable("Exams");
                });

            modelBuilder.Entity("Domain.Entities.ExamAttendance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("Attendance")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ExamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("StagiaireId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ExamId");

                    b.ToTable("ExamAttendances");
                });

            modelBuilder.Entity("Domain.Entities.ExamSession", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ExamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("SupervisorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ExamId")
                        .IsUnique();

                    b.HasIndex("RoomId");

                    b.HasIndex("SupervisorId");

                    b.ToTable("ExamSessions");
                });

            modelBuilder.Entity("Domain.Entities.IndividualWork", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IndividualWorkUOFId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Note")
                        .HasColumnType("int");

                    b.Property<Guid>("StagiaireId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IndividualWorkUOFId");

                    b.ToTable("IndividualWorks");
                });

            modelBuilder.Entity("Domain.Entities.IndividualWorkUOF", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Confusion")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("IndividualWorkUOFs");
                });

            modelBuilder.Entity("Domain.Entities.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoomType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("Domain.Entities.Supervisor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Supervisors");
                });

            modelBuilder.Entity("Domain.Entities.TestResult", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("DateValidation")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsValid")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Note")
                        .HasColumnType("float");

                    b.Property<Guid?>("StagiaireId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TestId");

                    b.ToTable("TestResults");
                });

            modelBuilder.Entity("Domain.Entities.VariantsExams", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExamCorrection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ExamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ExamStatement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsValid")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NoteMax")
                        .HasColumnType("int");

                    b.Property<Guid?>("TrainerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UnitOfFormationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("VariantName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VariantType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExamId");

                    b.HasIndex("UnitOfFormationId");

                    b.ToTable("VariantsExams");
                });

            modelBuilder.Entity("Domain.EntitiesFromOtherServices.FiliereService.Filiere", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Capacite")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duree")
                        .HasColumnType("int");

                    b.Property<decimal>("FraisInscription")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("GroupCapacity")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MontantAnnuel")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontantMensuel")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontantTrimestre")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Niveau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomFiliere")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Filieres");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c4677026-cb1e-4741-9685-0f56b9758e65"),
                            Capacite = 50,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8347),
                            Description = "Description for Computer Science",
                            Duree = 2,
                            FraisInscription = 3000m,
                            GroupCapacity = 10,
                            IsDeleted = false,
                            MontantAnnuel = 12000m,
                            MontantMensuel = 1000m,
                            MontantTrimestre = 3000m,
                            Niveau = "Master",
                            NomFiliere = "Computer Science"
                        },
                        new
                        {
                            Id = new Guid("21aef537-d19e-48bf-a523-23db8e193522"),
                            Capacite = 55,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8492),
                            Description = "Description for Electrical Engineering",
                            Duree = 3,
                            FraisInscription = 3200m,
                            GroupCapacity = 12,
                            IsDeleted = false,
                            MontantAnnuel = 13000m,
                            MontantMensuel = 1100m,
                            MontantTrimestre = 3250m,
                            Niveau = "Bachelor",
                            NomFiliere = "Electrical Engineering"
                        },
                        new
                        {
                            Id = new Guid("ed9a86d0-0ff8-4585-b8a9-2852465959c2"),
                            Capacite = 60,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8605),
                            Description = "Description for Mechanical Engineering",
                            Duree = 4,
                            FraisInscription = 3400m,
                            GroupCapacity = 14,
                            IsDeleted = false,
                            MontantAnnuel = 14000m,
                            MontantMensuel = 1200m,
                            MontantTrimestre = 3500m,
                            Niveau = "Master",
                            NomFiliere = "Mechanical Engineering"
                        },
                        new
                        {
                            Id = new Guid("fc17e25e-7453-4924-a4ca-2c036306622b"),
                            Capacite = 65,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8678),
                            Description = "Description for Civil Engineering",
                            Duree = 5,
                            FraisInscription = 3600m,
                            GroupCapacity = 16,
                            IsDeleted = false,
                            MontantAnnuel = 15000m,
                            MontantMensuel = 1300m,
                            MontantTrimestre = 3750m,
                            Niveau = "Bachelor",
                            NomFiliere = "Civil Engineering"
                        },
                        new
                        {
                            Id = new Guid("a82c929f-5567-4248-b31b-3dac539c18c6"),
                            Capacite = 70,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8753),
                            Description = "Description for Chemical Engineering",
                            Duree = 2,
                            FraisInscription = 3800m,
                            GroupCapacity = 18,
                            IsDeleted = false,
                            MontantAnnuel = 16000m,
                            MontantMensuel = 1400m,
                            MontantTrimestre = 4000m,
                            Niveau = "Master",
                            NomFiliere = "Chemical Engineering"
                        },
                        new
                        {
                            Id = new Guid("bce4bd92-9359-4303-b629-513e17ccf10f"),
                            Capacite = 75,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8862),
                            Description = "Description for Biotechnology",
                            Duree = 3,
                            FraisInscription = 4000m,
                            GroupCapacity = 20,
                            IsDeleted = false,
                            MontantAnnuel = 17000m,
                            MontantMensuel = 1500m,
                            MontantTrimestre = 4250m,
                            Niveau = "Bachelor",
                            NomFiliere = "Biotechnology"
                        },
                        new
                        {
                            Id = new Guid("c42fa17d-e149-46a6-b2ae-53e972da0585"),
                            Capacite = 80,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8933),
                            Description = "Description for Mathematics",
                            Duree = 4,
                            FraisInscription = 4200m,
                            GroupCapacity = 22,
                            IsDeleted = false,
                            MontantAnnuel = 18000m,
                            MontantMensuel = 1600m,
                            MontantTrimestre = 4500m,
                            Niveau = "Master",
                            NomFiliere = "Mathematics"
                        },
                        new
                        {
                            Id = new Guid("310b5fae-6446-4590-b08f-55047f4a78e9"),
                            Capacite = 85,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(9015),
                            Description = "Description for Physics",
                            Duree = 5,
                            FraisInscription = 4400m,
                            GroupCapacity = 24,
                            IsDeleted = false,
                            MontantAnnuel = 19000m,
                            MontantMensuel = 1700m,
                            MontantTrimestre = 4750m,
                            Niveau = "Bachelor",
                            NomFiliere = "Physics"
                        },
                        new
                        {
                            Id = new Guid("1c75a28a-7091-42d4-8a13-5b37515d7a4a"),
                            Capacite = 90,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(9132),
                            Description = "Description for Chemistry",
                            Duree = 2,
                            FraisInscription = 4600m,
                            GroupCapacity = 26,
                            IsDeleted = false,
                            MontantAnnuel = 20000m,
                            MontantMensuel = 1800m,
                            MontantTrimestre = 5000m,
                            Niveau = "Master",
                            NomFiliere = "Chemistry"
                        },
                        new
                        {
                            Id = new Guid("48bc9d15-e2bc-4741-97af-621693a1ebb5"),
                            Capacite = 95,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(9215),
                            Description = "Description for Biology",
                            Duree = 3,
                            FraisInscription = 4800m,
                            GroupCapacity = 28,
                            IsDeleted = false,
                            MontantAnnuel = 21000m,
                            MontantMensuel = 1900m,
                            MontantTrimestre = 5250m,
                            Niveau = "Bachelor",
                            NomFiliere = "Biology"
                        },
                        new
                        {
                            Id = new Guid("e817e565-faad-42b8-9dca-70e03d67bdfd"),
                            Capacite = 100,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(9274),
                            Description = "Description for Environmental Science",
                            Duree = 4,
                            FraisInscription = 5000m,
                            GroupCapacity = 30,
                            IsDeleted = false,
                            MontantAnnuel = 22000m,
                            MontantMensuel = 2000m,
                            MontantTrimestre = 5500m,
                            Niveau = "Master",
                            NomFiliere = "Environmental Science"
                        },
                        new
                        {
                            Id = new Guid("c1c6fbc9-2fde-4c9e-b6cf-78a06f299de7"),
                            Capacite = 105,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(9351),
                            Description = "Description for Economics",
                            Duree = 5,
                            FraisInscription = 5200m,
                            GroupCapacity = 32,
                            IsDeleted = false,
                            MontantAnnuel = 23000m,
                            MontantMensuel = 2100m,
                            MontantTrimestre = 5750m,
                            Niveau = "Bachelor",
                            NomFiliere = "Economics"
                        },
                        new
                        {
                            Id = new Guid("08ce7b0a-5642-4337-80ce-aef919a0b2d9"),
                            Capacite = 110,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(9467),
                            Description = "Description for Psychology",
                            Duree = 2,
                            FraisInscription = 5400m,
                            GroupCapacity = 34,
                            IsDeleted = false,
                            MontantAnnuel = 24000m,
                            MontantMensuel = 2200m,
                            MontantTrimestre = 6000m,
                            Niveau = "Master",
                            NomFiliere = "Psychology"
                        },
                        new
                        {
                            Id = new Guid("16822560-9848-4a88-80f2-bb716ce8c18d"),
                            Capacite = 115,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(9543),
                            Description = "Description for Sociology",
                            Duree = 3,
                            FraisInscription = 5600m,
                            GroupCapacity = 36,
                            IsDeleted = false,
                            MontantAnnuel = 25000m,
                            MontantMensuel = 2300m,
                            MontantTrimestre = 6250m,
                            Niveau = "Bachelor",
                            NomFiliere = "Sociology"
                        },
                        new
                        {
                            Id = new Guid("c094c44b-cac4-4fb9-88e0-c29a43bb7edb"),
                            Capacite = 120,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(9640),
                            Description = "Description for History",
                            Duree = 4,
                            FraisInscription = 5800m,
                            GroupCapacity = 38,
                            IsDeleted = false,
                            MontantAnnuel = 26000m,
                            MontantMensuel = 2400m,
                            MontantTrimestre = 6500m,
                            Niveau = "Master",
                            NomFiliere = "History"
                        },
                        new
                        {
                            Id = new Guid("109d52af-6448-4280-bcb8-c9ed03570c8c"),
                            Capacite = 125,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(9726),
                            Description = "Description for Philosophy",
                            Duree = 5,
                            FraisInscription = 6000m,
                            GroupCapacity = 40,
                            IsDeleted = false,
                            MontantAnnuel = 27000m,
                            MontantMensuel = 2500m,
                            MontantTrimestre = 6750m,
                            Niveau = "Bachelor",
                            NomFiliere = "Philosophy"
                        },
                        new
                        {
                            Id = new Guid("27039911-d1ef-4662-ad01-f5b0260bfa96"),
                            Capacite = 130,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(9798),
                            Description = "Description for Political Science",
                            Duree = 2,
                            FraisInscription = 6200m,
                            GroupCapacity = 42,
                            IsDeleted = false,
                            MontantAnnuel = 28000m,
                            MontantMensuel = 2600m,
                            MontantTrimestre = 7000m,
                            Niveau = "Master",
                            NomFiliere = "Political Science"
                        },
                        new
                        {
                            Id = new Guid("06f1a5e9-8864-40e3-b6d6-f8945f97e205"),
                            Capacite = 135,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(9876),
                            Description = "Description for International Relations",
                            Duree = 3,
                            FraisInscription = 6400m,
                            GroupCapacity = 44,
                            IsDeleted = false,
                            MontantAnnuel = 29000m,
                            MontantMensuel = 2700m,
                            MontantTrimestre = 7250m,
                            Niveau = "Bachelor",
                            NomFiliere = "International Relations"
                        });
                });

            modelBuilder.Entity("Domain.EntitiesFromOtherServices.FiliereService.FiliereUnitOfFormation", b =>
                {
                    b.Property<Guid>("FiliereId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UnitOfFormationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("FiliereId", "UnitOfFormationId");

                    b.HasIndex("UnitOfFormationId");

                    b.ToTable("FiliereUnitOfFormations");

                    b.HasData(
                        new
                        {
                            FiliereId = new Guid("c4677026-cb1e-4741-9685-0f56b9758e65"),
                            UnitOfFormationId = new Guid("eed3160b-c071-4de8-a1be-f8c51a49b990")
                        },
                        new
                        {
                            FiliereId = new Guid("c4677026-cb1e-4741-9685-0f56b9758e65"),
                            UnitOfFormationId = new Guid("b4517ec8-16c1-47a6-9fb0-418de08d2fa8")
                        },
                        new
                        {
                            FiliereId = new Guid("c4677026-cb1e-4741-9685-0f56b9758e65"),
                            UnitOfFormationId = new Guid("1d4672d3-266e-4128-afbf-ef7db1d2d768")
                        },
                        new
                        {
                            FiliereId = new Guid("c4677026-cb1e-4741-9685-0f56b9758e65"),
                            UnitOfFormationId = new Guid("6edd67c4-5aea-49ad-af4e-429cde0a6694")
                        },
                        new
                        {
                            FiliereId = new Guid("c4677026-cb1e-4741-9685-0f56b9758e65"),
                            UnitOfFormationId = new Guid("eba4be51-b10a-4c2f-a37b-114e40428b35")
                        },
                        new
                        {
                            FiliereId = new Guid("21aef537-d19e-48bf-a523-23db8e193522"),
                            UnitOfFormationId = new Guid("02460a52-624a-4d97-8c19-e6b029224044")
                        },
                        new
                        {
                            FiliereId = new Guid("21aef537-d19e-48bf-a523-23db8e193522"),
                            UnitOfFormationId = new Guid("2c53749d-c57f-4aa3-86e5-eb7ccbddbf37")
                        },
                        new
                        {
                            FiliereId = new Guid("21aef537-d19e-48bf-a523-23db8e193522"),
                            UnitOfFormationId = new Guid("b581e7a7-8779-4d59-bfb1-bbf0d0e0a9d3")
                        },
                        new
                        {
                            FiliereId = new Guid("21aef537-d19e-48bf-a523-23db8e193522"),
                            UnitOfFormationId = new Guid("8a31ebae-7b20-42b8-99db-96b9c57433a4")
                        },
                        new
                        {
                            FiliereId = new Guid("21aef537-d19e-48bf-a523-23db8e193522"),
                            UnitOfFormationId = new Guid("a47fe0a8-e83e-4170-9fbd-34977a50b00f")
                        },
                        new
                        {
                            FiliereId = new Guid("ed9a86d0-0ff8-4585-b8a9-2852465959c2"),
                            UnitOfFormationId = new Guid("17f11d00-6a78-4823-96e2-4b775dda89fd")
                        },
                        new
                        {
                            FiliereId = new Guid("ed9a86d0-0ff8-4585-b8a9-2852465959c2"),
                            UnitOfFormationId = new Guid("ba1998ab-f9a9-4e13-a39d-c8d925dace08")
                        },
                        new
                        {
                            FiliereId = new Guid("ed9a86d0-0ff8-4585-b8a9-2852465959c2"),
                            UnitOfFormationId = new Guid("3656ba7a-22d2-49c8-ac85-52620398c521")
                        },
                        new
                        {
                            FiliereId = new Guid("ed9a86d0-0ff8-4585-b8a9-2852465959c2"),
                            UnitOfFormationId = new Guid("159f42b6-5d53-4e17-ab46-035d438ff528")
                        },
                        new
                        {
                            FiliereId = new Guid("ed9a86d0-0ff8-4585-b8a9-2852465959c2"),
                            UnitOfFormationId = new Guid("02460a52-624a-4d97-8c19-e6b029224044")
                        },
                        new
                        {
                            FiliereId = new Guid("fc17e25e-7453-4924-a4ca-2c036306622b"),
                            UnitOfFormationId = new Guid("ce54dc15-b5a7-4f08-b0a0-48efbb7a6d69")
                        },
                        new
                        {
                            FiliereId = new Guid("fc17e25e-7453-4924-a4ca-2c036306622b"),
                            UnitOfFormationId = new Guid("fa1a1430-e11a-460c-94fc-d64219babc3f")
                        },
                        new
                        {
                            FiliereId = new Guid("fc17e25e-7453-4924-a4ca-2c036306622b"),
                            UnitOfFormationId = new Guid("2097b01b-88b1-417b-8f5f-65e44621c19f")
                        },
                        new
                        {
                            FiliereId = new Guid("fc17e25e-7453-4924-a4ca-2c036306622b"),
                            UnitOfFormationId = new Guid("a2b5749b-ae6d-4916-a5d7-66d39b1a5fab")
                        },
                        new
                        {
                            FiliereId = new Guid("fc17e25e-7453-4924-a4ca-2c036306622b"),
                            UnitOfFormationId = new Guid("9b47dea2-98d6-4528-9349-1cac8f7d8bc7")
                        },
                        new
                        {
                            FiliereId = new Guid("a82c929f-5567-4248-b31b-3dac539c18c6"),
                            UnitOfFormationId = new Guid("1d4672d3-266e-4128-afbf-ef7db1d2d768")
                        },
                        new
                        {
                            FiliereId = new Guid("a82c929f-5567-4248-b31b-3dac539c18c6"),
                            UnitOfFormationId = new Guid("17f11d00-6a78-4823-96e2-4b775dda89fd")
                        },
                        new
                        {
                            FiliereId = new Guid("a82c929f-5567-4248-b31b-3dac539c18c6"),
                            UnitOfFormationId = new Guid("b4517ec8-16c1-47a6-9fb0-418de08d2fa8")
                        },
                        new
                        {
                            FiliereId = new Guid("a82c929f-5567-4248-b31b-3dac539c18c6"),
                            UnitOfFormationId = new Guid("f3ff0e95-18fb-4417-8771-cb98685d272b")
                        },
                        new
                        {
                            FiliereId = new Guid("a82c929f-5567-4248-b31b-3dac539c18c6"),
                            UnitOfFormationId = new Guid("eed3160b-c071-4de8-a1be-f8c51a49b990")
                        },
                        new
                        {
                            FiliereId = new Guid("bce4bd92-9359-4303-b629-513e17ccf10f"),
                            UnitOfFormationId = new Guid("42ff9ab6-5582-4f31-abb5-859efe27702f")
                        },
                        new
                        {
                            FiliereId = new Guid("bce4bd92-9359-4303-b629-513e17ccf10f"),
                            UnitOfFormationId = new Guid("aacbf1c3-ea65-4792-8779-89d7c5bfb799")
                        },
                        new
                        {
                            FiliereId = new Guid("bce4bd92-9359-4303-b629-513e17ccf10f"),
                            UnitOfFormationId = new Guid("25314fd0-5139-4c2d-a26a-eeb92f0394da")
                        },
                        new
                        {
                            FiliereId = new Guid("bce4bd92-9359-4303-b629-513e17ccf10f"),
                            UnitOfFormationId = new Guid("cafc7c2d-fa6c-41fa-86a4-710c85d95359")
                        },
                        new
                        {
                            FiliereId = new Guid("bce4bd92-9359-4303-b629-513e17ccf10f"),
                            UnitOfFormationId = new Guid("2e649385-a712-40b9-a796-61b3dddb4718")
                        },
                        new
                        {
                            FiliereId = new Guid("c42fa17d-e149-46a6-b2ae-53e972da0585"),
                            UnitOfFormationId = new Guid("506b0193-f003-41fa-b980-4a410416320b")
                        },
                        new
                        {
                            FiliereId = new Guid("c42fa17d-e149-46a6-b2ae-53e972da0585"),
                            UnitOfFormationId = new Guid("39ddf2b8-c2ac-4f3e-954d-227e8ae86cdc")
                        },
                        new
                        {
                            FiliereId = new Guid("c42fa17d-e149-46a6-b2ae-53e972da0585"),
                            UnitOfFormationId = new Guid("ce54dc15-b5a7-4f08-b0a0-48efbb7a6d69")
                        },
                        new
                        {
                            FiliereId = new Guid("c42fa17d-e149-46a6-b2ae-53e972da0585"),
                            UnitOfFormationId = new Guid("fa1a1430-e11a-460c-94fc-d64219babc3f")
                        },
                        new
                        {
                            FiliereId = new Guid("c42fa17d-e149-46a6-b2ae-53e972da0585"),
                            UnitOfFormationId = new Guid("46ba8658-e724-459d-b470-857289287451")
                        },
                        new
                        {
                            FiliereId = new Guid("310b5fae-6446-4590-b08f-55047f4a78e9"),
                            UnitOfFormationId = new Guid("573ae136-2718-478b-8ef7-0e8db2d20a92")
                        },
                        new
                        {
                            FiliereId = new Guid("310b5fae-6446-4590-b08f-55047f4a78e9"),
                            UnitOfFormationId = new Guid("ce54dc15-b5a7-4f08-b0a0-48efbb7a6d69")
                        },
                        new
                        {
                            FiliereId = new Guid("310b5fae-6446-4590-b08f-55047f4a78e9"),
                            UnitOfFormationId = new Guid("ad4d428d-3b45-4d7c-baca-a7a6b6f8239e")
                        },
                        new
                        {
                            FiliereId = new Guid("310b5fae-6446-4590-b08f-55047f4a78e9"),
                            UnitOfFormationId = new Guid("13b9801a-4692-47ad-9098-acdd865de53d")
                        },
                        new
                        {
                            FiliereId = new Guid("310b5fae-6446-4590-b08f-55047f4a78e9"),
                            UnitOfFormationId = new Guid("1d4672d3-266e-4128-afbf-ef7db1d2d768")
                        },
                        new
                        {
                            FiliereId = new Guid("1c75a28a-7091-42d4-8a13-5b37515d7a4a"),
                            UnitOfFormationId = new Guid("3656ba7a-22d2-49c8-ac85-52620398c521")
                        },
                        new
                        {
                            FiliereId = new Guid("1c75a28a-7091-42d4-8a13-5b37515d7a4a"),
                            UnitOfFormationId = new Guid("25314fd0-5139-4c2d-a26a-eeb92f0394da")
                        },
                        new
                        {
                            FiliereId = new Guid("1c75a28a-7091-42d4-8a13-5b37515d7a4a"),
                            UnitOfFormationId = new Guid("c474807b-d826-4f0a-b614-1a21d27a1969")
                        },
                        new
                        {
                            FiliereId = new Guid("1c75a28a-7091-42d4-8a13-5b37515d7a4a"),
                            UnitOfFormationId = new Guid("35f2d025-9f4c-4df7-83d7-ee9fd383bcab")
                        },
                        new
                        {
                            FiliereId = new Guid("1c75a28a-7091-42d4-8a13-5b37515d7a4a"),
                            UnitOfFormationId = new Guid("b3946977-e8e7-49c1-a79a-ee84afe0ae72")
                        },
                        new
                        {
                            FiliereId = new Guid("48bc9d15-e2bc-4741-97af-621693a1ebb5"),
                            UnitOfFormationId = new Guid("2097b01b-88b1-417b-8f5f-65e44621c19f")
                        },
                        new
                        {
                            FiliereId = new Guid("48bc9d15-e2bc-4741-97af-621693a1ebb5"),
                            UnitOfFormationId = new Guid("6edd67c4-5aea-49ad-af4e-429cde0a6694")
                        },
                        new
                        {
                            FiliereId = new Guid("48bc9d15-e2bc-4741-97af-621693a1ebb5"),
                            UnitOfFormationId = new Guid("fb506553-5c27-46a2-970f-932d56f5fba1")
                        },
                        new
                        {
                            FiliereId = new Guid("48bc9d15-e2bc-4741-97af-621693a1ebb5"),
                            UnitOfFormationId = new Guid("b581e7a7-8779-4d59-bfb1-bbf0d0e0a9d3")
                        },
                        new
                        {
                            FiliereId = new Guid("48bc9d15-e2bc-4741-97af-621693a1ebb5"),
                            UnitOfFormationId = new Guid("17f11d00-6a78-4823-96e2-4b775dda89fd")
                        },
                        new
                        {
                            FiliereId = new Guid("e817e565-faad-42b8-9dca-70e03d67bdfd"),
                            UnitOfFormationId = new Guid("159f42b6-5d53-4e17-ab46-035d438ff528")
                        },
                        new
                        {
                            FiliereId = new Guid("e817e565-faad-42b8-9dca-70e03d67bdfd"),
                            UnitOfFormationId = new Guid("b581e7a7-8779-4d59-bfb1-bbf0d0e0a9d3")
                        },
                        new
                        {
                            FiliereId = new Guid("e817e565-faad-42b8-9dca-70e03d67bdfd"),
                            UnitOfFormationId = new Guid("b3946977-e8e7-49c1-a79a-ee84afe0ae72")
                        },
                        new
                        {
                            FiliereId = new Guid("e817e565-faad-42b8-9dca-70e03d67bdfd"),
                            UnitOfFormationId = new Guid("39fa0a0c-55b5-4870-820f-369336293ea4")
                        },
                        new
                        {
                            FiliereId = new Guid("e817e565-faad-42b8-9dca-70e03d67bdfd"),
                            UnitOfFormationId = new Guid("cafc7c2d-fa6c-41fa-86a4-710c85d95359")
                        },
                        new
                        {
                            FiliereId = new Guid("c1c6fbc9-2fde-4c9e-b6cf-78a06f299de7"),
                            UnitOfFormationId = new Guid("35f2d025-9f4c-4df7-83d7-ee9fd383bcab")
                        },
                        new
                        {
                            FiliereId = new Guid("c1c6fbc9-2fde-4c9e-b6cf-78a06f299de7"),
                            UnitOfFormationId = new Guid("6edd67c4-5aea-49ad-af4e-429cde0a6694")
                        },
                        new
                        {
                            FiliereId = new Guid("c1c6fbc9-2fde-4c9e-b6cf-78a06f299de7"),
                            UnitOfFormationId = new Guid("c474807b-d826-4f0a-b614-1a21d27a1969")
                        },
                        new
                        {
                            FiliereId = new Guid("c1c6fbc9-2fde-4c9e-b6cf-78a06f299de7"),
                            UnitOfFormationId = new Guid("a47fe0a8-e83e-4170-9fbd-34977a50b00f")
                        },
                        new
                        {
                            FiliereId = new Guid("c1c6fbc9-2fde-4c9e-b6cf-78a06f299de7"),
                            UnitOfFormationId = new Guid("159f42b6-5d53-4e17-ab46-035d438ff528")
                        },
                        new
                        {
                            FiliereId = new Guid("08ce7b0a-5642-4337-80ce-aef919a0b2d9"),
                            UnitOfFormationId = new Guid("b58180cb-eaa3-4d99-ad89-6f7ff3d48fba")
                        },
                        new
                        {
                            FiliereId = new Guid("08ce7b0a-5642-4337-80ce-aef919a0b2d9"),
                            UnitOfFormationId = new Guid("ba1998ab-f9a9-4e13-a39d-c8d925dace08")
                        },
                        new
                        {
                            FiliereId = new Guid("08ce7b0a-5642-4337-80ce-aef919a0b2d9"),
                            UnitOfFormationId = new Guid("159f42b6-5d53-4e17-ab46-035d438ff528")
                        },
                        new
                        {
                            FiliereId = new Guid("08ce7b0a-5642-4337-80ce-aef919a0b2d9"),
                            UnitOfFormationId = new Guid("3656ba7a-22d2-49c8-ac85-52620398c521")
                        },
                        new
                        {
                            FiliereId = new Guid("08ce7b0a-5642-4337-80ce-aef919a0b2d9"),
                            UnitOfFormationId = new Guid("a47fe0a8-e83e-4170-9fbd-34977a50b00f")
                        },
                        new
                        {
                            FiliereId = new Guid("16822560-9848-4a88-80f2-bb716ce8c18d"),
                            UnitOfFormationId = new Guid("ce54dc15-b5a7-4f08-b0a0-48efbb7a6d69")
                        },
                        new
                        {
                            FiliereId = new Guid("16822560-9848-4a88-80f2-bb716ce8c18d"),
                            UnitOfFormationId = new Guid("46ba8658-e724-459d-b470-857289287451")
                        },
                        new
                        {
                            FiliereId = new Guid("16822560-9848-4a88-80f2-bb716ce8c18d"),
                            UnitOfFormationId = new Guid("34395123-6532-464b-ac54-f70c286e75e1")
                        },
                        new
                        {
                            FiliereId = new Guid("16822560-9848-4a88-80f2-bb716ce8c18d"),
                            UnitOfFormationId = new Guid("89cf38a6-2383-4ca6-a3d6-df75e587722c")
                        },
                        new
                        {
                            FiliereId = new Guid("16822560-9848-4a88-80f2-bb716ce8c18d"),
                            UnitOfFormationId = new Guid("573ae136-2718-478b-8ef7-0e8db2d20a92")
                        },
                        new
                        {
                            FiliereId = new Guid("c094c44b-cac4-4fb9-88e0-c29a43bb7edb"),
                            UnitOfFormationId = new Guid("ad4d428d-3b45-4d7c-baca-a7a6b6f8239e")
                        },
                        new
                        {
                            FiliereId = new Guid("c094c44b-cac4-4fb9-88e0-c29a43bb7edb"),
                            UnitOfFormationId = new Guid("6b6bd415-0217-4286-a88f-5ba5dbd88c91")
                        },
                        new
                        {
                            FiliereId = new Guid("c094c44b-cac4-4fb9-88e0-c29a43bb7edb"),
                            UnitOfFormationId = new Guid("aacbf1c3-ea65-4792-8779-89d7c5bfb799")
                        },
                        new
                        {
                            FiliereId = new Guid("c094c44b-cac4-4fb9-88e0-c29a43bb7edb"),
                            UnitOfFormationId = new Guid("cafc7c2d-fa6c-41fa-86a4-710c85d95359")
                        },
                        new
                        {
                            FiliereId = new Guid("c094c44b-cac4-4fb9-88e0-c29a43bb7edb"),
                            UnitOfFormationId = new Guid("de4f3b7a-4a99-4881-aa82-638a096059b5")
                        },
                        new
                        {
                            FiliereId = new Guid("109d52af-6448-4280-bcb8-c9ed03570c8c"),
                            UnitOfFormationId = new Guid("b58180cb-eaa3-4d99-ad89-6f7ff3d48fba")
                        },
                        new
                        {
                            FiliereId = new Guid("109d52af-6448-4280-bcb8-c9ed03570c8c"),
                            UnitOfFormationId = new Guid("ce54dc15-b5a7-4f08-b0a0-48efbb7a6d69")
                        },
                        new
                        {
                            FiliereId = new Guid("109d52af-6448-4280-bcb8-c9ed03570c8c"),
                            UnitOfFormationId = new Guid("03e7f340-7554-43df-bfd4-aee9f88303e1")
                        },
                        new
                        {
                            FiliereId = new Guid("109d52af-6448-4280-bcb8-c9ed03570c8c"),
                            UnitOfFormationId = new Guid("25314fd0-5139-4c2d-a26a-eeb92f0394da")
                        },
                        new
                        {
                            FiliereId = new Guid("109d52af-6448-4280-bcb8-c9ed03570c8c"),
                            UnitOfFormationId = new Guid("6b6bd415-0217-4286-a88f-5ba5dbd88c91")
                        },
                        new
                        {
                            FiliereId = new Guid("27039911-d1ef-4662-ad01-f5b0260bfa96"),
                            UnitOfFormationId = new Guid("c474807b-d826-4f0a-b614-1a21d27a1969")
                        },
                        new
                        {
                            FiliereId = new Guid("27039911-d1ef-4662-ad01-f5b0260bfa96"),
                            UnitOfFormationId = new Guid("46ba8658-e724-459d-b470-857289287451")
                        },
                        new
                        {
                            FiliereId = new Guid("27039911-d1ef-4662-ad01-f5b0260bfa96"),
                            UnitOfFormationId = new Guid("fb506553-5c27-46a2-970f-932d56f5fba1")
                        },
                        new
                        {
                            FiliereId = new Guid("27039911-d1ef-4662-ad01-f5b0260bfa96"),
                            UnitOfFormationId = new Guid("a47fe0a8-e83e-4170-9fbd-34977a50b00f")
                        },
                        new
                        {
                            FiliereId = new Guid("27039911-d1ef-4662-ad01-f5b0260bfa96"),
                            UnitOfFormationId = new Guid("39fa0a0c-55b5-4870-820f-369336293ea4")
                        },
                        new
                        {
                            FiliereId = new Guid("06f1a5e9-8864-40e3-b6d6-f8945f97e205"),
                            UnitOfFormationId = new Guid("cafc7c2d-fa6c-41fa-86a4-710c85d95359")
                        },
                        new
                        {
                            FiliereId = new Guid("06f1a5e9-8864-40e3-b6d6-f8945f97e205"),
                            UnitOfFormationId = new Guid("ba1998ab-f9a9-4e13-a39d-c8d925dace08")
                        },
                        new
                        {
                            FiliereId = new Guid("06f1a5e9-8864-40e3-b6d6-f8945f97e205"),
                            UnitOfFormationId = new Guid("89cf38a6-2383-4ca6-a3d6-df75e587722c")
                        },
                        new
                        {
                            FiliereId = new Guid("06f1a5e9-8864-40e3-b6d6-f8945f97e205"),
                            UnitOfFormationId = new Guid("2c53749d-c57f-4aa3-86e5-eb7ccbddbf37")
                        },
                        new
                        {
                            FiliereId = new Guid("06f1a5e9-8864-40e3-b6d6-f8945f97e205"),
                            UnitOfFormationId = new Guid("b3946977-e8e7-49c1-a79a-ee84afe0ae72")
                        });
                });

            modelBuilder.Entity("Domain.EntitiesFromOtherServices.FiliereService.Formateur", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specialisation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Statut")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Formateurs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a1b2c3d4-e5f6-7a8b-9c0d-ef1234567890"),
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8171),
                            Email = "mehdi.bennani@example.com",
                            IsDeleted = false,
                            Nom = "Bennani",
                            Prenom = "Mehdi",
                            Specialisation = "Intelligence Artificielle",
                            Statut = "Actif",
                            Telephone = "0600123456",
                            Type = "Permanent"
                        },
                        new
                        {
                            Id = new Guid("b1c2d3e4-f5a6-7b8c-9d0e-ef0987654321"),
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8178),
                            Email = "yassine.elamrani@example.com",
                            IsDeleted = false,
                            Nom = "El Amrani",
                            Prenom = "Yassine",
                            Specialisation = "Développement Web",
                            Statut = "Actif",
                            Telephone = "0600654321",
                            Type = "Contractuel"
                        },
                        new
                        {
                            Id = new Guid("c1d2e3f4-a5b6-7c8d-9e0f-ef1234987654"),
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8180),
                            Email = "nadia.kabbaj@example.com",
                            IsDeleted = false,
                            Nom = "Kabbaj",
                            Prenom = "Nadia",
                            Specialisation = "Big Data",
                            Statut = "Actif",
                            Telephone = "0700123456",
                            Type = "Permanent"
                        },
                        new
                        {
                            Id = new Guid("d1e2f3a4-b5c6-7d8e-9f0a-ef6543210987"),
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8183),
                            Email = "karim.alami@example.com",
                            IsDeleted = false,
                            Nom = "Alami",
                            Prenom = "Karim",
                            Specialisation = "Sécurité Informatique",
                            Statut = "Inactif",
                            Telephone = "0700654321",
                            Type = "Vacataire"
                        },
                        new
                        {
                            Id = new Guid("e1f2a3b4-c5d6-7e8f-9a0b-ef5678901234"),
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8202),
                            Email = "amina.fassi@example.com",
                            IsDeleted = false,
                            Nom = "Fassi",
                            Prenom = "Amina",
                            Specialisation = "Gestion de Projet",
                            Statut = "Actif",
                            Telephone = "0800123456",
                            Type = "Permanent"
                        });
                });

            modelBuilder.Entity("Domain.EntitiesFromOtherServices.FiliereService.UnitOfFormation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Coefficient")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Semestre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("UnitOfFormations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fb506553-5c27-46a2-970f-932d56f5fba1"),
                            Coefficient = 2,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8207),
                            Duration = 45,
                            IsDeleted = false,
                            Name = "Français",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("a47fe0a8-e83e-4170-9fbd-34977a50b00f"),
                            Coefficient = 3,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8212),
                            Duration = 46,
                            IsDeleted = false,
                            Name = "English",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("eed3160b-c071-4de8-a1be-f8c51a49b990"),
                            Coefficient = 4,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8214),
                            Duration = 47,
                            IsDeleted = false,
                            Name = "Math",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("b4517ec8-16c1-47a6-9fb0-418de08d2fa8"),
                            Coefficient = 5,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8215),
                            Duration = 48,
                            IsDeleted = false,
                            Name = "History",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("ba1998ab-f9a9-4e13-a39d-c8d925dace08"),
                            Coefficient = 6,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8220),
                            Duration = 49,
                            IsDeleted = false,
                            Name = "Geography",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("2097b01b-88b1-417b-8f5f-65e44621c19f"),
                            Coefficient = 2,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8222),
                            Duration = 50,
                            IsDeleted = false,
                            Name = "Biology",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("4233664a-6d06-45c7-ad6f-953d1091422f"),
                            Coefficient = 3,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8224),
                            Duration = 51,
                            IsDeleted = false,
                            Name = "Chemistry",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("02460a52-624a-4d97-8c19-e6b029224044"),
                            Coefficient = 4,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8225),
                            Duration = 52,
                            IsDeleted = false,
                            Name = "Physics",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("6edd67c4-5aea-49ad-af4e-429cde0a6694"),
                            Coefficient = 5,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8229),
                            Duration = 53,
                            IsDeleted = false,
                            Name = "Computer Science",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("8a31ebae-7b20-42b8-99db-96b9c57433a4"),
                            Coefficient = 6,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8231),
                            Duration = 54,
                            IsDeleted = false,
                            Name = "Art",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("f3ff0e95-18fb-4417-8771-cb98685d272b"),
                            Coefficient = 2,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8233),
                            Duration = 45,
                            IsDeleted = false,
                            Name = "Music",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("ad4d428d-3b45-4d7c-baca-a7a6b6f8239e"),
                            Coefficient = 3,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8235),
                            Duration = 46,
                            IsDeleted = false,
                            Name = "Physical Education",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("3656ba7a-22d2-49c8-ac85-52620398c521"),
                            Coefficient = 4,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8238),
                            Duration = 47,
                            IsDeleted = false,
                            Name = "Economics",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("aacbf1c3-ea65-4792-8779-89d7c5bfb799"),
                            Coefficient = 5,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8239),
                            Duration = 48,
                            IsDeleted = false,
                            Name = "Psychology",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("fa1a1430-e11a-460c-94fc-d64219babc3f"),
                            Coefficient = 6,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8241),
                            Duration = 49,
                            IsDeleted = false,
                            Name = "Philosophy",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("89cf38a6-2383-4ca6-a3d6-df75e587722c"),
                            Coefficient = 2,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8242),
                            Duration = 50,
                            IsDeleted = false,
                            Name = "Sociology",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("828257db-6aa0-4bfa-aab7-f1c92b736924"),
                            Coefficient = 3,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8245),
                            Duration = 51,
                            IsDeleted = false,
                            Name = "Political Science",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("03e7f340-7554-43df-bfd4-aee9f88303e1"),
                            Coefficient = 4,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8248),
                            Duration = 52,
                            IsDeleted = false,
                            Name = "Statistics",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("b58180cb-eaa3-4d99-ad89-6f7ff3d48fba"),
                            Coefficient = 5,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8249),
                            Duration = 53,
                            IsDeleted = false,
                            Name = "Engineering",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("de4f3b7a-4a99-4881-aa82-638a096059b5"),
                            Coefficient = 6,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8251),
                            Duration = 54,
                            IsDeleted = false,
                            Name = "Literature",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("13b9801a-4692-47ad-9098-acdd865de53d"),
                            Coefficient = 2,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8254),
                            Duration = 45,
                            IsDeleted = false,
                            Name = "Spanish",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("a2b5749b-ae6d-4916-a5d7-66d39b1a5fab"),
                            Coefficient = 3,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8256),
                            Duration = 46,
                            IsDeleted = false,
                            Name = "German",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("2c53749d-c57f-4aa3-86e5-eb7ccbddbf37"),
                            Coefficient = 4,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8257),
                            Duration = 47,
                            IsDeleted = false,
                            Name = "Italian",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("c474807b-d826-4f0a-b614-1a21d27a1969"),
                            Coefficient = 5,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8259),
                            Duration = 48,
                            IsDeleted = false,
                            Name = "Chinese",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("14651434-068f-4188-aca9-75ce57bd9098"),
                            Coefficient = 6,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8262),
                            Duration = 49,
                            IsDeleted = false,
                            Name = "Japanese",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("a2210d55-634d-41bf-8096-8d1e74a7dd55"),
                            Coefficient = 2,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8263),
                            Duration = 50,
                            IsDeleted = false,
                            Name = "Arabic",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("17f11d00-6a78-4823-96e2-4b775dda89fd"),
                            Coefficient = 3,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8265),
                            Duration = 51,
                            IsDeleted = false,
                            Name = "Latin",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("506b0193-f003-41fa-b980-4a410416320b"),
                            Coefficient = 4,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8266),
                            Duration = 52,
                            IsDeleted = false,
                            Name = "Greek",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("81e448c2-06ef-41d2-8c39-987cae266b70"),
                            Coefficient = 5,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8269),
                            Duration = 53,
                            IsDeleted = false,
                            Name = "Religion",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("cafc7c2d-fa6c-41fa-86a4-710c85d95359"),
                            Coefficient = 6,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8301),
                            Duration = 54,
                            IsDeleted = false,
                            Name = "Astronomy",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("b581e7a7-8779-4d59-bfb1-bbf0d0e0a9d3"),
                            Coefficient = 2,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8303),
                            Duration = 45,
                            IsDeleted = false,
                            Name = "Environmental Science",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("4e3ca126-3306-4b0a-b59f-615ffe3107aa"),
                            Coefficient = 3,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8305),
                            Duration = 46,
                            IsDeleted = false,
                            Name = "Health Education",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("159f42b6-5d53-4e17-ab46-035d438ff528"),
                            Coefficient = 4,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8308),
                            Duration = 47,
                            IsDeleted = false,
                            Name = "Business Studies",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("573ae136-2718-478b-8ef7-0e8db2d20a92"),
                            Coefficient = 5,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8310),
                            Duration = 48,
                            IsDeleted = false,
                            Name = "Law",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("1d4672d3-266e-4128-afbf-ef7db1d2d768"),
                            Coefficient = 6,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8312),
                            Duration = 49,
                            IsDeleted = false,
                            Name = "Engineering Design",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("9b47dea2-98d6-4528-9349-1cac8f7d8bc7"),
                            Coefficient = 2,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8313),
                            Duration = 50,
                            IsDeleted = false,
                            Name = "Information Technology",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("46ba8658-e724-459d-b470-857289287451"),
                            Coefficient = 3,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8316),
                            Duration = 51,
                            IsDeleted = false,
                            Name = "Theater",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("42ff9ab6-5582-4f31-abb5-859efe27702f"),
                            Coefficient = 4,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8318),
                            Duration = 52,
                            IsDeleted = false,
                            Name = "Dance",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("b3946977-e8e7-49c1-a79a-ee84afe0ae72"),
                            Coefficient = 5,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8319),
                            Duration = 53,
                            IsDeleted = false,
                            Name = "Media Studies",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("35f2d025-9f4c-4df7-83d7-ee9fd383bcab"),
                            Coefficient = 6,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8321),
                            Duration = 54,
                            IsDeleted = false,
                            Name = "Anthropology",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("2e649385-a712-40b9-a796-61b3dddb4718"),
                            Coefficient = 2,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8324),
                            Duration = 45,
                            IsDeleted = false,
                            Name = "Ethics",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("4d03bb02-3ac8-44b3-8a06-c2194507c599"),
                            Coefficient = 3,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8325),
                            Duration = 46,
                            IsDeleted = false,
                            Name = "Mathematics",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("729aeb20-ae67-4885-8f70-c2ba9cff2c6b"),
                            Coefficient = 4,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8326),
                            Duration = 47,
                            IsDeleted = false,
                            Name = "Statistics",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("010b6d13-2eac-4174-ad65-01465e63a214"),
                            Coefficient = 5,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8328),
                            Duration = 48,
                            IsDeleted = false,
                            Name = "Cryptography",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("301f120a-7d37-4f90-8798-a22c1bfc4fbe"),
                            Coefficient = 6,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8331),
                            Duration = 49,
                            IsDeleted = false,
                            Name = "Pharmacology",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("eba4be51-b10a-4c2f-a37b-114e40428b35"),
                            Coefficient = 2,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8332),
                            Duration = 50,
                            IsDeleted = false,
                            Name = "Astrophysics",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("25314fd0-5139-4c2d-a26a-eeb92f0394da"),
                            Coefficient = 3,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8334),
                            Duration = 51,
                            IsDeleted = false,
                            Name = "Geology",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("8b9d2463-921e-4964-b972-50968f5d6634"),
                            Coefficient = 4,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8335),
                            Duration = 52,
                            IsDeleted = false,
                            Name = "Oceanography",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("34395123-6532-464b-ac54-f70c286e75e1"),
                            Coefficient = 5,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8338),
                            Duration = 53,
                            IsDeleted = false,
                            Name = "Meteorology",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("39fa0a0c-55b5-4870-820f-369336293ea4"),
                            Coefficient = 6,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8339),
                            Duration = 54,
                            IsDeleted = false,
                            Name = "Robotics",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("39ddf2b8-c2ac-4f3e-954d-227e8ae86cdc"),
                            Coefficient = 2,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8341),
                            Duration = 45,
                            IsDeleted = false,
                            Name = "Machine Learning",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("6b6bd415-0217-4286-a88f-5ba5dbd88c91"),
                            Coefficient = 3,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8342),
                            Duration = 46,
                            IsDeleted = false,
                            Name = "Data Science",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("ce54dc15-b5a7-4f08-b0a0-48efbb7a6d69"),
                            Coefficient = 4,
                            CreatedAt = new DateTime(2024, 8, 18, 17, 2, 28, 56, DateTimeKind.Utc).AddTicks(8345),
                            Duration = 47,
                            IsDeleted = false,
                            Name = "Artificial Intelligence",
                            Semestre = "Semester 2"
                        });
                });

            modelBuilder.Entity("Domain.ExamResult", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("DateValidation")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ExamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsValid")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("PracticalNote")
                        .HasColumnType("float");

                    b.Property<Guid?>("StagiaireId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("TheoreticalNote")
                        .HasColumnType("float");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ExamId");

                    b.ToTable("ExamResults");
                });

            modelBuilder.Entity("Domain.Test", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("FiliereId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Note")
                        .HasColumnType("float");

                    b.Property<string>("TestCorrection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TestStatement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TrainerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UnitOfFormationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FiliereId");

                    b.HasIndex("UnitOfFormationId");

                    b.ToTable("Tests");
                });

            modelBuilder.Entity("Domain.AllResults", b =>
                {
                    b.HasOne("Domain.ExamResult", "ExamResult")
                        .WithMany()
                        .HasForeignKey("ExamResultId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.TestResult", "TestResults")
                        .WithMany()
                        .HasForeignKey("TestResultsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExamResult");

                    b.Navigation("TestResults");
                });

            modelBuilder.Entity("Domain.Entities.Exam", b =>
                {
                    b.HasOne("Domain.EntitiesFromOtherServices.FiliereService.Filiere", "Filiere")
                        .WithMany("Exams")
                        .HasForeignKey("FiliereId");

                    b.HasOne("Domain.EntitiesFromOtherServices.FiliereService.UnitOfFormation", "UnitOfFormation")
                        .WithMany("Exams")
                        .HasForeignKey("UnitOfFormationId");

                    b.Navigation("Filiere");

                    b.Navigation("UnitOfFormation");
                });

            modelBuilder.Entity("Domain.Entities.ExamAttendance", b =>
                {
                    b.HasOne("Domain.Entities.Exam", "Exam")
                        .WithMany("ExamAttendances")
                        .HasForeignKey("ExamId");

                    b.Navigation("Exam");
                });

            modelBuilder.Entity("Domain.Entities.ExamSession", b =>
                {
                    b.HasOne("Domain.Entities.Exam", "Exam")
                        .WithOne("ExamSession")
                        .HasForeignKey("Domain.Entities.ExamSession", "ExamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Room", "Room")
                        .WithMany("ExamSessions")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Supervisor", "Supervisor")
                        .WithMany("ExamSessions")
                        .HasForeignKey("SupervisorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exam");

                    b.Navigation("Room");

                    b.Navigation("Supervisor");
                });

            modelBuilder.Entity("Domain.Entities.IndividualWork", b =>
                {
                    b.HasOne("Domain.Entities.IndividualWorkUOF", "IndividualWorkUOF")
                        .WithMany("IndividualWork")
                        .HasForeignKey("IndividualWorkUOFId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IndividualWorkUOF");
                });

            modelBuilder.Entity("Domain.Entities.TestResult", b =>
                {
                    b.HasOne("Domain.Test", "Test")
                        .WithMany("TestResults")
                        .HasForeignKey("TestId");

                    b.Navigation("Test");
                });

            modelBuilder.Entity("Domain.Entities.VariantsExams", b =>
                {
                    b.HasOne("Domain.Entities.Exam", "Exam")
                        .WithMany("VariantsExams")
                        .HasForeignKey("ExamId");

                    b.HasOne("Domain.EntitiesFromOtherServices.FiliereService.UnitOfFormation", "UnitOfFormation")
                        .WithMany("VariantsExams")
                        .HasForeignKey("UnitOfFormationId");

                    b.Navigation("Exam");

                    b.Navigation("UnitOfFormation");
                });

            modelBuilder.Entity("Domain.EntitiesFromOtherServices.FiliereService.FiliereUnitOfFormation", b =>
                {
                    b.HasOne("Domain.EntitiesFromOtherServices.FiliereService.Filiere", "Filiere")
                        .WithMany("FiliereUnitOfFormations")
                        .HasForeignKey("FiliereId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.EntitiesFromOtherServices.FiliereService.UnitOfFormation", "UnitOfFormation")
                        .WithMany("FiliereUnitOfFormations")
                        .HasForeignKey("UnitOfFormationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Filiere");

                    b.Navigation("UnitOfFormation");
                });

            modelBuilder.Entity("Domain.ExamResult", b =>
                {
                    b.HasOne("Domain.Entities.Exam", "Exam")
                        .WithMany("ExamResults")
                        .HasForeignKey("ExamId");

                    b.Navigation("Exam");
                });

            modelBuilder.Entity("Domain.Test", b =>
                {
                    b.HasOne("Domain.EntitiesFromOtherServices.FiliereService.Filiere", "Filiere")
                        .WithMany("Tests")
                        .HasForeignKey("FiliereId");

                    b.HasOne("Domain.EntitiesFromOtherServices.FiliereService.UnitOfFormation", "UnitOfFormation")
                        .WithMany("Tests")
                        .HasForeignKey("UnitOfFormationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Filiere");

                    b.Navigation("UnitOfFormation");
                });

            modelBuilder.Entity("Domain.Entities.Exam", b =>
                {
                    b.Navigation("ExamAttendances");

                    b.Navigation("ExamResults");

                    b.Navigation("ExamSession")
                        .IsRequired();

                    b.Navigation("VariantsExams");
                });

            modelBuilder.Entity("Domain.Entities.IndividualWorkUOF", b =>
                {
                    b.Navigation("IndividualWork");
                });

            modelBuilder.Entity("Domain.Entities.Room", b =>
                {
                    b.Navigation("ExamSessions");
                });

            modelBuilder.Entity("Domain.Entities.Supervisor", b =>
                {
                    b.Navigation("ExamSessions");
                });

            modelBuilder.Entity("Domain.EntitiesFromOtherServices.FiliereService.Filiere", b =>
                {
                    b.Navigation("Exams");

                    b.Navigation("FiliereUnitOfFormations");

                    b.Navigation("Tests");
                });

            modelBuilder.Entity("Domain.EntitiesFromOtherServices.FiliereService.UnitOfFormation", b =>
                {
                    b.Navigation("Exams");

                    b.Navigation("FiliereUnitOfFormations");

                    b.Navigation("Tests");

                    b.Navigation("VariantsExams");
                });

            modelBuilder.Entity("Domain.Test", b =>
                {
                    b.Navigation("TestResults");
                });
#pragma warning restore 612, 618
        }
    }
}
