// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastracture.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240817192736_a")]
    partial class a
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.AllResults", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ExamResultId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TestResultsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ExamResultId");

                    b.HasIndex("TestResultsId");

                    b.ToTable("AllResults");
                });

            modelBuilder.Entity("Domain.Entities.Exam", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Duration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExamDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ExamType")
                        .HasColumnType("int");

                    b.Property<Guid?>("FiliereId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UnitOfFormationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("YearId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("YearType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FiliereId");

                    b.HasIndex("UnitOfFormationId");

                    b.ToTable("Exams");
                });

            modelBuilder.Entity("Domain.Entities.ExamAttendance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("Attendance")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ExamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("StagiaireId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ExamId");

                    b.ToTable("ExamAttendances");
                });

            modelBuilder.Entity("Domain.Entities.ExamSession", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ExamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("SupervisorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ExamId")
                        .IsUnique();

                    b.HasIndex("RoomId");

                    b.HasIndex("SupervisorId");

                    b.ToTable("ExamSessions");
                });

            modelBuilder.Entity("Domain.Entities.IndividualWork", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StagiaireId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("IndividualWorks");
                });

            modelBuilder.Entity("Domain.Entities.IndividualWorkUOF", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Confusion")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IndividualWorkId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Note")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IndividualWorkId");

                    b.ToTable("IndividualWorkUOFs");
                });

            modelBuilder.Entity("Domain.Entities.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoomType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("Domain.Entities.Supervisor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Supervisors");
                });

            modelBuilder.Entity("Domain.Entities.TestResult", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("DateValidation")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsValid")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Note")
                        .HasColumnType("float");

                    b.Property<Guid?>("StagiaireId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TestId");

                    b.ToTable("TestResults");
                });

            modelBuilder.Entity("Domain.Entities.VariantsExams", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExamCorrection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ExamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ExamStatement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsValid")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NoteMax")
                        .HasColumnType("int");

                    b.Property<Guid?>("TrainerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UnitOfFormationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("VariantName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VariantType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExamId");

                    b.HasIndex("UnitOfFormationId");

                    b.ToTable("VariantsExams");
                });

            modelBuilder.Entity("Domain.EntitiesFromOtherServices.FiliereService.Filiere", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Capacite")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duree")
                        .HasColumnType("int");

                    b.Property<decimal>("FraisInscription")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("GroupCapacity")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MontantAnnuel")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontantMensuel")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MontantTrimestre")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Niveau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomFiliere")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Filieres");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c4677026-cb1e-4741-9685-0f56b9758e65"),
                            Capacite = 50,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(5566),
                            Description = "Description for Computer Science",
                            Duree = 2,
                            FraisInscription = 3000m,
                            GroupCapacity = 10,
                            IsDeleted = false,
                            MontantAnnuel = 12000m,
                            MontantMensuel = 1000m,
                            MontantTrimestre = 3000m,
                            Niveau = "Master",
                            NomFiliere = "Computer Science"
                        },
                        new
                        {
                            Id = new Guid("21aef537-d19e-48bf-a523-23db8e193522"),
                            Capacite = 55,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(5719),
                            Description = "Description for Electrical Engineering",
                            Duree = 3,
                            FraisInscription = 3200m,
                            GroupCapacity = 12,
                            IsDeleted = false,
                            MontantAnnuel = 13000m,
                            MontantMensuel = 1100m,
                            MontantTrimestre = 3250m,
                            Niveau = "Bachelor",
                            NomFiliere = "Electrical Engineering"
                        },
                        new
                        {
                            Id = new Guid("ed9a86d0-0ff8-4585-b8a9-2852465959c2"),
                            Capacite = 60,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(5798),
                            Description = "Description for Mechanical Engineering",
                            Duree = 4,
                            FraisInscription = 3400m,
                            GroupCapacity = 14,
                            IsDeleted = false,
                            MontantAnnuel = 14000m,
                            MontantMensuel = 1200m,
                            MontantTrimestre = 3500m,
                            Niveau = "Master",
                            NomFiliere = "Mechanical Engineering"
                        },
                        new
                        {
                            Id = new Guid("fc17e25e-7453-4924-a4ca-2c036306622b"),
                            Capacite = 65,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(5902),
                            Description = "Description for Civil Engineering",
                            Duree = 5,
                            FraisInscription = 3600m,
                            GroupCapacity = 16,
                            IsDeleted = false,
                            MontantAnnuel = 15000m,
                            MontantMensuel = 1300m,
                            MontantTrimestre = 3750m,
                            Niveau = "Bachelor",
                            NomFiliere = "Civil Engineering"
                        },
                        new
                        {
                            Id = new Guid("a82c929f-5567-4248-b31b-3dac539c18c6"),
                            Capacite = 70,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(5994),
                            Description = "Description for Chemical Engineering",
                            Duree = 2,
                            FraisInscription = 3800m,
                            GroupCapacity = 18,
                            IsDeleted = false,
                            MontantAnnuel = 16000m,
                            MontantMensuel = 1400m,
                            MontantTrimestre = 4000m,
                            Niveau = "Master",
                            NomFiliere = "Chemical Engineering"
                        },
                        new
                        {
                            Id = new Guid("bce4bd92-9359-4303-b629-513e17ccf10f"),
                            Capacite = 75,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(6063),
                            Description = "Description for Biotechnology",
                            Duree = 3,
                            FraisInscription = 4000m,
                            GroupCapacity = 20,
                            IsDeleted = false,
                            MontantAnnuel = 17000m,
                            MontantMensuel = 1500m,
                            MontantTrimestre = 4250m,
                            Niveau = "Bachelor",
                            NomFiliere = "Biotechnology"
                        },
                        new
                        {
                            Id = new Guid("c42fa17d-e149-46a6-b2ae-53e972da0585"),
                            Capacite = 80,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(6159),
                            Description = "Description for Mathematics",
                            Duree = 4,
                            FraisInscription = 4200m,
                            GroupCapacity = 22,
                            IsDeleted = false,
                            MontantAnnuel = 18000m,
                            MontantMensuel = 1600m,
                            MontantTrimestre = 4500m,
                            Niveau = "Master",
                            NomFiliere = "Mathematics"
                        },
                        new
                        {
                            Id = new Guid("310b5fae-6446-4590-b08f-55047f4a78e9"),
                            Capacite = 85,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(6243),
                            Description = "Description for Physics",
                            Duree = 5,
                            FraisInscription = 4400m,
                            GroupCapacity = 24,
                            IsDeleted = false,
                            MontantAnnuel = 19000m,
                            MontantMensuel = 1700m,
                            MontantTrimestre = 4750m,
                            Niveau = "Bachelor",
                            NomFiliere = "Physics"
                        },
                        new
                        {
                            Id = new Guid("1c75a28a-7091-42d4-8a13-5b37515d7a4a"),
                            Capacite = 90,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(6316),
                            Description = "Description for Chemistry",
                            Duree = 2,
                            FraisInscription = 4600m,
                            GroupCapacity = 26,
                            IsDeleted = false,
                            MontantAnnuel = 20000m,
                            MontantMensuel = 1800m,
                            MontantTrimestre = 5000m,
                            Niveau = "Master",
                            NomFiliere = "Chemistry"
                        },
                        new
                        {
                            Id = new Guid("48bc9d15-e2bc-4741-97af-621693a1ebb5"),
                            Capacite = 95,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(6387),
                            Description = "Description for Biology",
                            Duree = 3,
                            FraisInscription = 4800m,
                            GroupCapacity = 28,
                            IsDeleted = false,
                            MontantAnnuel = 21000m,
                            MontantMensuel = 1900m,
                            MontantTrimestre = 5250m,
                            Niveau = "Bachelor",
                            NomFiliere = "Biology"
                        },
                        new
                        {
                            Id = new Guid("e817e565-faad-42b8-9dca-70e03d67bdfd"),
                            Capacite = 100,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(6523),
                            Description = "Description for Environmental Science",
                            Duree = 4,
                            FraisInscription = 5000m,
                            GroupCapacity = 30,
                            IsDeleted = false,
                            MontantAnnuel = 22000m,
                            MontantMensuel = 2000m,
                            MontantTrimestre = 5500m,
                            Niveau = "Master",
                            NomFiliere = "Environmental Science"
                        },
                        new
                        {
                            Id = new Guid("c1c6fbc9-2fde-4c9e-b6cf-78a06f299de7"),
                            Capacite = 105,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(6601),
                            Description = "Description for Economics",
                            Duree = 5,
                            FraisInscription = 5200m,
                            GroupCapacity = 32,
                            IsDeleted = false,
                            MontantAnnuel = 23000m,
                            MontantMensuel = 2100m,
                            MontantTrimestre = 5750m,
                            Niveau = "Bachelor",
                            NomFiliere = "Economics"
                        },
                        new
                        {
                            Id = new Guid("08ce7b0a-5642-4337-80ce-aef919a0b2d9"),
                            Capacite = 110,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(6671),
                            Description = "Description for Psychology",
                            Duree = 2,
                            FraisInscription = 5400m,
                            GroupCapacity = 34,
                            IsDeleted = false,
                            MontantAnnuel = 24000m,
                            MontantMensuel = 2200m,
                            MontantTrimestre = 6000m,
                            Niveau = "Master",
                            NomFiliere = "Psychology"
                        },
                        new
                        {
                            Id = new Guid("16822560-9848-4a88-80f2-bb716ce8c18d"),
                            Capacite = 115,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(6788),
                            Description = "Description for Sociology",
                            Duree = 3,
                            FraisInscription = 5600m,
                            GroupCapacity = 36,
                            IsDeleted = false,
                            MontantAnnuel = 25000m,
                            MontantMensuel = 2300m,
                            MontantTrimestre = 6250m,
                            Niveau = "Bachelor",
                            NomFiliere = "Sociology"
                        },
                        new
                        {
                            Id = new Guid("c094c44b-cac4-4fb9-88e0-c29a43bb7edb"),
                            Capacite = 120,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(6869),
                            Description = "Description for History",
                            Duree = 4,
                            FraisInscription = 5800m,
                            GroupCapacity = 38,
                            IsDeleted = false,
                            MontantAnnuel = 26000m,
                            MontantMensuel = 2400m,
                            MontantTrimestre = 6500m,
                            Niveau = "Master",
                            NomFiliere = "History"
                        },
                        new
                        {
                            Id = new Guid("109d52af-6448-4280-bcb8-c9ed03570c8c"),
                            Capacite = 125,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(6946),
                            Description = "Description for Philosophy",
                            Duree = 5,
                            FraisInscription = 6000m,
                            GroupCapacity = 40,
                            IsDeleted = false,
                            MontantAnnuel = 27000m,
                            MontantMensuel = 2500m,
                            MontantTrimestre = 6750m,
                            Niveau = "Bachelor",
                            NomFiliere = "Philosophy"
                        },
                        new
                        {
                            Id = new Guid("27039911-d1ef-4662-ad01-f5b0260bfa96"),
                            Capacite = 130,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(7036),
                            Description = "Description for Political Science",
                            Duree = 2,
                            FraisInscription = 6200m,
                            GroupCapacity = 42,
                            IsDeleted = false,
                            MontantAnnuel = 28000m,
                            MontantMensuel = 2600m,
                            MontantTrimestre = 7000m,
                            Niveau = "Master",
                            NomFiliere = "Political Science"
                        },
                        new
                        {
                            Id = new Guid("06f1a5e9-8864-40e3-b6d6-f8945f97e205"),
                            Capacite = 135,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(7123),
                            Description = "Description for International Relations",
                            Duree = 3,
                            FraisInscription = 6400m,
                            GroupCapacity = 44,
                            IsDeleted = false,
                            MontantAnnuel = 29000m,
                            MontantMensuel = 2700m,
                            MontantTrimestre = 7250m,
                            Niveau = "Bachelor",
                            NomFiliere = "International Relations"
                        });
                });

            modelBuilder.Entity("Domain.EntitiesFromOtherServices.FiliereService.FiliereUnitOfFormation", b =>
                {
                    b.Property<Guid>("FiliereId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UnitOfFormationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("FiliereId", "UnitOfFormationId");

                    b.HasIndex("UnitOfFormationId");

                    b.ToTable("FiliereUnitOfFormations");

                    b.HasData(
                        new
                        {
                            FiliereId = new Guid("c4677026-cb1e-4741-9685-0f56b9758e65"),
                            UnitOfFormationId = new Guid("311209d5-87ef-48ab-bdb1-2de8f799489e")
                        },
                        new
                        {
                            FiliereId = new Guid("c4677026-cb1e-4741-9685-0f56b9758e65"),
                            UnitOfFormationId = new Guid("1537e747-c7e8-4041-a28b-52f6bb901341")
                        },
                        new
                        {
                            FiliereId = new Guid("c4677026-cb1e-4741-9685-0f56b9758e65"),
                            UnitOfFormationId = new Guid("48568180-12ad-43f5-89dd-9129225f22f4")
                        },
                        new
                        {
                            FiliereId = new Guid("c4677026-cb1e-4741-9685-0f56b9758e65"),
                            UnitOfFormationId = new Guid("f0d60f4b-593b-4087-a5c0-67a29472de48")
                        },
                        new
                        {
                            FiliereId = new Guid("c4677026-cb1e-4741-9685-0f56b9758e65"),
                            UnitOfFormationId = new Guid("cdaab7d5-10a5-4123-b525-cea36fa7deab")
                        },
                        new
                        {
                            FiliereId = new Guid("21aef537-d19e-48bf-a523-23db8e193522"),
                            UnitOfFormationId = new Guid("d3ce4b2e-a5d9-4fed-ac7c-c42a0f651c06")
                        },
                        new
                        {
                            FiliereId = new Guid("21aef537-d19e-48bf-a523-23db8e193522"),
                            UnitOfFormationId = new Guid("8f970b8b-8921-4603-a9ad-dd6b906de72f")
                        },
                        new
                        {
                            FiliereId = new Guid("21aef537-d19e-48bf-a523-23db8e193522"),
                            UnitOfFormationId = new Guid("20eee126-e28f-43e7-a030-64822bdf7bcf")
                        },
                        new
                        {
                            FiliereId = new Guid("21aef537-d19e-48bf-a523-23db8e193522"),
                            UnitOfFormationId = new Guid("0e23a150-6e4f-4d6a-b15a-b11471a8e1ba")
                        },
                        new
                        {
                            FiliereId = new Guid("21aef537-d19e-48bf-a523-23db8e193522"),
                            UnitOfFormationId = new Guid("e57ff198-c141-4046-947a-1627789b2c24")
                        },
                        new
                        {
                            FiliereId = new Guid("ed9a86d0-0ff8-4585-b8a9-2852465959c2"),
                            UnitOfFormationId = new Guid("f7d534df-1cc5-49e2-a838-d4110db84ce5")
                        },
                        new
                        {
                            FiliereId = new Guid("ed9a86d0-0ff8-4585-b8a9-2852465959c2"),
                            UnitOfFormationId = new Guid("939c4728-f5c6-4bc5-bb06-abd2e9c605a3")
                        },
                        new
                        {
                            FiliereId = new Guid("ed9a86d0-0ff8-4585-b8a9-2852465959c2"),
                            UnitOfFormationId = new Guid("79eb4512-4377-4c58-9737-9f4569adce0e")
                        },
                        new
                        {
                            FiliereId = new Guid("ed9a86d0-0ff8-4585-b8a9-2852465959c2"),
                            UnitOfFormationId = new Guid("837f314e-88a8-455b-ae1d-5164350c6981")
                        },
                        new
                        {
                            FiliereId = new Guid("ed9a86d0-0ff8-4585-b8a9-2852465959c2"),
                            UnitOfFormationId = new Guid("73725ec6-095d-4a97-b5aa-ee82058ad8d5")
                        },
                        new
                        {
                            FiliereId = new Guid("fc17e25e-7453-4924-a4ca-2c036306622b"),
                            UnitOfFormationId = new Guid("cdaab7d5-10a5-4123-b525-cea36fa7deab")
                        },
                        new
                        {
                            FiliereId = new Guid("fc17e25e-7453-4924-a4ca-2c036306622b"),
                            UnitOfFormationId = new Guid("14e64259-f462-4e23-ace5-e2ade11424a9")
                        },
                        new
                        {
                            FiliereId = new Guid("fc17e25e-7453-4924-a4ca-2c036306622b"),
                            UnitOfFormationId = new Guid("79899261-31a0-4d37-9f6c-7f494849c4d1")
                        },
                        new
                        {
                            FiliereId = new Guid("fc17e25e-7453-4924-a4ca-2c036306622b"),
                            UnitOfFormationId = new Guid("2b07856f-37b8-41c7-b454-686708db7860")
                        },
                        new
                        {
                            FiliereId = new Guid("fc17e25e-7453-4924-a4ca-2c036306622b"),
                            UnitOfFormationId = new Guid("b541694f-0b8d-409d-ab57-5d1f313633e6")
                        },
                        new
                        {
                            FiliereId = new Guid("a82c929f-5567-4248-b31b-3dac539c18c6"),
                            UnitOfFormationId = new Guid("837f314e-88a8-455b-ae1d-5164350c6981")
                        },
                        new
                        {
                            FiliereId = new Guid("a82c929f-5567-4248-b31b-3dac539c18c6"),
                            UnitOfFormationId = new Guid("67e922fe-580b-4e17-86b4-e9400f8a9fc6")
                        },
                        new
                        {
                            FiliereId = new Guid("a82c929f-5567-4248-b31b-3dac539c18c6"),
                            UnitOfFormationId = new Guid("2b07856f-37b8-41c7-b454-686708db7860")
                        },
                        new
                        {
                            FiliereId = new Guid("a82c929f-5567-4248-b31b-3dac539c18c6"),
                            UnitOfFormationId = new Guid("d3ce4b2e-a5d9-4fed-ac7c-c42a0f651c06")
                        },
                        new
                        {
                            FiliereId = new Guid("a82c929f-5567-4248-b31b-3dac539c18c6"),
                            UnitOfFormationId = new Guid("d8f18de3-100c-4f92-bb38-34f7c487ac0e")
                        },
                        new
                        {
                            FiliereId = new Guid("bce4bd92-9359-4303-b629-513e17ccf10f"),
                            UnitOfFormationId = new Guid("e57ff198-c141-4046-947a-1627789b2c24")
                        },
                        new
                        {
                            FiliereId = new Guid("bce4bd92-9359-4303-b629-513e17ccf10f"),
                            UnitOfFormationId = new Guid("0e23a150-6e4f-4d6a-b15a-b11471a8e1ba")
                        },
                        new
                        {
                            FiliereId = new Guid("bce4bd92-9359-4303-b629-513e17ccf10f"),
                            UnitOfFormationId = new Guid("f7d534df-1cc5-49e2-a838-d4110db84ce5")
                        },
                        new
                        {
                            FiliereId = new Guid("bce4bd92-9359-4303-b629-513e17ccf10f"),
                            UnitOfFormationId = new Guid("d3ce4b2e-a5d9-4fed-ac7c-c42a0f651c06")
                        },
                        new
                        {
                            FiliereId = new Guid("bce4bd92-9359-4303-b629-513e17ccf10f"),
                            UnitOfFormationId = new Guid("40a92fea-dcfc-4ca8-afea-3125d809555a")
                        },
                        new
                        {
                            FiliereId = new Guid("c42fa17d-e149-46a6-b2ae-53e972da0585"),
                            UnitOfFormationId = new Guid("d8f18de3-100c-4f92-bb38-34f7c487ac0e")
                        },
                        new
                        {
                            FiliereId = new Guid("c42fa17d-e149-46a6-b2ae-53e972da0585"),
                            UnitOfFormationId = new Guid("18508609-98c1-4560-b951-0a81acc5c269")
                        },
                        new
                        {
                            FiliereId = new Guid("c42fa17d-e149-46a6-b2ae-53e972da0585"),
                            UnitOfFormationId = new Guid("b541694f-0b8d-409d-ab57-5d1f313633e6")
                        },
                        new
                        {
                            FiliereId = new Guid("c42fa17d-e149-46a6-b2ae-53e972da0585"),
                            UnitOfFormationId = new Guid("20eee126-e28f-43e7-a030-64822bdf7bcf")
                        },
                        new
                        {
                            FiliereId = new Guid("c42fa17d-e149-46a6-b2ae-53e972da0585"),
                            UnitOfFormationId = new Guid("311209d5-87ef-48ab-bdb1-2de8f799489e")
                        },
                        new
                        {
                            FiliereId = new Guid("310b5fae-6446-4590-b08f-55047f4a78e9"),
                            UnitOfFormationId = new Guid("fefa8493-aef6-479f-883b-b36437846b37")
                        },
                        new
                        {
                            FiliereId = new Guid("310b5fae-6446-4590-b08f-55047f4a78e9"),
                            UnitOfFormationId = new Guid("2b07856f-37b8-41c7-b454-686708db7860")
                        },
                        new
                        {
                            FiliereId = new Guid("310b5fae-6446-4590-b08f-55047f4a78e9"),
                            UnitOfFormationId = new Guid("73725ec6-095d-4a97-b5aa-ee82058ad8d5")
                        },
                        new
                        {
                            FiliereId = new Guid("310b5fae-6446-4590-b08f-55047f4a78e9"),
                            UnitOfFormationId = new Guid("884164d0-555c-4d3e-aa60-1bedb6ce15ac")
                        },
                        new
                        {
                            FiliereId = new Guid("310b5fae-6446-4590-b08f-55047f4a78e9"),
                            UnitOfFormationId = new Guid("b3a48be7-c0e8-4276-ac57-c9441adbeefa")
                        },
                        new
                        {
                            FiliereId = new Guid("1c75a28a-7091-42d4-8a13-5b37515d7a4a"),
                            UnitOfFormationId = new Guid("0dae7c2f-ad6b-4a80-bde3-41feabc3b5b7")
                        },
                        new
                        {
                            FiliereId = new Guid("1c75a28a-7091-42d4-8a13-5b37515d7a4a"),
                            UnitOfFormationId = new Guid("b3a48be7-c0e8-4276-ac57-c9441adbeefa")
                        },
                        new
                        {
                            FiliereId = new Guid("1c75a28a-7091-42d4-8a13-5b37515d7a4a"),
                            UnitOfFormationId = new Guid("c9fd2568-f53b-484d-b5c1-cf443e6c2397")
                        },
                        new
                        {
                            FiliereId = new Guid("1c75a28a-7091-42d4-8a13-5b37515d7a4a"),
                            UnitOfFormationId = new Guid("2b07856f-37b8-41c7-b454-686708db7860")
                        },
                        new
                        {
                            FiliereId = new Guid("1c75a28a-7091-42d4-8a13-5b37515d7a4a"),
                            UnitOfFormationId = new Guid("8ece8c00-365c-41fa-8e54-a4a28dab1f90")
                        },
                        new
                        {
                            FiliereId = new Guid("48bc9d15-e2bc-4741-97af-621693a1ebb5"),
                            UnitOfFormationId = new Guid("884164d0-555c-4d3e-aa60-1bedb6ce15ac")
                        },
                        new
                        {
                            FiliereId = new Guid("48bc9d15-e2bc-4741-97af-621693a1ebb5"),
                            UnitOfFormationId = new Guid("dc0ddd2c-6bf5-4609-81d4-d2f273abe3b8")
                        },
                        new
                        {
                            FiliereId = new Guid("48bc9d15-e2bc-4741-97af-621693a1ebb5"),
                            UnitOfFormationId = new Guid("fa04e391-0bcf-467a-98cc-5e5422b0592b")
                        },
                        new
                        {
                            FiliereId = new Guid("48bc9d15-e2bc-4741-97af-621693a1ebb5"),
                            UnitOfFormationId = new Guid("cdaab7d5-10a5-4123-b525-cea36fa7deab")
                        },
                        new
                        {
                            FiliereId = new Guid("48bc9d15-e2bc-4741-97af-621693a1ebb5"),
                            UnitOfFormationId = new Guid("e81dec50-5c71-41a6-b84f-6d0f5a7c6e07")
                        },
                        new
                        {
                            FiliereId = new Guid("e817e565-faad-42b8-9dca-70e03d67bdfd"),
                            UnitOfFormationId = new Guid("2b552411-15d2-4d9b-8e7b-249209989106")
                        },
                        new
                        {
                            FiliereId = new Guid("e817e565-faad-42b8-9dca-70e03d67bdfd"),
                            UnitOfFormationId = new Guid("dc0ddd2c-6bf5-4609-81d4-d2f273abe3b8")
                        },
                        new
                        {
                            FiliereId = new Guid("e817e565-faad-42b8-9dca-70e03d67bdfd"),
                            UnitOfFormationId = new Guid("73725ec6-095d-4a97-b5aa-ee82058ad8d5")
                        },
                        new
                        {
                            FiliereId = new Guid("e817e565-faad-42b8-9dca-70e03d67bdfd"),
                            UnitOfFormationId = new Guid("4a5dbf75-677b-4b23-99fe-51993fd6749b")
                        },
                        new
                        {
                            FiliereId = new Guid("e817e565-faad-42b8-9dca-70e03d67bdfd"),
                            UnitOfFormationId = new Guid("e57ff198-c141-4046-947a-1627789b2c24")
                        },
                        new
                        {
                            FiliereId = new Guid("c1c6fbc9-2fde-4c9e-b6cf-78a06f299de7"),
                            UnitOfFormationId = new Guid("3ee88483-a5e8-4594-b2a7-e63b272a79df")
                        },
                        new
                        {
                            FiliereId = new Guid("c1c6fbc9-2fde-4c9e-b6cf-78a06f299de7"),
                            UnitOfFormationId = new Guid("311209d5-87ef-48ab-bdb1-2de8f799489e")
                        },
                        new
                        {
                            FiliereId = new Guid("c1c6fbc9-2fde-4c9e-b6cf-78a06f299de7"),
                            UnitOfFormationId = new Guid("90c03258-34b5-4e40-bbd8-15ebdd0a46e2")
                        },
                        new
                        {
                            FiliereId = new Guid("c1c6fbc9-2fde-4c9e-b6cf-78a06f299de7"),
                            UnitOfFormationId = new Guid("67e922fe-580b-4e17-86b4-e9400f8a9fc6")
                        },
                        new
                        {
                            FiliereId = new Guid("c1c6fbc9-2fde-4c9e-b6cf-78a06f299de7"),
                            UnitOfFormationId = new Guid("79eb4512-4377-4c58-9737-9f4569adce0e")
                        },
                        new
                        {
                            FiliereId = new Guid("08ce7b0a-5642-4337-80ce-aef919a0b2d9"),
                            UnitOfFormationId = new Guid("939c4728-f5c6-4bc5-bb06-abd2e9c605a3")
                        },
                        new
                        {
                            FiliereId = new Guid("08ce7b0a-5642-4337-80ce-aef919a0b2d9"),
                            UnitOfFormationId = new Guid("8f970b8b-8921-4603-a9ad-dd6b906de72f")
                        },
                        new
                        {
                            FiliereId = new Guid("08ce7b0a-5642-4337-80ce-aef919a0b2d9"),
                            UnitOfFormationId = new Guid("202e0f69-9e3e-407a-a5e6-45050421f5b0")
                        },
                        new
                        {
                            FiliereId = new Guid("08ce7b0a-5642-4337-80ce-aef919a0b2d9"),
                            UnitOfFormationId = new Guid("73725ec6-095d-4a97-b5aa-ee82058ad8d5")
                        },
                        new
                        {
                            FiliereId = new Guid("08ce7b0a-5642-4337-80ce-aef919a0b2d9"),
                            UnitOfFormationId = new Guid("884164d0-555c-4d3e-aa60-1bedb6ce15ac")
                        },
                        new
                        {
                            FiliereId = new Guid("16822560-9848-4a88-80f2-bb716ce8c18d"),
                            UnitOfFormationId = new Guid("e57ff198-c141-4046-947a-1627789b2c24")
                        },
                        new
                        {
                            FiliereId = new Guid("16822560-9848-4a88-80f2-bb716ce8c18d"),
                            UnitOfFormationId = new Guid("ced111e1-316b-4dc3-a76b-f7fc58044dfc")
                        },
                        new
                        {
                            FiliereId = new Guid("16822560-9848-4a88-80f2-bb716ce8c18d"),
                            UnitOfFormationId = new Guid("db872b23-8a5e-4dd7-bd21-c5d325f1bec5")
                        },
                        new
                        {
                            FiliereId = new Guid("16822560-9848-4a88-80f2-bb716ce8c18d"),
                            UnitOfFormationId = new Guid("9a397fcc-7cff-40da-bda7-6373d921df48")
                        },
                        new
                        {
                            FiliereId = new Guid("16822560-9848-4a88-80f2-bb716ce8c18d"),
                            UnitOfFormationId = new Guid("202e0f69-9e3e-407a-a5e6-45050421f5b0")
                        },
                        new
                        {
                            FiliereId = new Guid("c094c44b-cac4-4fb9-88e0-c29a43bb7edb"),
                            UnitOfFormationId = new Guid("199f23ff-5446-4d36-bdb8-e3cb65565e41")
                        },
                        new
                        {
                            FiliereId = new Guid("c094c44b-cac4-4fb9-88e0-c29a43bb7edb"),
                            UnitOfFormationId = new Guid("939c4728-f5c6-4bc5-bb06-abd2e9c605a3")
                        },
                        new
                        {
                            FiliereId = new Guid("c094c44b-cac4-4fb9-88e0-c29a43bb7edb"),
                            UnitOfFormationId = new Guid("8f970b8b-8921-4603-a9ad-dd6b906de72f")
                        },
                        new
                        {
                            FiliereId = new Guid("c094c44b-cac4-4fb9-88e0-c29a43bb7edb"),
                            UnitOfFormationId = new Guid("3ee88483-a5e8-4594-b2a7-e63b272a79df")
                        },
                        new
                        {
                            FiliereId = new Guid("c094c44b-cac4-4fb9-88e0-c29a43bb7edb"),
                            UnitOfFormationId = new Guid("4a787718-2085-450c-8e41-e965134a718a")
                        },
                        new
                        {
                            FiliereId = new Guid("109d52af-6448-4280-bcb8-c9ed03570c8c"),
                            UnitOfFormationId = new Guid("40a92fea-dcfc-4ca8-afea-3125d809555a")
                        },
                        new
                        {
                            FiliereId = new Guid("109d52af-6448-4280-bcb8-c9ed03570c8c"),
                            UnitOfFormationId = new Guid("2b552411-15d2-4d9b-8e7b-249209989106")
                        },
                        new
                        {
                            FiliereId = new Guid("109d52af-6448-4280-bcb8-c9ed03570c8c"),
                            UnitOfFormationId = new Guid("f7d534df-1cc5-49e2-a838-d4110db84ce5")
                        },
                        new
                        {
                            FiliereId = new Guid("109d52af-6448-4280-bcb8-c9ed03570c8c"),
                            UnitOfFormationId = new Guid("4a5dbf75-677b-4b23-99fe-51993fd6749b")
                        },
                        new
                        {
                            FiliereId = new Guid("109d52af-6448-4280-bcb8-c9ed03570c8c"),
                            UnitOfFormationId = new Guid("c9fd2568-f53b-484d-b5c1-cf443e6c2397")
                        },
                        new
                        {
                            FiliereId = new Guid("27039911-d1ef-4662-ad01-f5b0260bfa96"),
                            UnitOfFormationId = new Guid("f0d60f4b-593b-4087-a5c0-67a29472de48")
                        },
                        new
                        {
                            FiliereId = new Guid("27039911-d1ef-4662-ad01-f5b0260bfa96"),
                            UnitOfFormationId = new Guid("311209d5-87ef-48ab-bdb1-2de8f799489e")
                        },
                        new
                        {
                            FiliereId = new Guid("27039911-d1ef-4662-ad01-f5b0260bfa96"),
                            UnitOfFormationId = new Guid("48568180-12ad-43f5-89dd-9129225f22f4")
                        },
                        new
                        {
                            FiliereId = new Guid("27039911-d1ef-4662-ad01-f5b0260bfa96"),
                            UnitOfFormationId = new Guid("202e0f69-9e3e-407a-a5e6-45050421f5b0")
                        },
                        new
                        {
                            FiliereId = new Guid("27039911-d1ef-4662-ad01-f5b0260bfa96"),
                            UnitOfFormationId = new Guid("4a787718-2085-450c-8e41-e965134a718a")
                        },
                        new
                        {
                            FiliereId = new Guid("06f1a5e9-8864-40e3-b6d6-f8945f97e205"),
                            UnitOfFormationId = new Guid("e81dec50-5c71-41a6-b84f-6d0f5a7c6e07")
                        },
                        new
                        {
                            FiliereId = new Guid("06f1a5e9-8864-40e3-b6d6-f8945f97e205"),
                            UnitOfFormationId = new Guid("dc0ddd2c-6bf5-4609-81d4-d2f273abe3b8")
                        },
                        new
                        {
                            FiliereId = new Guid("06f1a5e9-8864-40e3-b6d6-f8945f97e205"),
                            UnitOfFormationId = new Guid("e57ff198-c141-4046-947a-1627789b2c24")
                        },
                        new
                        {
                            FiliereId = new Guid("06f1a5e9-8864-40e3-b6d6-f8945f97e205"),
                            UnitOfFormationId = new Guid("d8f18de3-100c-4f92-bb38-34f7c487ac0e")
                        },
                        new
                        {
                            FiliereId = new Guid("06f1a5e9-8864-40e3-b6d6-f8945f97e205"),
                            UnitOfFormationId = new Guid("2b552411-15d2-4d9b-8e7b-249209989106")
                        });
                });

            modelBuilder.Entity("Domain.EntitiesFromOtherServices.FiliereService.UnitOfFormation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Coefficient")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Semestre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("UnitOfFormations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e7cc0311-1a87-460f-8f36-9312d422335a"),
                            Coefficient = 2,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(5358),
                            Duration = 45,
                            IsDeleted = false,
                            Name = "Français",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("c4a44fd4-fb01-4edf-beab-fabfb796214a"),
                            Coefficient = 3,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(5368),
                            Duration = 46,
                            IsDeleted = false,
                            Name = "English",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("787bfc07-b838-4adb-bca3-7dd43f75731e"),
                            Coefficient = 4,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(5436),
                            Duration = 47,
                            IsDeleted = false,
                            Name = "Math",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("2b552411-15d2-4d9b-8e7b-249209989106"),
                            Coefficient = 5,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(5438),
                            Duration = 48,
                            IsDeleted = false,
                            Name = "History",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("4a5dbf75-677b-4b23-99fe-51993fd6749b"),
                            Coefficient = 6,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(5439),
                            Duration = 49,
                            IsDeleted = false,
                            Name = "Geography",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("aaecf8b4-c668-4e34-bfad-31cb9b82b640"),
                            Coefficient = 2,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(5442),
                            Duration = 50,
                            IsDeleted = false,
                            Name = "Biology",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("311209d5-87ef-48ab-bdb1-2de8f799489e"),
                            Coefficient = 3,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(5447),
                            Duration = 51,
                            IsDeleted = false,
                            Name = "Chemistry",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("2b07856f-37b8-41c7-b454-686708db7860"),
                            Coefficient = 4,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(5449),
                            Duration = 52,
                            IsDeleted = false,
                            Name = "Physics",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("199f23ff-5446-4d36-bdb8-e3cb65565e41"),
                            Coefficient = 5,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(5450),
                            Duration = 53,
                            IsDeleted = false,
                            Name = "Computer Science",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("14e64259-f462-4e23-ace5-e2ade11424a9"),
                            Coefficient = 6,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(5453),
                            Duration = 54,
                            IsDeleted = false,
                            Name = "Art",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("9a397fcc-7cff-40da-bda7-6373d921df48"),
                            Coefficient = 2,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(5456),
                            Duration = 45,
                            IsDeleted = false,
                            Name = "Music",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("0dae7c2f-ad6b-4a80-bde3-41feabc3b5b7"),
                            Coefficient = 3,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(5457),
                            Duration = 46,
                            IsDeleted = false,
                            Name = "Physical Education",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("b3a48be7-c0e8-4276-ac57-c9441adbeefa"),
                            Coefficient = 4,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(5459),
                            Duration = 47,
                            IsDeleted = false,
                            Name = "Economics",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("48568180-12ad-43f5-89dd-9129225f22f4"),
                            Coefficient = 5,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(5460),
                            Duration = 48,
                            IsDeleted = false,
                            Name = "Psychology",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("3ee88483-a5e8-4594-b2a7-e63b272a79df"),
                            Coefficient = 6,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(5463),
                            Duration = 49,
                            IsDeleted = false,
                            Name = "Philosophy",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("7995ba21-9efa-4706-8ef6-5936c67f6a32"),
                            Coefficient = 2,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(5465),
                            Duration = 50,
                            IsDeleted = false,
                            Name = "Sociology",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("73725ec6-095d-4a97-b5aa-ee82058ad8d5"),
                            Coefficient = 3,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(5466),
                            Duration = 51,
                            IsDeleted = false,
                            Name = "Political Science",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("8ece8c00-365c-41fa-8e54-a4a28dab1f90"),
                            Coefficient = 4,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(5469),
                            Duration = 52,
                            IsDeleted = false,
                            Name = "Statistics",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("bc3f153a-363b-4dbf-a0ad-1123da09683d"),
                            Coefficient = 5,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(5472),
                            Duration = 53,
                            IsDeleted = false,
                            Name = "Engineering",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("cdaab7d5-10a5-4123-b525-cea36fa7deab"),
                            Coefficient = 6,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(5473),
                            Duration = 54,
                            IsDeleted = false,
                            Name = "Literature",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("f7d534df-1cc5-49e2-a838-d4110db84ce5"),
                            Coefficient = 2,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(5474),
                            Duration = 45,
                            IsDeleted = false,
                            Name = "Spanish",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("20eee126-e28f-43e7-a030-64822bdf7bcf"),
                            Coefficient = 3,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(5476),
                            Duration = 46,
                            IsDeleted = false,
                            Name = "German",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("f0d60f4b-593b-4087-a5c0-67a29472de48"),
                            Coefficient = 4,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(5479),
                            Duration = 47,
                            IsDeleted = false,
                            Name = "Italian",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("67e922fe-580b-4e17-86b4-e9400f8a9fc6"),
                            Coefficient = 5,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(5480),
                            Duration = 48,
                            IsDeleted = false,
                            Name = "Chinese",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("fa04e391-0bcf-467a-98cc-5e5422b0592b"),
                            Coefficient = 6,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(5482),
                            Duration = 49,
                            IsDeleted = false,
                            Name = "Japanese",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("d8f18de3-100c-4f92-bb38-34f7c487ac0e"),
                            Coefficient = 2,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(5483),
                            Duration = 50,
                            IsDeleted = false,
                            Name = "Arabic",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("e2789618-da93-4fe2-ac7a-e8c446a91af8"),
                            Coefficient = 3,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(5486),
                            Duration = 51,
                            IsDeleted = false,
                            Name = "Latin",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("4a787718-2085-450c-8e41-e965134a718a"),
                            Coefficient = 4,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(5488),
                            Duration = 52,
                            IsDeleted = false,
                            Name = "Greek",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("dc0ddd2c-6bf5-4609-81d4-d2f273abe3b8"),
                            Coefficient = 5,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(5489),
                            Duration = 53,
                            IsDeleted = false,
                            Name = "Religion",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("d3ce4b2e-a5d9-4fed-ac7c-c42a0f651c06"),
                            Coefficient = 6,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(5490),
                            Duration = 54,
                            IsDeleted = false,
                            Name = "Astronomy",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("40a92fea-dcfc-4ca8-afea-3125d809555a"),
                            Coefficient = 2,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(5494),
                            Duration = 45,
                            IsDeleted = false,
                            Name = "Environmental Science",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("0e23a150-6e4f-4d6a-b15a-b11471a8e1ba"),
                            Coefficient = 3,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(5495),
                            Duration = 46,
                            IsDeleted = false,
                            Name = "Health Education",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("c9fd2568-f53b-484d-b5c1-cf443e6c2397"),
                            Coefficient = 4,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(5497),
                            Duration = 47,
                            IsDeleted = false,
                            Name = "Business Studies",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("79eb4512-4377-4c58-9737-9f4569adce0e"),
                            Coefficient = 5,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(5499),
                            Duration = 48,
                            IsDeleted = false,
                            Name = "Law",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("a4d7778f-86bb-4676-9055-d23eb4ba84ea"),
                            Coefficient = 6,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(5502),
                            Duration = 49,
                            IsDeleted = false,
                            Name = "Engineering Design",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("c1c85210-511e-4ecf-8730-35d4b42e2f61"),
                            Coefficient = 2,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(5504),
                            Duration = 50,
                            IsDeleted = false,
                            Name = "Information Technology",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("fefa8493-aef6-479f-883b-b36437846b37"),
                            Coefficient = 3,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(5505),
                            Duration = 51,
                            IsDeleted = false,
                            Name = "Theater",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("b2403b7b-ad61-4c68-845f-1ffc8a170e4f"),
                            Coefficient = 4,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(5507),
                            Duration = 52,
                            IsDeleted = false,
                            Name = "Dance",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("db872b23-8a5e-4dd7-bd21-c5d325f1bec5"),
                            Coefficient = 5,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(5510),
                            Duration = 53,
                            IsDeleted = false,
                            Name = "Media Studies",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("90c03258-34b5-4e40-bbd8-15ebdd0a46e2"),
                            Coefficient = 6,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(5511),
                            Duration = 54,
                            IsDeleted = false,
                            Name = "Anthropology",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("79899261-31a0-4d37-9f6c-7f494849c4d1"),
                            Coefficient = 2,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(5512),
                            Duration = 45,
                            IsDeleted = false,
                            Name = "Ethics",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("202e0f69-9e3e-407a-a5e6-45050421f5b0"),
                            Coefficient = 3,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(5514),
                            Duration = 46,
                            IsDeleted = false,
                            Name = "Mathematics",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("ced111e1-316b-4dc3-a76b-f7fc58044dfc"),
                            Coefficient = 4,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(5517),
                            Duration = 47,
                            IsDeleted = false,
                            Name = "Statistics",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("588dae38-ec94-44a5-b996-b1435d1d1447"),
                            Coefficient = 5,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(5518),
                            Duration = 48,
                            IsDeleted = false,
                            Name = "Cryptography",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("18508609-98c1-4560-b951-0a81acc5c269"),
                            Coefficient = 6,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(5520),
                            Duration = 49,
                            IsDeleted = false,
                            Name = "Pharmacology",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("8f970b8b-8921-4603-a9ad-dd6b906de72f"),
                            Coefficient = 2,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(5521),
                            Duration = 50,
                            IsDeleted = false,
                            Name = "Astrophysics",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("884164d0-555c-4d3e-aa60-1bedb6ce15ac"),
                            Coefficient = 3,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(5552),
                            Duration = 51,
                            IsDeleted = false,
                            Name = "Geology",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("e57ff198-c141-4046-947a-1627789b2c24"),
                            Coefficient = 4,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(5554),
                            Duration = 52,
                            IsDeleted = false,
                            Name = "Oceanography",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("1537e747-c7e8-4041-a28b-52f6bb901341"),
                            Coefficient = 5,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(5555),
                            Duration = 53,
                            IsDeleted = false,
                            Name = "Meteorology",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("939c4728-f5c6-4bc5-bb06-abd2e9c605a3"),
                            Coefficient = 6,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(5557),
                            Duration = 54,
                            IsDeleted = false,
                            Name = "Robotics",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("e81dec50-5c71-41a6-b84f-6d0f5a7c6e07"),
                            Coefficient = 2,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(5560),
                            Duration = 45,
                            IsDeleted = false,
                            Name = "Machine Learning",
                            Semestre = "Semester 2"
                        },
                        new
                        {
                            Id = new Guid("b541694f-0b8d-409d-ab57-5d1f313633e6"),
                            Coefficient = 3,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(5561),
                            Duration = 46,
                            IsDeleted = false,
                            Name = "Data Science",
                            Semestre = "Semester 1"
                        },
                        new
                        {
                            Id = new Guid("837f314e-88a8-455b-ae1d-5164350c6981"),
                            Coefficient = 4,
                            CreatedAt = new DateTime(2024, 8, 17, 19, 27, 35, 390, DateTimeKind.Utc).AddTicks(5563),
                            Duration = 47,
                            IsDeleted = false,
                            Name = "Artificial Intelligence",
                            Semestre = "Semester 2"
                        });
                });

            modelBuilder.Entity("Domain.ExamResult", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("DateValidation")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ExamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsValid")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("PracticalNote")
                        .HasColumnType("float");

                    b.Property<Guid?>("StagiaireId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("TheoreticalNote")
                        .HasColumnType("float");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ExamId");

                    b.ToTable("ExamResults");
                });

            modelBuilder.Entity("Domain.Test", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("FiliereId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Note")
                        .HasColumnType("float");

                    b.Property<string>("TestCorrection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TestStatement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TrainerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UnitOfFormationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FiliereId");

                    b.HasIndex("UnitOfFormationId");

                    b.ToTable("Tests");
                });

            modelBuilder.Entity("Domain.AllResults", b =>
                {
                    b.HasOne("Domain.ExamResult", "ExamResult")
                        .WithMany()
                        .HasForeignKey("ExamResultId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.TestResult", "TestResults")
                        .WithMany()
                        .HasForeignKey("TestResultsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExamResult");

                    b.Navigation("TestResults");
                });

            modelBuilder.Entity("Domain.Entities.Exam", b =>
                {
                    b.HasOne("Domain.EntitiesFromOtherServices.FiliereService.Filiere", "Filiere")
                        .WithMany("Exams")
                        .HasForeignKey("FiliereId");

                    b.HasOne("Domain.EntitiesFromOtherServices.FiliereService.UnitOfFormation", "UnitOfFormation")
                        .WithMany("Exams")
                        .HasForeignKey("UnitOfFormationId");

                    b.Navigation("Filiere");

                    b.Navigation("UnitOfFormation");
                });

            modelBuilder.Entity("Domain.Entities.ExamAttendance", b =>
                {
                    b.HasOne("Domain.Entities.Exam", "Exam")
                        .WithMany("ExamAttendances")
                        .HasForeignKey("ExamId");

                    b.Navigation("Exam");
                });

            modelBuilder.Entity("Domain.Entities.ExamSession", b =>
                {
                    b.HasOne("Domain.Entities.Exam", "Exam")
                        .WithOne("ExamSession")
                        .HasForeignKey("Domain.Entities.ExamSession", "ExamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Room", "Room")
                        .WithMany("ExamSessions")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Supervisor", "Supervisor")
                        .WithMany("ExamSessions")
                        .HasForeignKey("SupervisorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exam");

                    b.Navigation("Room");

                    b.Navigation("Supervisor");
                });

            modelBuilder.Entity("Domain.Entities.IndividualWorkUOF", b =>
                {
                    b.HasOne("Domain.Entities.IndividualWork", "IndividualWork")
                        .WithMany("individualWorkUOFs")
                        .HasForeignKey("IndividualWorkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IndividualWork");
                });

            modelBuilder.Entity("Domain.Entities.TestResult", b =>
                {
                    b.HasOne("Domain.Test", "Test")
                        .WithMany("TestResults")
                        .HasForeignKey("TestId");

                    b.Navigation("Test");
                });

            modelBuilder.Entity("Domain.Entities.VariantsExams", b =>
                {
                    b.HasOne("Domain.Entities.Exam", "Exam")
                        .WithMany("VariantsExams")
                        .HasForeignKey("ExamId");

                    b.HasOne("Domain.EntitiesFromOtherServices.FiliereService.UnitOfFormation", "UnitOfFormation")
                        .WithMany("VariantsExams")
                        .HasForeignKey("UnitOfFormationId");

                    b.Navigation("Exam");

                    b.Navigation("UnitOfFormation");
                });

            modelBuilder.Entity("Domain.EntitiesFromOtherServices.FiliereService.FiliereUnitOfFormation", b =>
                {
                    b.HasOne("Domain.EntitiesFromOtherServices.FiliereService.Filiere", "Filiere")
                        .WithMany("FiliereUnitOfFormations")
                        .HasForeignKey("FiliereId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.EntitiesFromOtherServices.FiliereService.UnitOfFormation", "UnitOfFormation")
                        .WithMany("FiliereUnitOfFormations")
                        .HasForeignKey("UnitOfFormationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Filiere");

                    b.Navigation("UnitOfFormation");
                });

            modelBuilder.Entity("Domain.ExamResult", b =>
                {
                    b.HasOne("Domain.Entities.Exam", "Exam")
                        .WithMany("ExamResults")
                        .HasForeignKey("ExamId");

                    b.Navigation("Exam");
                });

            modelBuilder.Entity("Domain.Test", b =>
                {
                    b.HasOne("Domain.EntitiesFromOtherServices.FiliereService.Filiere", "Filiere")
                        .WithMany("Tests")
                        .HasForeignKey("FiliereId");

                    b.HasOne("Domain.EntitiesFromOtherServices.FiliereService.UnitOfFormation", "UnitOfFormation")
                        .WithMany("Tests")
                        .HasForeignKey("UnitOfFormationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Filiere");

                    b.Navigation("UnitOfFormation");
                });

            modelBuilder.Entity("Domain.Entities.Exam", b =>
                {
                    b.Navigation("ExamAttendances");

                    b.Navigation("ExamResults");

                    b.Navigation("ExamSession")
                        .IsRequired();

                    b.Navigation("VariantsExams");
                });

            modelBuilder.Entity("Domain.Entities.IndividualWork", b =>
                {
                    b.Navigation("individualWorkUOFs");
                });

            modelBuilder.Entity("Domain.Entities.Room", b =>
                {
                    b.Navigation("ExamSessions");
                });

            modelBuilder.Entity("Domain.Entities.Supervisor", b =>
                {
                    b.Navigation("ExamSessions");
                });

            modelBuilder.Entity("Domain.EntitiesFromOtherServices.FiliereService.Filiere", b =>
                {
                    b.Navigation("Exams");

                    b.Navigation("FiliereUnitOfFormations");

                    b.Navigation("Tests");
                });

            modelBuilder.Entity("Domain.EntitiesFromOtherServices.FiliereService.UnitOfFormation", b =>
                {
                    b.Navigation("Exams");

                    b.Navigation("FiliereUnitOfFormations");

                    b.Navigation("Tests");

                    b.Navigation("VariantsExams");
                });

            modelBuilder.Entity("Domain.Test", b =>
                {
                    b.Navigation("TestResults");
                });
#pragma warning restore 612, 618
        }
    }
}
